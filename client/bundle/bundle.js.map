{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap b110b7d2a2e03adb407d","webpack:///./shared/config/index.js","webpack:///./shared/lot.js","webpack:///./client/js/client/controllers/entities/entity.js","webpack:///./client/js/client/controllers/entitycontroller.js","webpack:///./client/js/client/controllers/update.js","webpack:///./shared/initCore.js","webpack:///./client/js/game.js","webpack:///./client/js/canvas/ViewBall.js","webpack:///./client/js/canvas/ViewFood.js","webpack:///./client/js/canvas/ViewMap.js","webpack:///./client/js/canvas/ViewPlayer.js","webpack:///./client/js/canvas/ViewShoot.js","webpack:///./client/js/canvas/camera.js","webpack:///./client/js/canvas/canvas.js","webpack:///./client/js/canvas/hud.js","webpack:///./client/js/canvas/textures.js","webpack:///./client/js/client/client.js","webpack:///./client/js/client/controllers/ballcontroller.js","webpack:///./client/js/client/controllers/entities/ball.js","webpack:///./client/js/client/controllers/entities/food.js","webpack:///./client/js/client/controllers/entities/player.js","webpack:///./client/js/client/controllers/entities/shoot.js","webpack:///./client/js/client/controllers/foodcontroller.js","webpack:///./client/js/client/controllers/playercontroller.js","webpack:///./client/js/client/controllers/shootcontroller.js","webpack:///./client/js/client/controllers/statecontroller.js","webpack:///./client/js/client/others/chat.js","webpack:///./client/js/client/others/debug.js","webpack:///./client/js/client/socket/packet/Clear.js","webpack:///./client/js/client/socket/packet/Input.js","webpack:///./client/js/client/socket/packet/Submit.js","webpack:///./client/js/client/socket/packet/index.js","webpack:///./client/js/client/socket/receiver.js","webpack:///./client/js/client/socket/sender.js","webpack:///./client/js/gameloop.js","webpack:///./client/js/keyboard.js","webpack:///./client/js/mouse.js","webpack:///./shared/BufferReader.js","webpack:///./shared/BufferWriter.js","webpack:///./shared/config/config.development.js","webpack:///./shared/config/config.global.js","webpack:///./shared/core.js","webpack:///./shared/fps.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","cfg","_typeof","Symbol","iterator","obj","constructor","getScaleMass","mass","Math","sqrt","scaleMassFactor","getRingRadius","ringInitSize","ringFactor","getFoodRadius","foodInitSize","foodFactor","getFoodSpriteRadius","foodSpriteInitSize","foodSpriteFactor","getBallRadius","ballInitSize","ballFactor","getBallSize","ballSpriteInitSize","ballSpriteFactor","getBallPos","xc","yc","radius","angle","x","cos","y","sin","getRingSize","getRingMin","ringMinInitSize","ringMinFactor","getRingMax","ringMaxInitSize","ringMaxFactor","getRingFreq","ringFreqInit","ringFreqFactor","getSelfRadius","selfRadiusInitSize","selfRadiusFactor","getPlayerSpriteRadius","playerSpriteInitSize","playerSpriteFactor","getScope","playerScope","checkMass","maxScopeW","maxScopeWInit","this","maxScopeH","maxScopeHInit","minScopeW","minScopeWInit","minScopeH","minScopeHInit","getRandomPos","midBegin","midEnd","max","randomRadius","random","foodInsideProportion","randomIntFromInterval","pow","PI","min","floor","inRect","yr","width","height","distEucl","xi","yi","xf","yf","idxOf","array","attr","idx","length","abs","number","round","prec","float","mul","sizeObject","objectList","stack","bytes","pop","indexOf","push","getStyle","factor","scale","fontFamily","fill","stroke","fontSize","strokeThickness","Entity","id","state","updates","visible","setTimeout","bind","clientInterpolationTime","toRemove","Update","addUpdate","time","newUpdate","clientMaxUpdateBuffer","splice","setState","setToRemove","getUpdates","getInterpolatedUpdates","renderTime","pos","previous","target","getId","isVisible","isToRemove","EntityController","entities","removedEntities","lot","removeEntity","entity","remove","clearEntities","clearRemovedEntities","getEntities","getRemovedEntities","getEntityState","spectatorInitState","getInitPlayerState","vx","vy","ring","playerInitMass","dashing","startTime","Date","lastRing","lastDash","canDash","immunity","getInitSpectatorState","getInitFoodState","midLimitRad","midLimitStroke","endLimitRad","getInitBallState","referrerState","active","__webpack_exports__","Game","gameloop","GameLoop","cv","__WEBPACK_IMPORTED_MODULE_0__canvas_canvas__","keyboard","Keyboard","mouse","Mouse","canvas","HOST","location","origin","replace","ws","WebSocket","binaryType","onopen","event","client","Client","startGame","_this","selfId","getSelfId","selfMass","lastTs","deltaTime","start","stateController","getStateController","nowTs","updatePlayerStates","predictShootStates","predictFoodStates","isInTransition","updateNewGame","console","log","updateGameOver","processInputs","assetsLoaded","cam","smoothResize","playerController","getPlayerController","foodController","getFoodController","shootController","getShootController","removeRemovedEntitiesSprites","players","foods","shoots","selfState","undefined","resizeMass","vmap","drawMap","food","vfood","drawFood","shoot","vshoot","drawShoot","player","vplayer","drawPlayer","balls","getBallController","j","ball","vball","drawBall","hud","drawHud","isUpdatedBoard","drawBoard","getBoard","setUpdatedBoard","render","fps","setFps","processKeyboard","processMouse","leftEU","pressed","leftUS","left","right","space","keyUp","onInput","debugMove","click","wheeled","zoomIn","zoomOut","signPanelDiv","document","getElementById","hudDiv","style","display","visibility","container","running","setInTransition","removeSprites","onsubmit","e","preventDefault","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","props","descriptor","writable","key","protoProps","staticProps","ViewBall","sprite","PIXI","extras","MovieClip","txt","fireballTxtList","animationSpeed","play","anchor","set","displayGroup","playerLayer","stage","addChild","size","position","rotation","debug","beginFill","ViewFood","Sprite","foodTxt","blendMode","BLEND_MODES","ADD","gradColors","tint","alpha","foodLayer","newScale","referrer","dist","foodHitbox","foodEatenHitbox","debugFoodHitbox","sizeHitbox","lineStyle","drawCircle","xReal","yReal","ViewMap","map","TilingSprite","mapTxt","mapSize","tunnelLayer","bg","bgTxt","limitLayer","midLimit","midLimitTxt","endLimit","endLimitTxt","tunnel","Graphics","mapScale","atan2","midLimitOffset","endLimitOffset","clear","drawRect","tunnelHeight","debugTileSize","tileAmountX","tileAmountY","ViewPlayer","playerTxtList","spriteDash","dashTxtList","spriteRing","ringTxt","graphics","text","Text","textOpt","currentFrame","playerVy","playing","stop","gotoAndStop","_texture","baseTexture","debugSelfHitbox","selfRadius","debugSelfScope","tileScopeAmountX","tileScopeAmountY","debugRingHitbox","ViewShoot","sizeFactor","lifeTime","dashTime","Camera","scaleMass","zoom","scaleTarget","scaleCurrent","applySmooth","zoomFactor","resizeStage","zoomScaleLimit","setScaleTarget","debugZoom","resizeCanvas","resizeHud","w","window","innerWidth","h","innerHeight","renderer","resize","pivot","scopeInitX","scopeInitY","canW","canH","leaderboard","boardDiv","entry","offsetWidth","fpsTextX","fpsTextY","scoreX","scoreY","xX","xY","yX","yY","miniX","miniY","fpsText","score","minimap","minimapRad","__WEBPACK_IMPORTED_MODULE_0__camera__","__WEBPACK_IMPORTED_MODULE_1__hud__","__WEBPACK_IMPORTED_MODULE_2__textures__","__WEBPACK_IMPORTED_MODULE_3__ViewMap__","__WEBPACK_IMPORTED_MODULE_4__ViewPlayer__","__WEBPACK_IMPORTED_MODULE_5__ViewBall__","__WEBPACK_IMPORTED_MODULE_6__ViewFood__","__WEBPACK_IMPORTED_MODULE_7__ViewShoot__","Canvas","preload","addEventListener","resizeCamera","autoDetectRenderer","view","clearBeforeRender","preloadStage","preloadTextures","preloadHud","Container","displayList","DisplayList","DisplayGroup","preloadSprites","removedPlayers","removedFoods","removedShoots","removedBalls","removeChild","destroy","Fps","Hud","num","entries","setInterval","getFps","miniself","board","len","textContent","miniselfRad","Textures","loader","loaders","Loader","add","ringImg","mapImg","bgImg","foodImg","playerSet","fireballSet","on","onAssetsLoading","once","onAssetsLoaded","load","canMid","createBorderTexture","Texture","fromCanvas","canEnd","endLimitStroke","dashTxtSize","b","rad","r","g","createDashTexture","rewind","slice","concat","reverse","loadedResource","progress","resources","texture","fromFrame","onTexturesLoaded","limitRad","limitStroke","limitOffset","canSize","can","createCanvas","ctx","getContext","debugBorder","strokeStyle","lineWidth","strokeRect","beginPath","arc","globalCompositeOperation","debugFood","gradblur","createRadialGradient","edgecolor1","addColorStop","fillStyle","edgecolor2","createElement","socket","Chat","StateController","inTransition","Receiver","Sender","_","extend","create","onDisconnect","close","BallController","referrerId","ballAngle","ballStartTime","nextId","ballLastTime","Ball","newBall","getBallAngle","getBallLastTime","setBallAngle","setBallLastTime","ic","Food","movingTime","Player","ballController","newState","preState","Shoot","FoodController","PlayerController","updatedBoard","setBoard","ShootController","serverTime","interpolationTime","rendered","lastRenderTime","rendering","smoothingFactor","clientSmoothingFactor","Debug","lagCompensation","serverLagCompensation","GamePhysics","updatePlayerState","now","interpolationFactor","getRenderTime","getInterpolatedValue","getInterpolatedEntityState","predictBallStates","previousTime","targetTime","range","difference","ratio","parseFloat","toFixed","setServerTime","setElapsedLastUpdate","elapsedLastUpdate","oldAngle","newAngle","getNewBallAngle","checkNewBalls","getNewBallState","getNewShootState","getNewFoodState","addPlayerUpdates","updatePs","playerState","updateShootStates","entitiesToAdd","entityToAdd","updateFoodInitStates","updatePlayerRemoveStates","dataRemove","updateEntityRemoveStates","updateFoodRemoveStates","controller","self","entityId","updateFoodEatStates","dataEat","foodId","idxPlayer","updateBoard","data","chatText","chatInput","chatForm","innerHTML","emit","debugDiv","serverPhysicsInterval","serverStateInterval","interpolation","_lagCompensation","_serverPhysicsInterval","_serverStateInterval","_interpolation","_interpolationTime","checked","updateParamFromUI","updateNumberFromUI","old_value","input","new_value","parseInt","isNaN","onchange","Clear","form","buf","ArrayBuffer","DataView","setUint8","Input","Submit","BufferWriter","setStringUTF8","seqUpdates","handler","1","onMsgSubmit","2","onMsgClear","10","onMsgUpdate","handleSocketEvents","BufferReader","onmessage","msg","handleMessage","onclose","onerror","evt","byteLength","packetId","getUint8","addOffset","getUint16","t","getUint32","flagsMain","getFlags","updatePsFlag","playersScopeRemoveFlag","shootsScopeInitFlag","foodsScopeInitFlag","foodsScopeRemoveFlag","foodsScopeEatFlag","updateBoardFlag","lenUpdatePs","flagsPlayer","nameFlag","xFlag","yFlag","vxFlag","vyFlag","massFlag","flagsPlayer2","ballAngleFlag","getStringUTF8","getFloat32","vxModif","getInt16","vyModif","lenPlayersScopeRemove","playersScopeRemove","lenShootsScopeInit","shootsScopeInit","lenFoodsScopeInit","foodsScopeInit","vr","lenFoodsScopeRemove","foodsScopeRemove","lenFoodsScopeEat","foodsScopeEat","lenUpdateBoard","onSubmit","Packet","sendMessage","packet","readyState","send","signForm","signDivUsername","onSubmitted","SubmitACK","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","accum","updateCallback","renderCallback","loop","newTime","frameTime","keyCodes","up","down","alias","pageup","pagedown","tab","onKeyDown","onKeyChange","onKeyUp","keyCode","removeEventListener","keyDesc","keys","split","toUpperCase","charCodeAt","MouseState","wheel","onClick","onMouseWheel","type","mouseX","pageX","offsetLeft","mouseY","pageY","offsetTop","clientWidth","clientHeight","delta","deltaY","offset","getInt8","getInt32","charCodes","charCode","decodeURIComponent","escape","String","fromCharCode","apply","fromByte","byte","arr","Array","miniBuf","miniView","addToBytes","setInt8","setUint16","setInt16","setUint32","setInt32","setFloat32","utf8","unescape","encodeURIComponent","setFlags","flags","toByte","lenBytes","clearMiniBuf","config","env","serverPort","NODE_ENV","PORT","serverUrl","serverMaxGamers","serverMaxSameIp","serverPacketMaxSize","tickMain","tickBoard","tickPhysics","tickState","tickScope","ballTreshold","ballSpeed","ringTime","scopeRatio","tileFoodRange","playerNameMaxSize","playerImmunityTime","playerVx","playerGravity","playerMinMassDash","dashSpeed","dashMassLoss","shootInitSize","shootTime","foodSpawnAmount","foodMasses","foodMovingTime","foodRotationSpeed","foodRotationRadius","shootImg","getExtrapolatedPlayerState","isInMap","distFromO","getNewPlayerState","tileController","lastFlap","dashX","dashY","dashRange","dashDone","checkImmunity","processMove","newTiles","getTiles","checkFoodsEating","checkBallKill","pressLeft","applyLeft","pressRight","applyRight","pressDash","applyDash","pressClick","applySpawnFoods","applyShoot","foodState","tile","getTile","massIndex","newPos","normalMove","dashMove","dashEndMove","newTile","distPlayerFood","killer","checkKill","distPlayerBall","playerMass","getBallMass","newMass","massTresh","massRem1","massRem2","massRem3","massBalanced","distX","distY","previousState","targetState","interpolatedState","filterStrength","lastLoop","thisLoop","oldValue","thisFrameTime","startServer","ceil"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/client/bundle\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 43);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar cfg = __webpack_require__(39);\n\nmodule.exports = cfg;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar cfg = __webpack_require__(0);\n\nexports.getScaleMass = function (mass) {\n    return 1 - Math.sqrt(mass) * cfg.scaleMassFactor;\n};\n\nexports.getRingRadius = function (mass) {\n    return cfg.ringInitSize + Math.sqrt(mass) * cfg.ringFactor;\n};\n\nexports.getFoodRadius = function (mass) {\n    return cfg.foodInitSize + Math.sqrt(mass) * cfg.foodFactor;\n};\n\nexports.getFoodSpriteRadius = function (mass) {\n    return cfg.foodSpriteInitSize + Math.sqrt(mass) * cfg.foodSpriteFactor;\n};\n\n//sprite\nexports.getBallRadius = function (mass) {\n    return cfg.ballInitSize + Math.sqrt(mass) * cfg.ballFactor;\n};\n//core\nexports.getBallSize = function (mass) {\n    return cfg.ballSpriteInitSize + Math.sqrt(mass) * cfg.ballSpriteFactor;\n};\n\nexports.getBallPos = function (xc, yc, radius, angle) {\n    var x = xc + radius * Math.cos(angle);\n    var y = yc + radius * Math.sin(angle);\n    var pos = {\n        x: x,\n        y: y\n    };\n    return pos;\n};\n//sprite\nexports.getRingSize = function (mass) {\n    return cfg.ringInitSize + Math.sqrt(mass) * cfg.ringFactor;\n};\n\nexports.getRingMin = function (mass) {\n    return cfg.ringMinInitSize + Math.sqrt(mass) * cfg.ringMinFactor;\n};\n\nexports.getRingMax = function (mass) {\n    return cfg.ringMaxInitSize + Math.sqrt(mass) * cfg.ringMaxFactor;\n};\n\nexports.getRingFreq = function (mass) {\n    return cfg.ringFreqInit - Math.sqrt(mass) * cfg.ringFreqFactor;\n};\n\nexports.getSelfRadius = function (mass) {\n    return cfg.selfRadiusInitSize + Math.sqrt(mass) * cfg.selfRadiusFactor;\n};\n\nexports.getPlayerSpriteRadius = function (mass) {\n    return cfg.playerSpriteInitSize + Math.sqrt(mass) * cfg.playerSpriteFactor;\n};\n\nexports.getScope = function (playerScope, checkMass) {\n    return {\n        maxScopeW: playerScope.maxScopeWInit + this.getRingMax(checkMass),\n        maxScopeH: playerScope.maxScopeHInit + this.getRingMax(checkMass),\n        minScopeW: playerScope.minScopeWInit + this.getRingMax(checkMass),\n        minScopeH: playerScope.minScopeHInit + this.getRingMax(checkMass)\n    };\n};\n\nexports.getRandomPos = function (midBegin, midEnd, max) {\n    var randomRadius,\n        randomZone = Math.random();\n\n    if (randomZone < cfg.foodInsideProportion) {\n        randomRadius = exports.randomIntFromInterval(0, Math.pow(midBegin, 2));\n    } else {\n        randomRadius = exports.randomIntFromInterval(Math.pow(midEnd, 2), Math.pow(max, 2));\n    }\n\n    var angle = Math.random() * Math.PI * 2;\n\n    return {\n        x: Math.cos(angle) * Math.sqrt(randomRadius),\n        y: Math.sin(angle) * Math.sqrt(randomRadius)\n    };\n};\n\nexports.randomIntFromInterval = function (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexports.inRect = function (x, y, xc, yr, width, height) {\n    if (xc - width / 2 <= x && x <= xc + width / 2 && yr - height / 2 <= y && y <= yr + height / 2) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexports.distEucl = function (xi, yi, xf, yf) {\n    return Math.sqrt(Math.pow(xf - xi, 2) + Math.pow(yf - yi, 2));\n};\n\nexports.idxOf = function (array, attr, value) {\n    var idx = -1;\n    for (var i = 0; i < array.length; i++) {\n        if (array[i][attr] === value) {\n            idx = i;\n            break;\n        }\n    }\n    return idx;\n};\n\nexports.abs = function (number) {\n    if (number >= 0) {\n        return number;\n    } else {\n        return -number;\n    }\n};\n\nexports.round = function (prec, float) {\n    var mul = Math.pow(10, prec);\n    return Math.round(float * mul) / mul;\n};\n\nexports.sizeObject = function (object) {\n    var objectList = [];\n    var stack = [object];\n    var bytes = 0;\n\n    while (stack.length) {\n        var value = stack.pop();\n\n        if (typeof value === 'boolean') {\n            bytes += 4;\n        } else if (typeof value === 'string') {\n            bytes += value.length * 2;\n        } else if (typeof value === 'number') {\n            bytes += 8;\n        } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && objectList.indexOf(value) === -1) {\n            objectList.push(value);\n\n            for (var i in value) {\n                stack.push(value[i]);\n            }\n        }\n    }\n    return bytes;\n};\n\nexports.getStyle = function (factor, scale) {\n    return {\n        fontFamily: 'raleway',\n        fill: '#ffffff',\n        stroke: '#000000',\n        fontSize: Math.floor(factor * scale) + 'px',\n        strokeThickness: 2 * scale\n    };\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Update = __webpack_require__(4),\n    cfg = __webpack_require__(0);\n\nexports = module.exports = Entity;\n\nfunction Entity(id) {\n    this.id = id;\n    this.state = {};\n    this.updates = []; //only players\n    this.visible = false; //wait lerpTime before rendering\n    setTimeout(function () {\n        this.visible = true;\n    }.bind(this), cfg.clientInterpolationTime);\n\n    this.toRemove = false;\n}\n\nEntity.prototype = {\n    //not used\n    addUpdate: function addUpdate(state, time) {\n        var newUpdate = new Update(state, time);\n        if (this.updates.length === 0) {\n            this.state = newUpdate.state;\n        }\n        this.updates.push(newUpdate);\n        if (this.updates.length > cfg.clientMaxUpdateBuffer) {\n            this.updates.splice(0, 1);\n        }\n    },\n\n    //Setters\n    setState: function setState(state) {\n        this.state = state;\n    },\n\n    setToRemove: function setToRemove(toRemove) {\n        this.toRemove = toRemove;\n    },\n\n    //Getters\n    getUpdates: function getUpdates() {\n        return this.updates;\n    },\n\n    /**\r\n     * find the 2 updates bounding renderTime\r\n     * @param  {time} time : renderTime\r\n     * @return {object}      pos{previous, target}\r\n     */\n    getInterpolatedUpdates: function getInterpolatedUpdates(renderTime) {\n        var pos = {};\n        for (var i = 0; i < this.updates.length - 1; i++) {\n            var previous = this.updates[i],\n                target = this.updates[i + 1];\n            if (renderTime >= previous.time && renderTime < target.time) {\n                pos.previous = previous;\n                pos.target = target;\n                break;\n            }\n        }\n        return pos;\n    },\n\n    getId: function getId() {\n        return this.id;\n    },\n\n    isVisible: function isVisible() {\n        return this.visible;\n    },\n\n    isToRemove: function isToRemove() {\n        return this.toRemove;\n    }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar lot = __webpack_require__(1),\n    cfg = __webpack_require__(0);\n\nexports = module.exports = EntityController;\n\n/**\r\n * entities: to render\r\n * removedEntities: sprites to remove\r\n */\nfunction EntityController() {\n    this.entities = [];\n    this.removedEntities = [];\n}\n\nEntityController.prototype = {\n    //Remove\n    removeEntity: function removeEntity(entity) {\n        var i = this.entities.indexOf(entity);\n        this.remove(i);\n    },\n\n    /**\r\n     * add the Entity to remove in removedEntities and remove from entities\r\n     * (used for outscope)\r\n     * @param  {int} i : entities index\r\n     * @return {void}\r\n     */\n    remove: function remove(i) {\n        if (i >= 0) {\n            this.removedEntities.push(this.entities[i]);\n            this.entities.splice(i, 1);\n        }\n    },\n\n    /**\r\n     * onDisconnect, game over, change server, change mode\r\n     * entities sprite to remove\r\n     * @return {void}\r\n     */\n    clearEntities: function clearEntities() {\n        for (var i = this.entities.length; i--;) {\n            this.removedEntities.push(this.entities[i]);\n            this.entities.splice(i, 1);\n        }\n    },\n\n    /**\r\n     * after sprites removed\r\n     * @return {void}\r\n     */\n    clearRemovedEntities: function clearRemovedEntities() {\n        this.removedEntities = [];\n    },\n\n    //Getters\n    getEntities: function getEntities() {\n        return this.entities;\n    },\n\n    getRemovedEntities: function getRemovedEntities() {\n        return this.removedEntities;\n    },\n\n    /**\r\n     * return a state: spectator or player\r\n     * @param  {int} id\r\n     * @return {object}    state\r\n     */\n    getEntityState: function getEntityState(id) {\n        var state = false;\n\n        if (id === -1) {\n            state = cfg.spectatorInitState;\n        }\n\n        var i = lot.idxOf(this.entities, 'id', id);\n        if (i >= 0) {\n            state = this.entities[i].state;\n        }\n        // console.log(\"iii\" + id);\n        return state;\n    }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nexports = module.exports = Update;\n\nfunction Update(state, time) {\n    this.state = state;\n    this.time = time;\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar lot = __webpack_require__(1),\n    cfg = __webpack_require__(0);\n\nexports.getInitPlayerState = function () {\n    return {\n        x: 0,\n        y: 0,\n        vx: 0,\n        vy: 0,\n        ring: false,\n        mass: cfg.playerInitMass,\n        dashing: false,\n\n        startTime: new Date(),\n        lastRing: new Date(),\n        lastDash: new Date(),\n        canDash: false,\n        immunity: true\n    };\n};\n\nexports.getInitSpectatorState = function () {\n    return {\n        x: 0,\n        y: 0,\n        mass: 0\n    };\n};\n\nexports.getInitFoodState = function () {\n    var pos = lot.getRandomPos(cfg.midLimitRad - 50, cfg.midLimitRad + cfg.midLimitStroke + 50, cfg.endLimitRad - 50);\n    return {\n        x: pos.x,\n        y: pos.y\n    };\n};\n\n//referrerPlayer\nexports.getInitBallState = function (referrerState, mass, angle) {\n    var radius = lot.getRingRadius(referrerState.mass);\n    var pos = lot.getBallPos(referrerState.x, referrerState.y, radius, angle);\n    return {\n        x: pos.x,\n        y: pos.y,\n        mass: mass,\n        angle: angle,\n        active: true };\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__canvas_canvas__ = __webpack_require__(13);\n\n\nvar Client = __webpack_require__(16),\n\n// GamePhysics = require('../../shared/core'),\nGameLoop = __webpack_require__(34),\n    Keyboard = __webpack_require__(35),\n    Mouse = __webpack_require__(36),\n    cfg = __webpack_require__(0);\n\n/*\r\ninitializeClient : startGame (onReady) : start game loop.\r\nupdate entity and player current states (on input, onUpdateClientPredictionReady)\r\ngetInterpolatedState (onInterpolation)\r\n*/\n\nfunction Game() {\n    this.gameloop = new GameLoop();\n    this.cv = new __WEBPACK_IMPORTED_MODULE_0__canvas_canvas__[\"a\" /* default */]();\n    this.keyboard = new Keyboard();\n    this.mouse = new Mouse(this.cv.canvas);\n    var HOST = location.origin.replace(/^http/, 'ws');\n    var ws = new WebSocket(HOST);\n    ws.binaryType = 'arraybuffer';\n    ws.onopen = function (event) {\n        //NOTE: lost one day because of setTimeout(0): first msg not received\n        this.client = new Client(ws);\n        this.startGame();\n    }.bind(this);\n}\n\nGame.prototype = {\n    startGame: function startGame() {\n        var _this = this;\n\n        var selfId = this.client.getSelfId();\n        var selfMass = 0;\n        var lastTs = null;\n        var deltaTime = 0;\n\n        this.gameloop.start(\n        //Update Loop\n        function () {\n            var stateController = _this.client.getStateController();\n\n            var nowTs = new Date();\n            lastTs = lastTs || nowTs;\n            deltaTime = nowTs - lastTs;\n            lastTs = nowTs;\n            // stateController.setElapsedLastUpdate(deltaTime);\n            stateController.updatePlayerStates();\n\n            stateController.predictShootStates(deltaTime);\n            stateController.predictFoodStates(deltaTime);\n\n            //if new game or game over\n            if (_this.client.isInTransition()) {\n                if (selfId === -1) {\n                    selfId = _this.updateNewGame();\n                } else {\n                    console.log(\"ooooh\");\n                    selfId = _this.updateGameOver();\n                }\n            }\n            if (selfId === -1) return;\n\n            _this.processInputs();\n        },\n        //Render Loop\n        function () {\n            if (!_this.cv.assetsLoaded) return;\n\n            if (selfId !== -1) {\n                _this.cv.cam.smoothResize(deltaTime);\n            }\n\n            var stateController = _this.client.getStateController(),\n                playerController = stateController.getPlayerController(),\n                foodController = stateController.getFoodController(),\n                shootController = stateController.getShootController();\n\n            _this.removeRemovedEntitiesSprites(playerController, foodController, shootController);\n            var players = playerController.getEntities(),\n                foods = foodController.getEntities(),\n                shoots = shootController.getEntities();\n\n            //if the client is in game or spectator, render\n            var selfState = playerController.getEntityState(selfId);\n            if (selfState.mass !== undefined) {\n                //if mass changes, resize\n                if (selfState.mass !== selfMass) {\n                    selfMass = selfState.mass;\n                    _this.cv.cam.resizeMass(selfMass);\n                }\n\n                _this.cv.vmap.drawMap(selfState);\n\n                for (var i = foods.length; i--;) {\n                    var food = foods[i];\n                    if (!food.isVisible()) continue;\n                    _this.cv.vfood.drawFood(food, selfState);\n                }\n                for (var _i = shoots.length; _i--;) {\n                    var shoot = shoots[_i];\n                    if (!shoot.isVisible()) continue;\n                    _this.cv.vshoot.drawShoot(shoot, selfState);\n                }\n                for (var _i2 = players.length; _i2--;) {\n                    var player = players[_i2];\n                    if (!player.isVisible()) continue;\n                    _this.cv.vplayer.drawPlayer(player, selfState);\n\n                    // if (!player.state.immunity) {\n                    var balls = player.getBallController().getEntities();\n                    for (var j = balls.length; j--;) {\n                        var ball = balls[j];\n                        // if (!ball.isVisible()) continue;\n                        _this.cv.vball.drawBall(ball, selfState);\n                    }\n                    // }\n                }\n\n                _this.cv.hud.drawHud(selfState);\n                if (playerController.isUpdatedBoard()) {\n                    _this.cv.hud.drawBoard(playerController.getBoard());\n                    playerController.setUpdatedBoard(false);\n                }\n\n                _this.cv.render();\n            }\n\n            _this.cv.hud.fps.setFps(new Date());\n        });\n    },\n\n    processInputs: function processInputs() {\n        this.processKeyboard();\n        this.processMouse();\n    },\n\n    processKeyboard: function processKeyboard() {\n        var leftEU = this.keyboard.pressed('leftEU');\n        var leftUS = this.keyboard.pressed('leftUS');\n        var left = leftEU || leftUS;\n        var right = this.keyboard.pressed('right');\n        var space = this.keyboard.pressed('space');\n\n        if (left && this.keyboard.keyUp.left) {\n            this.client.onInput(10);\n            this.keyboard.keyUp.left = false;\n        }\n\n        if (right && this.keyboard.keyUp.right) {\n            this.client.onInput(11);\n            this.keyboard.keyUp.right = false;\n        }\n\n        if (space && this.keyboard.keyUp.space) {\n            this.client.onInput(12);\n            this.keyboard.keyUp.space = false;\n        }\n\n        if (!left) {\n            this.keyboard.keyUp.left = true;\n        }\n        if (!right) {\n            this.keyboard.keyUp.right = true;\n        }\n        if (!space) {\n            this.keyboard.keyUp.space = true;\n        }\n\n        if (cfg.debugMove) {\n            this.keyboard.keyUp.left = true;\n            this.keyboard.keyUp.right = true;\n        }\n    },\n\n    processMouse: function processMouse() {\n        if (this.mouse.click) {\n            this.client.onInput(13);\n            this.mouse.click = false;\n        }\n\n        var wheeled = this.mouse.wheeled();\n        if (wheeled > 0) {\n            this.cv.cam.zoomIn(wheeled);\n        } else if (wheeled < 0) {\n            this.cv.cam.zoomOut(-wheeled);\n        }\n    },\n\n    /**\r\n     * start a new game with a new id\r\n     * @return {int} new id of the client\r\n     */\n    updateNewGame: function updateNewGame() {\n        var signPanelDiv = document.getElementById('signPanelDiv');\n        var hudDiv = document.getElementById('hudDiv');\n        signPanelDiv.style.display = 'none';\n        hudDiv.style.visibility = 'visible';\n        this.cv.hud.container.visible = true;\n        this.mouse.running = true;\n\n        this.client.setInTransition(false);\n        return this.client.getSelfId();\n    },\n\n    updateGameOver: function updateGameOver() {\n        var signPanelDiv = document.getElementById('signPanelDiv');\n        var hudDiv = document.getElementById('hudDiv');\n        signPanelDiv.style.display = 'block';\n        hudDiv.style.visibility = 'hidden';\n        this.cv.hud.container.visible = false;\n        this.mouse.running = false;\n\n        this.client.setInTransition(false);\n        return -1;\n    },\n\n    removeRemovedEntitiesSprites: function removeRemovedEntitiesSprites(playerController, foodController, shootController) {\n        this.cv.removeSprites(playerController.getRemovedEntities(), foodController.getRemovedEntities(), shootController.getRemovedEntities());\n        playerController.clearRemovedEntities();\n        shootController.clearRemovedEntities();\n        foodController.clearRemovedEntities();\n    }\n};\n\nvar signForm = document.getElementById(\"sign-form\");\nsignForm.onsubmit = function (e) {\n    e.preventDefault();\n    return false;\n};\n\nvar game = new Game();\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar lot = __webpack_require__(1);\n// cfg = require('../../../shared/config');\n\n\nvar ViewBall = function () {\n    function ViewBall(cv) {\n        _classCallCheck(this, ViewBall);\n\n        this.cv = cv;\n        this.canvas = cv.canvas;\n    }\n\n    _createClass(ViewBall, [{\n        key: 'drawBall',\n        value: function drawBall(ball, selfState) {\n            if (!ball.sprite) {\n                ball.sprite = new PIXI.extras.MovieClip(this.cv.txt.fireballTxtList);\n                ball.sprite.animationSpeed = 0.2;\n                ball.sprite.play();\n                ball.sprite.anchor.set(0.5);\n                //ball.sprite.alpha = 0;\n                ball.sprite.displayGroup = this.cv.playerLayer;\n                this.cv.stage.addChild(ball.sprite);\n            }\n            // if (!ball.sprite) {\n            //     //TODO: color ball + size\n            //     //NOTE: texture careful!\n            //\n            //     this.cv.stage.addChild(ball.sprite);\n            // }\n            var size = lot.getBallSize(ball.state.mass);\n            ball.sprite.width = size;\n            ball.sprite.height = size;\n            var x = ball.state.x - selfState.x + this.canvas.width / 2;\n            var y = ball.state.y - selfState.y + this.canvas.height / 2;\n            ball.sprite.position.set(x, y);\n            ball.sprite.rotation = ball.state.angle + Math.PI / 2;\n            //\n            // if (ball.sprite.alpha < 1) {\n            //     ball.sprite.alpha += 0.05;\n            //     ball.sprite.alpha = Math.round(ball.sprite.alpha * 100) / 100;\n            //     ball.sprite.scale.set(ball.sprite.alpha);\n            // }\n\n            // if (cfg.debugFoodHitbox) {\n            // this.tunnel.clear();\n            this.cv.debug.beginFill(0xFF0000);\n            // const radius = lot.getBallMass(ball.state.mass);\n            // this.cv.debug.drawCircle(x, y, radius);\n            this.cv.debug.beginFill(0xFF0000, 0);\n            // this.cv.debug.drawCircle(x, y, cfg.foodEatenHitbox);\n            // }\n        }\n    }]);\n\n    return ViewBall;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ViewBall);\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar lot = __webpack_require__(1),\n    cfg = __webpack_require__(0);\n\nvar ViewFood = function () {\n    function ViewFood(cv) {\n        _classCallCheck(this, ViewFood);\n\n        this.cv = cv;\n        this.canvas = cv.canvas;\n    }\n\n    _createClass(ViewFood, [{\n        key: 'drawFood',\n        value: function drawFood(food, selfState) {\n            if (!food.sprite) {\n                //TODO: color food + size\n                //NOTE: texture careful!\n                // const texture = Math.round(Math.random() * (cfg.foodPaletteSize - 1));\n                // food.sprite = new PIXI.Sprite(this.cv.txt.foodTxtList[food.mass]);\n                food.sprite = new PIXI.Sprite(this.cv.txt.foodTxt);\n                food.sprite.blendMode = PIXI.BLEND_MODES.ADD;\n                //NOTE: tint white for color!\n                var i = lot.randomIntFromInterval(0, cfg.gradColors.length - 1);\n                food.sprite.tint = cfg.gradColors[i];\n\n                food.sprite.anchor.set(0.5);\n                food.sprite.alpha = 0;\n                food.sprite.displayGroup = this.cv.foodLayer;\n\n                this.cv.stage.addChild(food.sprite);\n            }\n\n            var x = food.state.x - selfState.x + this.canvas.width / 2;\n            var y = food.state.y - selfState.y + this.canvas.height / 2;\n            food.sprite.position.x = x;\n            food.sprite.position.y = y;\n\n            var size = lot.getFoodSpriteRadius(food.mass);\n            // let size = 50 + 4 * food.mass;\n            var newScale = 1;\n\n            //spawn\n            if (food.sprite.alpha < 1) {\n                food.sprite.alpha += 0.05;\n                food.sprite.alpha = Math.round(food.sprite.alpha * 100) / 100;\n                newScale = food.sprite.alpha;\n            }\n\n            //eaten\n            if (food.referrer) {\n                var referrerState = food.referrer.state;\n                var dist = lot.distEucl(referrerState.x, referrerState.y, food.state.x, food.state.y);\n                newScale = 1 - (cfg.foodHitbox - cfg.foodEatenHitbox) / (2 * dist);\n                // food.sprite.alpha = newScale;\n                if (newScale < 0) newScale = 0;\n                // console.log(newScale);\n                // food.sprite.scale.set(newScale / 8);\n            }\n\n            size *= newScale;\n            food.sprite.width = size;\n            food.sprite.height = size;\n\n            if (cfg.debugFoodHitbox) {\n                var sizeHitbox = lot.getFoodRadius(food.mass);\n                this.cv.debug.lineStyle(1, 0xFF0000);\n                this.cv.debug.drawCircle(food.state.xReal - selfState.x + this.canvas.width / 2, food.state.yReal - selfState.y + this.canvas.height / 2, sizeHitbox);\n                // this.cv.debug.drawCircle(x, y, cfg.foodEatenHitbox);\n            }\n        }\n    }]);\n\n    return ViewFood;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ViewFood);\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar cfg = __webpack_require__(0);\n\nvar ViewMap = function () {\n    function ViewMap(cv) {\n        _classCallCheck(this, ViewMap);\n\n        this.cv = cv;\n        this.canvas = cv.canvas;\n    }\n\n    _createClass(ViewMap, [{\n        key: 'preloadSprites',\n        value: function preloadSprites() {\n            this.map = new PIXI.extras.TilingSprite(this.cv.txt.mapTxt, cfg.mapSize, cfg.mapSize);\n            this.map.displayGroup = this.cv.tunnelLayer;\n            this.cv.stage.addChild(this.map);\n\n            this.bg = new PIXI.extras.TilingSprite(this.cv.txt.bgTxt, cfg.mapSize, cfg.mapSize);\n            // this.bg = new PIXI.Sprite(this.bgTexture);\n            this.bg.displayGroup = this.cv.limitLayer;\n            this.cv.stage.addChild(this.bg);\n\n            //Limit\n            this.midLimit = new PIXI.Sprite(this.cv.txt.midLimitTxt);\n            this.midLimit.displayGroup = this.cv.limitLayer;\n            this.cv.stage.addChild(this.midLimit);\n            this.endLimit = new PIXI.Sprite(this.cv.txt.endLimitTxt);\n            this.endLimit.displayGroup = this.cv.limitLayer;\n            this.cv.stage.addChild(this.endLimit);\n\n            //Tunnel\n            this.tunnel = new PIXI.Graphics();\n            this.tunnel.displayGroup = this.tunnelLayer;\n            this.cv.stage.addChild(this.tunnel);\n\n            //Debug layer\n            this.cv.debug = new PIXI.Graphics();\n            this.cv.debug.displayGroup = this.cv.tunnelLayer;\n            this.cv.stage.addChild(this.cv.debug);\n        }\n\n        //Stage\n\n    }, {\n        key: 'drawMap',\n        value: function drawMap(selfState) {\n            //the middle of the canvas - selfPos\n            //i.e. if self go down, the map go up\n            var x = this.canvas.width / 2 - selfState.x;\n            var y = this.canvas.height / 2 - selfState.y;\n            //origin at the center of the map\n            this.map.anchor.set(0.5);\n            this.map.position.set(x, y);\n            this.map.scale.set(cfg.mapScale);\n            this.map.alpha = 1;\n            // this.map.tint = 0xb00000;\n            // this.map.tint = 0xa144ff;\n            // this.map.tint = 0x008705;\n            // this.map.tint = 0x00b2ff;\n\n            this.map.tint = 0x006EC7;\n\n            this.bg.anchor.set(0.5);\n            this.bg.position.set(x, y);\n            this.bg.scale.set(0);\n\n            //LIMITS\n            var angle = Math.atan2(selfState.y, selfState.x);\n            this.midLimit.position.x = x + cfg.midLimitOffset * Math.sqrt(2) * Math.cos(angle);\n            this.midLimit.position.y = y + cfg.midLimitOffset * Math.sqrt(2) * Math.sin(angle);\n            this.midLimit.rotation = -Math.PI / 4 + angle;\n\n            this.endLimit.position.x = x + cfg.endLimitOffset * Math.sqrt(2) * Math.cos(angle);\n            this.endLimit.position.y = y + cfg.endLimitOffset * Math.sqrt(2) * Math.sin(angle);\n            this.endLimit.rotation = -Math.PI / 4 + angle;\n\n            //TUNNELS\n            this.tunnel.clear();\n            this.tunnel.beginFill(0x00FF00, 0.5);\n            if (selfState.x < 0) {\n                //\n                this.tunnel.drawRect(x - (cfg.midLimitRad + cfg.midLimitStroke), y - cfg.tunnelHeight / 2, cfg.midLimitStroke, cfg.tunnelHeight);\n            } else {\n                this.tunnel.drawRect(x + cfg.midLimitRad, y - cfg.tunnelHeight / 2, cfg.midLimitStroke, cfg.tunnelHeight);\n            }\n\n            //DEBUG\n            this.cv.debug.clear();\n\n            if (cfg.debugTileSize) {\n                this.cv.debug.lineStyle(3, 0xFF0000);\n                var width = Math.floor(cfg.endLimitRad / cfg.tileAmountX);\n                var height = Math.floor(cfg.endLimitRad / cfg.tileAmountY);\n                this.cv.debug.drawRect(x, y, width, height);\n                // const X = Math.floor(cfg.tileAmountX * (selfState.x + cfg.endLimitRad) / (2 * cfg.endLimitRad));\n                // const Y = Math.floor(cfg.tileAmountY * (selfState.y + cfg.endLimitRad) / (2 * cfg.endLimitRad));\n                // const xTile = this.canvas.width / 2 - (X - cfg.tileAmountX / 2) * cfg.endLimitRad / cfg.tileAmountX;\n                // const yTile = this.canvas.height / 2 - (Y - cfg.tileAmountY / 2) * cfg.endLimitRad / cfg.tileAmountY;\n                // this.cv.debug.drawRect(xTile, yTile, width, height);\n            }\n        }\n    }]);\n\n    return ViewMap;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ViewMap);\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar cfg = __webpack_require__(0),\n    lot = __webpack_require__(1);\n\nvar ViewPlayer = function () {\n    function ViewPlayer(cv) {\n        _classCallCheck(this, ViewPlayer);\n\n        this.cv = cv;\n        this.canvas = cv.canvas;\n    }\n\n    _createClass(ViewPlayer, [{\n        key: 'drawPlayer',\n        value: function drawPlayer(player, selfState) {\n            if (!player.sprite) {\n                player.sprite = new PIXI.extras.MovieClip(this.cv.txt.playerTxtList);\n                player.sprite.animationSpeed = 0.15;\n                // player.sprite.tint = 0xffa8a8;\n                player.sprite.play();\n                player.sprite.anchor.set(0.5);\n                //player.sprite.alpha = 0;\n                player.sprite.displayGroup = this.cv.playerLayer;\n                this.cv.stage.addChild(player.sprite);\n\n                //to destroy\n                player.spriteDash = new PIXI.extras.MovieClip(this.cv.txt.dashTxtList);\n                player.spriteDash.animationSpeed = 0.3;\n                player.spriteDash.anchor.set(0.5);\n                player.spriteDash.blendMode = PIXI.BLEND_MODES.ADD;\n                player.spriteDash.visible = false;\n                player.spriteDash.displayGroup = this.foodLayer;\n                this.cv.stage.addChild(player.spriteDash);\n\n                player.spriteRing = new PIXI.Sprite(this.cv.txt.ringTxt);\n                player.spriteRing.anchor.set(0.5);\n                player.spriteRing.alpha = 0;\n                player.spriteRing.displayGroup = this.cv.playerLayer;\n                this.cv.stage.addChild(player.spriteRing);\n\n                player.graphics = new PIXI.Graphics();\n                this.cv.stage.addChild(player.graphics);\n\n                player.text = new PIXI.Text(player.name, cfg.textOpt);\n                player.text.anchor.set(0.5);\n                // player.text.alpha = 1;\n                this.cv.hud.container.addChild(player.text);\n            }\n\n            var size = lot.getPlayerSpriteRadius(player.state.mass);\n\n            var x = player.state.x - selfState.x + this.canvas.width / 2;\n            var y = player.state.y - selfState.y + this.canvas.height / 2;\n\n            player.text.position.x = x;\n            player.text.position.y = y + size - 15;\n            // const scaleMass = lot.getScaleMass(player.state.mass);\n\n            player.text.style = lot.getStyle(14, this.cv.cam.scale);\n\n            var angle = Math.atan2(player.state.vy, player.state.vx);\n            if (player.state.vx < 0) {\n                // player.sprite.textures = this.playerLTxtList;\n                player.sprite.scale.x = -1;\n                player.sprite.rotation = angle + Math.PI;\n            } else {\n                player.sprite.scale.x = 1;\n                player.sprite.rotation = angle;\n            }\n            if (!player.state.dashing && player.sprite.currentFrame === 0 && player.state.vy === cfg.playerVy) {\n                player.sprite.stop();\n            } else {\n                if (!player.sprite.playing) {\n                    player.sprite.play();\n                }\n            }\n            if (player.state.dashing) {\n                player.sprite.animationSpeed = 0.3;\n                if (player.sprite.alpha > 0.8) {\n                    player.sprite.alpha -= 0.05;\n                }\n                player.spriteDash.play();\n                player.spriteDash.visible = true;\n            } else {\n                if (player.spriteDash.playing) {\n                    player.sprite.animationSpeed = 0.15;\n                    player.sprite.alpha = 1;\n                    player.spriteDash.gotoAndStop(0);\n                    player.spriteDash.visible = false;\n                }\n            }\n            player.sprite.position.x = x - 3;\n            player.sprite.position.y = y + 8;\n            player.sprite.width = size;\n            // player.sprite.height = size;\n            player.sprite.height = size * (player.sprite._texture.baseTexture.height / player.sprite._texture.baseTexture.width);\n\n            player.spriteDash.position.x = x;\n            player.spriteDash.position.y = y;\n            player.spriteDash.width = size;\n            player.spriteDash.height = size;\n\n            // player.link;\n            // const p1 = selfState;\n            // const p2 = player.state;\n            // const dist = lot.distEucl(p1.x, p1.y, p2.x, p2.y);\n            // // if (dist < 1000) {\n            // //グラデーションの生成\n            // const size = 1000;\n            // const can = this.createCanvas(size, size);\n            // const ctx = can.getContext('2d');\n            // const grad = ctx.createLinearGradient(p1.x, p1.y, p2.x, p2.y);\n            // grad.addColorStop(0, 'rgba(' + 102 + ',' + 217 + ',' + 239 + ',' + (1 - dist / 1000) + ')');\n            // grad.addColorStop(1, 'rgba(' + 249 + ',' + 38 + ',' + 114 + ',' + (1 - dist / 1000) + ')');\n            // ctx.strokeStyle = grad;\n            // //線の描画\n            // ctx.beginPath();\n            // ctx.moveTo(p1.x, p1.y);\n            // ctx.lineTo(p2.x, p2.y);\n            // ctx.closePath();\n            // ctx.stroke();\n            // if (player.link) {\n            //     this.cv.stage.removeChild(player.link);\n            //     player.link.destroy(true);\n            //     this.cv.txts.destroy(true);\n            // }\n            // this.cv.txts = new PIXI.Texture.fromCanvas(can);\n            // player.link = new PIXI.Sprite(this.cv.txts); // to delete\n            // player.link.anchor.set(0.5);\n            // player.link.displayGroup = this.cv.playerLayer;\n            // player.link.position.x = (p1.x + p2.x) / 2;\n            // player.link.position.y = (p1.y + p2.y) / 2;\n            // this.cv.stage.addChild(player.link);\n\n            // for (let prop in PIXI.utils.TextureCache) {\n            //     console.log(prop);\n            // }\n\n            //ring\n            size = lot.getRingSize(player.state.mass);\n\n            player.spriteRing.position.x = x;\n            player.spriteRing.position.y = y;\n            player.spriteRing.width = size;\n            player.spriteRing.height = size;\n            if (player.state.ring) {\n                if (player.spriteRing.alpha < 1) {\n                    player.spriteRing.alpha += 0.1;\n                    player.spriteRing.alpha = Math.round(player.spriteRing.alpha * 10) / 10;\n                }\n            } else {\n                if (player.spriteRing.alpha > 0) {\n                    player.spriteRing.alpha = 0;\n                }\n            }\n\n            player.spriteRing.visible = false;\n            // this.cv.debug.clear();\n            this.cv.debug.lineStyle(2, 0xFF0000);\n            if (cfg.debugSelfHitbox) {\n                var selfRadius = lot.getSelfRadius(player.state.mass);\n                this.cv.debug.drawCircle(x, y, selfRadius);\n            }\n            if (cfg.debugSelfScope) {\n                var width = Math.floor(cfg.tileScopeAmountX * cfg.endLimitRad / cfg.tileAmountX);\n                var height = Math.floor(cfg.tileScopeAmountY * cfg.endLimitRad / cfg.tileAmountY);\n                this.cv.debug.drawRect(x - width / 4, y - height / 4, width / 2, height / 2);\n            }\n            // this.cv.debug.drawCircle(x, y, lot.getRingRadius(player.state.mass));\n            if (cfg.debugRingHitbox) {\n                this.cv.debug.drawCircle(x, y, lot.getRingMin(player.state.mass));\n                this.cv.debug.drawCircle(x, y, lot.getRingMax(player.state.mass));\n            }\n        }\n    }]);\n\n    return ViewPlayer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ViewPlayer);\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar lot = __webpack_require__(1),\n    cfg = __webpack_require__(0);\n\nvar ViewShoot = function () {\n    function ViewShoot(cv) {\n        _classCallCheck(this, ViewShoot);\n\n        this.cv = cv;\n        this.canvas = cv.canvas;\n    }\n\n    _createClass(ViewShoot, [{\n        key: 'drawShoot',\n        value: function drawShoot(shoot, selfState) {\n            if (!shoot.sprite) {\n                shoot.sprite = new PIXI.Sprite(this.cv.txt.ringTxt);\n                shoot.sprite.anchor.set(0.5);\n                shoot.sprite.displayGroup = this.cv.playerLayer;\n                this.cv.stage.addChild(shoot.sprite);\n            }\n\n            var size = lot.getRingSize(shoot.state.mass);\n            var sizeFactor = shoot.state.lifeTime / cfg.dashTime;\n            if (sizeFactor > 1) {\n                sizeFactor = 1;\n            }\n\n            shoot.sprite.width = sizeFactor * size;\n            shoot.sprite.height = sizeFactor * size;\n            // shoot.sprite.alpha = sizeFactor;\n            shoot.sprite.position.x = shoot.state.x - selfState.x + this.canvas.width / 2;\n            shoot.sprite.position.y = shoot.state.y - selfState.y + this.canvas.height / 2;\n            //\n            // shoot.sprite.visible = true;\n        }\n    }]);\n\n    return ViewShoot;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ViewShoot);\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar cfg = __webpack_require__(0),\n    lot = __webpack_require__(1);\n\nvar Camera = function () {\n    //called in Canvas\n    function Camera(cv) {\n        _classCallCheck(this, Camera);\n\n        this.cv = cv;\n        this.scale = 1; //with zoom\n        this.scaleMass = 1;\n        this.zoom = 0;\n        this.scaleTarget = 1;\n        this.scaleCurrent = 1;\n    }\n\n    _createClass(Camera, [{\n        key: 'setScaleTarget',\n        value: function setScaleTarget(applySmooth) {\n            this.scaleTarget = this.scale * this.scaleMass * Math.pow(cfg.zoomFactor, this.zoom);\n            //TODO: smooth only zoom\n\n            if (!applySmooth) {\n                this.scaleCurrent = this.scaleTarget;\n                this.resizeStage(this.scaleCurrent);\n            }\n        }\n\n        //called in Game\n\n    }, {\n        key: 'smoothResize',\n        value: function smoothResize(deltaTime) {\n            if (this.scaleTarget > this.scaleCurrent) {\n                this.scaleCurrent += deltaTime * 0.0030;\n                if (this.scaleCurrent > this.scaleTarget) {\n                    this.scaleCurrent = this.scaleTarget;\n                }\n                this.resizeStage(this.scaleCurrent);\n            } else if (this.scaleTarget < this.scaleCurrent) {\n                this.scaleCurrent -= deltaTime * 0.0030;\n                if (this.scaleCurrent < this.scaleTarget) {\n                    this.scaleCurrent = this.scaleTarget;\n                }\n                this.resizeStage(this.scaleCurrent);\n            }\n        }\n\n        //called in Game\n\n    }, {\n        key: 'zoomIn',\n        value: function zoomIn(_zoomIn) {\n            for (var i = 0; i < _zoomIn; i++) {\n                var scaleTarget = this.scale * this.scaleMass * Math.pow(cfg.zoomFactor, this.zoom + 1);\n                if (scaleTarget > cfg.zoomScaleLimit) {\n                    // this.zoom = Math.log(cfg.zoomScaleLimit / (this.scale * this.scaleMass)) /\n                    //     (cfg.zoomFactor * Math.log(cfg.zoomFactor));\n                    // console.log(this.zoom);\n                    break;\n                } else {\n                    this.zoom += 1;\n                }\n            }\n            this.setScaleTarget(true);\n        }\n\n        //called in Game\n\n    }, {\n        key: 'zoomOut',\n        value: function zoomOut(_zoomOut) {\n            for (var i = 0; i < _zoomOut; i++) {\n                this.zoom -= 1;\n                if (this.zoom < 0 && !cfg.debugZoom) {\n                    this.zoom = 0;\n                }\n            }\n\n            this.setScaleTarget(true);\n        }\n\n        /**\r\n        * called in Canvas on window resize\r\n        * @return {void}\r\n        */\n\n    }, {\n        key: 'resizeCamera',\n        value: function resizeCamera() {\n            this.resizeCanvas();\n            this.resizeHud();\n        }\n\n        //modify this.scale and resize\n\n    }, {\n        key: 'resizeCanvas',\n        value: function resizeCanvas() {\n            console.log(\"res\");\n            //like agario\n            var w = window.innerWidth * 1.25;\n            var h = window.innerHeight * 1.25;\n            // console.log(w);\n            // console.log(h);\n            this.cv.canvas.width = w;\n            this.cv.canvas.height = h;\n            this.cv.renderer.resize(this.cv.canvas.width, this.cv.canvas.height);\n            this.cv.stage.pivot.x = this.cv.canvas.width / 2;\n            this.cv.stage.pivot.y = this.cv.canvas.height / 2;\n            this.cv.stage.position.x = this.cv.canvas.width / 2;\n            this.cv.stage.position.y = this.cv.canvas.height / 2;\n\n            // 1600 / 1920 = 0.8333;\n            // 500 / 1080 = 0.463;\n            // to fill canvas will be 0.8333 * (1920,1080) = (1600,900) clipped top and bottom\n            var scale = Math.max(w / cfg.scopeInitX, h / cfg.scopeInitY);\n\n            //care of rounding...\n            var canW = lot.round(2, scale * cfg.scopeInitX);\n            var canH = lot.round(2, scale * cfg.scopeInitY);\n            if (canW > w) {\n                this.scale = window.innerHeight / cfg.scopeInitY;\n            } else if (canH > h) {\n                this.scale = window.innerWidth / cfg.scopeInitX;\n            }\n            //no smoothing\n            this.setScaleTarget(false);\n        }\n\n        //modify this.scaleMass and resize\n\n    }, {\n        key: 'resizeMass',\n        value: function resizeMass(mass) {\n            this.scaleMass = lot.getScaleMass(mass);\n            this.setScaleTarget(false);\n        }\n    }, {\n        key: 'resizeStage',\n        value: function resizeStage(scale) {\n            this.cv.stage.scale.set(scale);\n        }\n    }, {\n        key: 'resizeHud',\n        value: function resizeHud() {\n            var leaderboard = document.getElementById('leaderboard');\n            var boardDiv = document.getElementById('boardDiv');\n            var entry = document.getElementById('entry');\n            leaderboard.style.fontSize = boardDiv.offsetWidth / 7 + \"px\";\n            entry.style.fontSize = boardDiv.offsetWidth / 11 + \"px\";\n\n            var fpsTextX = 5 * this.scale,\n                fpsTextY = 5 * this.scale,\n                scoreX = 5 * this.scale,\n                scoreY = this.cv.canvas.height - 25 * this.scale,\n                xX = 5 * this.scale,\n                xY = 30 * this.scale,\n                yX = 5 * this.scale,\n                yY = 50 * this.scale,\n                miniX = this.cv.canvas.width - 60 * this.scale,\n                miniY = this.cv.canvas.height - 60 * this.scale;\n\n            this.cv.hud.fpsText.position.set(fpsTextX, fpsTextY);\n            this.cv.hud.score.position.set(scoreX, scoreY);\n            this.cv.hud.x.position.set(xX, xY);\n            this.cv.hud.y.position.set(yX, yY);\n\n            console.log(this.scale);\n            var style = lot.getStyle(20, this.scale);\n            console.log(style);\n            this.cv.hud.fpsText.style = style;\n            this.cv.hud.score.style = style;\n            this.cv.hud.x.style = style;\n            this.cv.hud.y.style = style;\n\n            this.cv.hud.minimap.clear();\n            this.cv.hud.minimap.beginFill(0xa8a8a8, 0.5);\n            this.cv.hud.minimap.drawCircle(miniX, miniY, cfg.minimapRad * this.scale);\n        }\n    }]);\n\n    return Camera;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__camera__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__hud__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__textures__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ViewMap__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ViewPlayer__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ViewBall__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ViewFood__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ViewShoot__ = __webpack_require__(11);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\n\n\nvar cfg = __webpack_require__(0);\n\nvar Canvas = function () {\n    function Canvas() {\n        var _this = this;\n\n        _classCallCheck(this, Canvas);\n\n        this.canvas = document.getElementById(\"ctx\");\n        this.assetsLoaded = false;\n        this.txt = new __WEBPACK_IMPORTED_MODULE_2__textures__[\"a\" /* default */](this);\n        this.hud = new __WEBPACK_IMPORTED_MODULE_1__hud__[\"a\" /* default */](this);\n        this.cam = new __WEBPACK_IMPORTED_MODULE_0__camera__[\"a\" /* default */](this);\n        this.vmap = new __WEBPACK_IMPORTED_MODULE_3__ViewMap__[\"a\" /* default */](this);\n        this.vplayer = new __WEBPACK_IMPORTED_MODULE_4__ViewPlayer__[\"a\" /* default */](this);\n        this.vball = new __WEBPACK_IMPORTED_MODULE_5__ViewBall__[\"a\" /* default */](this);\n        this.vfood = new __WEBPACK_IMPORTED_MODULE_6__ViewFood__[\"a\" /* default */](this);\n        this.vshoot = new __WEBPACK_IMPORTED_MODULE_7__ViewShoot__[\"a\" /* default */](this);\n\n        this.preload();\n\n        window.addEventListener('resize', function (e) {\n            _this.cam.resizeCamera();\n        });\n        this.cam.resizeCamera();\n    }\n\n    _createClass(Canvas, [{\n        key: 'preload',\n        value: function preload() {\n            this.renderer = new PIXI.autoDetectRenderer(cfg.scopeInitX, cfg.scopeInitY, {\n                view: this.canvas\n            });\n            //PIXI.RESOLUTION = window.devicePixelRatio;\n            this.renderer.clearBeforeRender = false;\n\n            this.preloadStage();\n            this.txt.preloadTextures();\n            this.hud.preloadHud();\n        }\n    }, {\n        key: 'preloadStage',\n        value: function preloadStage() {\n            this.stage = new PIXI.Container();\n            this.stage.displayList = new PIXI.DisplayList();\n            this.limitLayer = new PIXI.DisplayGroup(0, false);\n            this.tunnelLayer = new PIXI.DisplayGroup(1, false);\n            this.foodLayer = new PIXI.DisplayGroup(2, false);\n            this.playerLayer = new PIXI.DisplayGroup(3, false);\n            // this.textLayer = new PIXI.DisplayGroup(4, false);\n        }\n    }, {\n        key: 'onTexturesLoaded',\n        value: function onTexturesLoaded() {\n            this.vmap.preloadSprites();\n            //NOTE needed ?\n            this.vmap.drawMap({\n                x: 0,\n                y: 0\n            });\n            this.assetsLoaded = true;\n\n            //start DOM animation\n            var signPanelDiv = document.getElementById('signPanelDiv');\n            signPanelDiv.style.display = 'block';\n            this.canvas.style.display = 'block';\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            this.renderer.render(this.stage);\n            this.renderer.render(this.hud.container);\n            // this.renderer.render(this.foodContainer);\n        }\n    }, {\n        key: 'removeSprites',\n        value: function removeSprites(removedPlayers, removedFoods, removedShoots) {\n            // sprite.destroy(); - will destroy sprite, leaving PIXI.Texture and PIXI.BaseTexture untouched\n            // sprite.destroy(true); - will destroy sprite and PIXI.Texture; PIXI.BaseTexture remains untouched\n            // sprite.destroy(true, true); - will destroy sprite, PIXI.Texture and PIXI.BaseTexture\n            for (var i = removedPlayers.length; i--;) {\n                var removedBalls = removedPlayers[i].getBallController().getEntities();\n                if (removedPlayers[i].sprite) {\n                    this.stage.removeChild(removedPlayers[i].sprite);\n                    removedPlayers[i].sprite.destroy();\n                }\n                for (var j = removedBalls.length; j--;) {\n                    if (removedBalls[j].sprite) {\n                        this.stage.removeChild(removedBalls[j].sprite);\n                        removedBalls[j].sprite.destroy();\n                    }\n                }\n                if (removedPlayers[i].spriteRing) {\n                    this.stage.removeChild(removedPlayers[i].spriteRing);\n                    removedPlayers[i].spriteRing.destroy();\n                }\n                if (removedPlayers[i].spriteDash) {\n                    this.stage.removeChild(removedPlayers[i].spriteDash);\n                    removedPlayers[i].spriteDash.destroy();\n                }\n                if (removedPlayers[i].graphics) {\n                    this.stage.removeChild(removedPlayers[i].graphics);\n                    removedPlayers[i].graphics.destroy(true);\n                }\n                if (removedPlayers[i].text) {\n                    this.hud.container.removeChild(removedPlayers[i].text);\n                    removedPlayers[i].text.destroy(true);\n                }\n            }\n            for (var _i = removedFoods.length; _i--;) {\n                if (removedFoods[_i].sprite) {\n                    this.stage.removeChild(removedFoods[_i].sprite);\n                    removedFoods[_i].sprite.destroy();\n                }\n            }\n            for (var _i2 = removedShoots.length; _i2--;) {\n                if (removedShoots[_i2].sprite) {\n                    this.stage.removeChild(removedShoots[_i2].sprite);\n                    removedShoots[_i2].sprite.destroy();\n                }\n            }\n        }\n    }]);\n\n    return Canvas;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Canvas);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//temporary\nvar Fps = __webpack_require__(42),\n    cfg = __webpack_require__(0);\n\nvar Hud = function () {\n    function Hud(cv) {\n        _classCallCheck(this, Hud);\n\n        this.cv = cv;\n        this.canvas = cv.canvas;\n    }\n\n    _createClass(Hud, [{\n        key: 'preloadHud',\n        value: function preloadHud() {\n            var _this = this;\n\n            //we don't apply scale on HUD (but we do on stage): no blur\n            this.container = new PIXI.Container();\n\n            //Board\n            // const board = document.getElementById('boardDiv');\n            // const leaderboard = document.getElementById('leaderboard');\n            var num = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'];\n            this.entries = [];\n            for (var i = 0; i < 10; i++) {\n                this.entries.push(document.getElementById(num[i]));\n            }\n\n            //FPS\n            this.fps = new Fps();\n            this.fpsText = new PIXI.Text('', cfg.textOpt);\n            this.container.addChild(this.fpsText);\n            setInterval(function () {\n                _this.fpsText.text = 'Fps: ' + _this.fps.getFps();\n            }, 1000);\n\n            //Mass\n            this.score = new PIXI.Text('', cfg.textOpt);\n            this.container.addChild(this.score);\n\n            //x, y\n            this.x = new PIXI.Text('', cfg.textOpt);\n            this.container.addChild(this.x);\n            this.y = new PIXI.Text('', cfg.textOpt);\n            this.container.addChild(this.y);\n\n            //Minimap\n            this.minimap = new PIXI.Graphics();\n            this.container.addChild(this.minimap);\n            this.miniself = new PIXI.Graphics();\n            this.container.addChild(this.miniself);\n\n            this.container.visible = false;\n        }\n\n        //DOM\n\n    }, {\n        key: 'drawBoard',\n        value: function drawBoard(board) {\n            var len = board.length;\n            for (var i = 0; i < len; i++) {\n                this.entries[i].textContent = i + 1 + '. ' + board[i];\n            }\n\n            if (len < 10) {\n                for (var _i = len; _i < 10; _i++) {\n                    this.entries[_i].textContent = '';\n                }\n            }\n        }\n    }, {\n        key: 'drawHud',\n        value: function drawHud(selfState) {\n            //Mass if modif\n            if (this.score.text !== 'Mass : ' + selfState.mass) {\n                this.score.text = 'Mass : ' + selfState.mass;\n            }\n            //x,y\n            this.x.text = 'x: ' + Math.round(selfState.x);\n            this.y.text = 'y: ' + Math.round(selfState.y);\n\n            //minimap\n            var miniX = this.canvas.width + (selfState.x * cfg.minimapRad / cfg.midLimitRad - 60) * this.cv.cam.scale;\n            var miniY = this.canvas.height + (selfState.y * cfg.minimapRad / cfg.midLimitRad - 60) * this.cv.cam.scale;\n            this.miniself.clear();\n            this.miniself.beginFill(0x000000, 0.5);\n            this.miniself.drawCircle(miniX, miniY, cfg.miniselfRad * this.cv.cam.scale);\n        }\n    }]);\n\n    return Hud;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Hud);\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar cfg = __webpack_require__(0);\n\nvar Textures = function () {\n    function Textures(cv) {\n        _classCallCheck(this, Textures);\n\n        this.cv = cv;\n    }\n\n    /**\r\n     * Pixi uses Texture cache to store and reference all the textures needed.\r\n     * Texture = WebGL format of an image, to be processed by the GPU.\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(Textures, [{\n        key: \"preloadTextures\",\n        value: function preloadTextures() {\n            this.loader = new PIXI.loaders.Loader();\n            this.loader\n            // Chainable `add` to enqueue a resource\n            .add(\"ringTxt\", cfg.ringImg).add(\"mapTxt\", cfg.mapImg).add(\"bgTxt\", cfg.bgImg).add(\"foodTxt\", cfg.foodImg).add(cfg.playerSet).add(cfg.fireballSet).on(\"progress\", this.onAssetsLoading.bind(this)).once(\"complete\", this.onAssetsLoaded.bind(this))\n            // The `load` method loads the queue of resources, and calls the\n            // passed in callback called once all resources have loaded.\n            .load();\n\n            //.reset()\n            //PIXI.TextureCache['assets/images/hud/hud_bench.png'].destroy(true);\n\n            //mid limit\n            var canMid = this.createBorderTexture(cfg.midLimitRad, cfg.midLimitStroke, cfg.midLimitOffset);\n            this.midLimitTxt = new PIXI.Texture.fromCanvas(canMid);\n            //end limit\n            var canEnd = this.createBorderTexture(cfg.endLimitRad, cfg.endLimitStroke, cfg.endLimitOffset);\n            this.endLimitTxt = new PIXI.Texture.fromCanvas(canEnd);\n\n            // this.foodTxtList = {};\n            // for (let i = 0; i < cfg.foodMasses.length; i++) {\n            //     const canFood = this.createFoodTexture(cfg.foodMasses[i]);\n            //     this.foodTxtList[cfg.foodMasses[i]] = new PIXI.Texture.fromCanvas(canFood);\n            // }\n\n            //TODO: dash color for each skin\n            this.dashTxtList = [];\n            for (var i = 0; i < cfg.dashTxtSize; i++) {\n                var b = {\n                    x: 25,\n                    y: 25,\n                    rad: 25,\n                    r: 252,\n                    g: 233,\n                    b: 102\n                };\n                var canDash = this.createDashTexture(i, b);\n                this.dashTxtList.push(new PIXI.Texture.fromCanvas(canDash));\n            }\n            //dash textures: a-b-c-d-c-b\n            //or play and rewind\n            var rewind = this.dashTxtList.slice(1, -1);\n            this.dashTxtList = this.dashTxtList.concat(rewind.reverse());\n        }\n    }, {\n        key: \"onAssetsLoading\",\n        value: function onAssetsLoading(loader, loadedResource) {\n            console.log('Progress:', loader.progress + '%');\n        }\n\n        /**\r\n         * use aliases\r\n         * @return {void}\r\n         */\n\n    }, {\n        key: \"onAssetsLoaded\",\n        value: function onAssetsLoaded() {\n            var resources = this.loader.resources;\n            // this.playerImgL.baseTexture.mipmap = false;\n            // this.playerImgR.baseTexture.mipmap = false;\n            // this.loader.resources.ringTxt.destroy(true);\n            // PIXI.TextureCache['/client/img/bullet.png'].destroy(true);\n            this.ringTxt = resources.ringTxt.texture;\n            this.mapTxt = resources.mapTxt.texture;\n            this.bgTxt = resources.bgTxt.texture;\n            this.foodTxt = resources.foodTxt.texture;\n            // console.log(PIXI.loader.resources);\n            this.playerTxtList = [];\n            // for (let i = 0; i < 3; i++) {\n            //     this.playerTxtList.push(PIXI.Texture.fromFrame('flappy' + i + '.png'));\n            for (var i = 1; i < 5; i++) {\n                this.playerTxtList.push(PIXI.Texture.fromFrame('frame-' + i + '.png'));\n            }\n\n            this.fireballTxtList = [];\n            for (var _i = 0; _i < 6; _i++) {\n                this.fireballTxtList.push(PIXI.Texture.fromFrame('fireball' + _i + '.png'));\n            }\n            //Create a rectangle object that defines the position and\n            //size of the sub-image you want to extract from the texture\n            // const rectangle = new Rectangle(0, 0, 512, 512);\n            //\n            // const txt = resources.fireballTxtSet;\n            // //Tell the texture to use that rectangular section\n            // txt.frame = rectangle;\n            // this.ballTxtList.push(new PIXI)\n\n            this.cv.onTexturesLoaded();\n        }\n\n        /**\r\n         * mid and end limit\r\n         * @param  {float} limitRad    radius\r\n         * @param  {float} limitStroke thickness\r\n         * @param  {float} limitOffset negative position of the center\r\n         * @return {canvas}            90 degrees circle of radius =\r\n         *                                limitRad + limitStroke thickness\r\n         */\n\n    }, {\n        key: \"createBorderTexture\",\n        value: function createBorderTexture(limitRad, limitStroke, limitOffset) {\n            //can we decrease width/height according to scale ?\n            var canSize = limitRad + limitStroke - limitOffset;\n            var can = this.createCanvas(canSize, canSize);\n            var ctx = can.getContext('2d');\n            if (cfg.debugBorder) {\n                ctx.strokeStyle = 'rgba(250, 255, 0, 0.7)';\n                ctx.lineWidth = 5;\n                ctx.strokeRect(0, 0, canSize, canSize);\n            }\n            ctx.beginPath();\n            ctx.arc(-limitOffset, -limitOffset, limitRad + limitStroke / 2, 0, Math.PI / 2); //radius + lineWidth/2\n            ctx.lineWidth = limitStroke;\n            ctx.strokeStyle = 'rgba(255, 0, 0, 0.7)';\n            ctx.stroke();\n            return can;\n        }\n\n        /**\r\n         *\r\n         * @param  {int} mass food mass\r\n         * @return {canvas}     lighter canvas of a food\r\n         */\n\n    }, {\n        key: \"createFoodTexture\",\n        value: function createFoodTexture(mass) {\n            //TODO: food color\n            var size = cfg.foodInitSize + mass * cfg.foodFactor;\n            var can = this.createCanvas(size, size);\n            var ctx = can.getContext('2d');\n            ctx.globalCompositeOperation = \"lighter\";\n            if (cfg.debugFood) {\n                ctx.strokeStyle = 'rgba(250, 255, 0, 0.7)';\n                ctx.lineWidth = 5;\n                ctx.strokeRect(0, 0, size, size);\n            }\n            ctx.beginPath();\n            var b = {\n                x: size / 2,\n                y: size / 2,\n                rad: size / 2\n            };\n            var gradblur = ctx.createRadialGradient(b.x, b.y, 0, b.x, b.y, b.rad);\n            //REVIEW: food texture: circle ? ring ?\n            // let edgecolor1 = \"rgba(255, 255, 255, 0.0)\"; // + (0.9 + mass * 0.03) + \")\";\n            var edgecolor1 = \"rgba(255, 255, 255, 0.4)\";\n            gradblur.addColorStop(0, edgecolor1);\n            // gradblur.addColorStop(0.2, edgecolor2);\n            gradblur.addColorStop(0.6, edgecolor1);\n            // gradblur.addColorStop(0.95, edgecolor2);\n            ctx.fillStyle = gradblur;\n            ctx.arc(b.x, b.y, b.rad, 0, Math.PI * 2, false);\n            ctx.fill();\n\n            gradblur = ctx.createRadialGradient(b.x, b.y, 0, b.x, b.y, b.rad);\n            //REVIEW: food texture: circle ? ring ?\n            edgecolor1 = \"rgba(255, 255, 255, 0.4)\"; // + (0.9 + mass * 0.03) + \")\";\n            var edgecolor2 = \"rgba(255, 255, 255, 0.0)\";\n            gradblur.addColorStop(0, edgecolor2);\n            // gradblur.addColorStop(0.2, edgecolor2);\n            gradblur.addColorStop(0.6, edgecolor2);\n            gradblur.addColorStop(0.6, edgecolor1);\n            // gradblur.addColorStop(0.9, edgecolor2);\n            gradblur.addColorStop(1, edgecolor2);\n            ctx.fillStyle = gradblur;\n            ctx.arc(b.x, b.y, b.rad, 0, Math.PI * 2, false);\n            ctx.fill();\n\n            // ctx.fillStyle = \"rgba(255, 255, 255, 0.4)\";\n            // ctx.beginPath();\n            // ctx.arc(b.x, b.y, b.rad - 4 - mass / 2, 0, Math.PI * 2, false);\n            // ctx.fill();\n            // ctx.strokeStyle = \"rgba(255, 255, 255, 0.8)\";\n            // ctx.lineWidth = 2;\n            ctx.fill();\n            // ctx.beginPath();\n            // ctx.arc(b.x, b.y, b.rad - 10 - mass / 2, 0, Math.PI * 2, false);\n            // ctx.stroke();\n            // ctx.arc(b.x, b.y, b.rad - 13 - mass / 2, 0, Math.PI * 2, false);\n            // ctx.stroke();\n            // ctx.arc(b.x, b.y, b.rad - 22 - mass / 2, 0, Math.PI * 2, false);\n            // ctx.stroke();\n\n            // ctx.strokeStyle = \"rgba(\" + b.r + \",\" + b.g + \",\" + b.b + \",0.9)\";\n            // ctx.lineWidth = 3;\n            // ctx.strokeRect(0, 0, can.width, can.height);\n            return can;\n        }\n\n        /**\r\n         *\r\n         * @param  {int} i sample #i\r\n         * @param  {ball} b circle object\r\n         * @return {canvas}   lighter canvas for dash #i\r\n         */\n\n    }, {\n        key: \"createDashTexture\",\n        value: function createDashTexture(i, b) {\n            var can = this.createCanvas(b.rad * 2, b.rad * 2);\n            var ctx = can.getContext('2d');\n            ctx.globalCompositeOperation = \"lighter\";\n            ctx.beginPath();\n            var gradblur = ctx.createRadialGradient(b.x, b.y, 0, b.x, b.y, b.rad);\n\n            var edgecolor1 = \"rgba(\" + b.r + \",\" + b.g + \",\" + b.b + \",\" + 0.6 + \")\";\n            var edgecolor2 = \"rgba(\" + b.r + \",\" + b.g + \",\" + b.b + \",0.0)\";\n            gradblur.addColorStop(0, edgecolor1);\n            gradblur.addColorStop(0.7 + i * 0.05, edgecolor2);\n            ctx.fillStyle = gradblur;\n            ctx.arc(b.x, b.y, b.rad, 0, Math.PI * 2, false);\n            for (var j = -3; j < i; j++) {\n                ctx.fill();\n            }\n            return can;\n        }\n    }, {\n        key: \"createCanvas\",\n        value: function createCanvas(width, height) {\n            var can = document.createElement(\"canvas\");\n            can.width = width;\n            can.height = height;\n            return can;\n        }\n    }]);\n\n    return Textures;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Textures);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Debug = __webpack_require__(27),\n    Chat = __webpack_require__(26),\n    cfg = __webpack_require__(0),\n    Sender = __webpack_require__(33),\n    Receiver = __webpack_require__(32),\n    StateController = __webpack_require__(25);\n\nexports = module.exports = Client;\n\nfunction Client(socket) {\n    if (cfg.debug) {\n        new Chat(socket);\n    }\n\n    this.socket = socket;\n    this.stateController = new StateController();\n\n    this.selfId = -1;\n    this.inTransition = false;\n\n    Receiver.call(this);\n    Sender.call(this);\n}\n\nClient.prototype = _.extend(Object.create(Sender.prototype), Object.create(Receiver.prototype), {\n    onDisconnect: function onDisconnect() {\n        this.stateController.clearEntities();\n        this.socket.close();\n        console.log(\"Disconnected\");\n    },\n\n    //Setters\n    setInTransition: function setInTransition(isInTransition) {\n        this.inTransition = isInTransition;\n    },\n\n    //Getters\n    getStateController: function getStateController() {\n        return this.stateController;\n    },\n\n    /**\r\n     * if not in game: -1\r\n     * else: >= 0\r\n     * @return {int} id\r\n     */\n    getSelfId: function getSelfId() {\n        return this.selfId;\n    },\n\n    /**\r\n     * if received Clear: true\r\n     * else: false\r\n     * @return {Boolean}\r\n     */\n    isInTransition: function isInTransition() {\n        return this.inTransition;\n    }\n});\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar EntityController = __webpack_require__(3),\n    Ball = __webpack_require__(18);\n\nexports = module.exports = BallController;\n\nfunction BallController(referrerId, ballAngle, ballStartTime) {\n    EntityController.call(this);\n\n    this.nextId = 1;\n    this.referrerId = referrerId;\n    this.ballAngle = ballAngle;\n    this.ballLastTime = ballStartTime;\n}\n\nBallController.prototype = _.extend(Object.create(EntityController.prototype), {\n    add: function add(referrerState) {\n        var newBall = new Ball(this.nextId++, this.referrerId, referrerState);\n        this.entities.push(newBall);\n\n        return newBall;\n    },\n\n    getBallAngle: function getBallAngle() {\n        return this.ballAngle;\n    },\n\n    getBallLastTime: function getBallLastTime() {\n        return this.ballLastTime;\n    },\n\n    setBallAngle: function setBallAngle(ballAngle) {\n        this.ballAngle = ballAngle;\n    },\n\n    setBallLastTime: function setBallLastTime(ballLastTime) {\n        this.ballLastTime = ballLastTime;\n    }\n});\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Entity = __webpack_require__(2),\n    ic = __webpack_require__(5);\n\nexports = module.exports = Ball;\n\nfunction Ball(id, referrerId, referrerState) {\n    Entity.call(this, id);\n    this.referrerId = referrerId; //not needed to broadcast and update\n    this.state = ic.getInitBallState(referrerState, 0, 0);\n}\n\nBall.prototype = _.extend(Object.create(Entity.prototype), {\n    //broadcast\n    // getBallState: function() {\n    //     //TODO: if not changed!\n    //     return {\n    //         mass: this.state.mass,\n    //         angle: this.stage.angle,\n    //     };\n    // },\n\n});\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Entity = __webpack_require__(2);\n\nexports = module.exports = Food;\n\n/**\r\n * Food entity, state:\r\n * xReal, yReal: hitbox,\r\n * x, y: random position,\r\n * vr - random circular speed: Math.random()\r\n * angle 0: random circular direction\r\n * movingTime 0: limit time of moving (when eating)\r\n *\r\n * @param {int} id\r\n */\nfunction Food(id, mass) {\n  Entity.call(this, id);\n  this.state.movingTime = 0;\n  this.mass = mass;\n}\n\nFood.prototype = Object.create(Entity.prototype);\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Entity = __webpack_require__(2),\n    BallController = __webpack_require__(17),\n    Update = __webpack_require__(4),\n    cfg = __webpack_require__(0);\n\nexports = module.exports = Player;\n\n/**\r\n * name\r\n * state {x, y, vx, vy, mass, ring, dashing}\r\n *\r\n * @param {int} id\r\n * @param {string} name\r\n */\nfunction Player(id, name, ballAngle, ballStartTime) {\n    Entity.call(this, id);\n    this.name = name;\n    // this.inputController = 1;\n    this.ballController = new BallController(id, ballAngle, ballStartTime);\n}\n\nPlayer.prototype = _.extend(Object.create(Entity.prototype), {\n    /**\r\n     * if first update: player.state = new state\r\n     * else: use last update to have a complete new state\r\n     *\r\n     * add update from updatePs msg\r\n     * remove the first update if full\r\n     * this buffer length allows to handle lags.\r\n     *\r\n     * @param {object} state : new state\r\n     * @param {time} time\r\n     */\n    addUpdate: function addUpdate(state, time) {\n        var newState = state;\n        if (this.updates.length === 0) {\n            this.state = state;\n        } else {\n            var preState = this.updates[this.updates.length - 1].state;\n            if (state.x === undefined) {\n                newState.x = preState.x;\n            }\n            if (state.y === undefined) {\n                newState.y = preState.y;\n            }\n            if (state.vx === undefined) {\n                newState.vx = preState.vx;\n            }\n            if (state.vy === undefined) {\n                newState.vy = preState.vy;\n            }\n            if (state.ring === undefined) {\n                newState.ring = preState.ring;\n            }\n            if (state.mass === undefined) {\n                newState.mass = preState.mass;\n            }\n            if (state.dashing === undefined) {\n                newState.dashing = preState.dashing;\n            }\n        }\n\n        var newUpdate = new Update(newState, time);\n        this.updates.push(newUpdate);\n        if (this.updates.length > cfg.clientMaxUpdateBuffer) {\n            this.updates.splice(0, 1);\n        }\n    },\n\n    getBallController: function getBallController() {\n        return this.ballController;\n    }\n});\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Entity = __webpack_require__(2);\n\nexports = module.exports = Shoot;\n\nfunction Shoot(id) {\n    Entity.call(this, id);\n}\n\nShoot.prototype = Object.create(Entity.prototype);\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar EntityController = __webpack_require__(3),\n    Food = __webpack_require__(19);\n\nexports = module.exports = FoodController;\n\nfunction FoodController() {\n    EntityController.call(this);\n}\n\nFoodController.prototype = _.extend(EntityController.prototype, {\n    add: function add(id, mass) {\n        // REVIEW: check how did I handle double food\n        // if (lot.idxOf(this.entities, 'id', id) > -1) {\n        //     console.log(\"Double food\");\n        // }\n        var food = new Food(id, mass);\n        this.entities.push(food);\n        return food;\n    }\n});\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar EntityController = __webpack_require__(3),\n    Player = __webpack_require__(20);\n\nexports = module.exports = PlayerController;\n\nfunction PlayerController() {\n    EntityController.call(this);\n    this.board = [];\n    this.updatedBoard = false;\n}\n\nPlayerController.prototype = _.extend(Object.create(EntityController.prototype), {\n    /**\r\n     * add player from updatePs msg\r\n     * @param {int} id\r\n     * @param {string} name\r\n     */\n    add: function add(id, name, ballAngle, ballStartTime) {\n        var player = new Player(id, name, ballAngle, ballStartTime);\n        this.entities.push(player);\n        return player;\n    },\n\n    //Setters\n    setBoard: function setBoard(board) {\n        this.board = board;\n    },\n\n    setUpdatedBoard: function setUpdatedBoard(updatedBoard) {\n        this.updatedBoard = updatedBoard;\n    },\n\n    //Getters\n    getBoard: function getBoard() {\n        return this.board;\n    },\n\n    isUpdatedBoard: function isUpdatedBoard() {\n        return this.updatedBoard;\n    }\n});\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar EntityController = __webpack_require__(3),\n    Shoot = __webpack_require__(21);\n\nexports = module.exports = ShootController;\n\nfunction ShootController() {\n    EntityController.call(this);\n}\nShootController.prototype = Object.create(EntityController.prototype);\nShootController.prototype.add = function (id) {\n    var shoot = new Shoot(id);\n    this.entities.push(shoot);\n    return shoot;\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar cfg = __webpack_require__(0),\n    lot = __webpack_require__(1),\n    GamePhysics = __webpack_require__(41),\n    Update = __webpack_require__(4),\n    PlayerController = __webpack_require__(23),\n    FoodController = __webpack_require__(22),\n    ShootController = __webpack_require__(24);\n\nexports = module.exports = StateController;\n\nfunction StateController() {\n    this.serverTime = 0;\n    this.interpolationTime = cfg.clientInterpolationTime;\n    this.rendered = 0;\n    this.lastRenderTime = 0;\n    this.rendering = false;\n\n    this.smoothingFactor = cfg.clientSmoothingFactor;\n\n    this.playerController = new PlayerController();\n    this.foodController = new FoodController();\n    this.shootController = new ShootController();\n\n    if (cfg.debug) {\n        this.debug = new Debug();\n    }\n    this.lagCompensation = cfg.serverLagCompensation;\n}\nStateController.prototype = {\n    /**\r\n     * TODO: reset leaderboard\r\n     * onDisconnect: just clear\r\n     * @return {void}\r\n     */\n    clearEntities: function clearEntities() {\n        console.log(\"removing\");\n        this.playerController.clearEntities();\n        this.foodController.clearEntities();\n        this.shootController.clearEntities();\n    },\n\n    /**\r\n     * update all the player states if they have at least one Update\r\n     * @return {void}\r\n     */\n    updatePlayerStates: function updatePlayerStates() {\n        var entities = this.playerController.getEntities();\n        for (var i = entities.length; i--;) {\n            var entity = entities[i];\n            if (entity.getUpdates().length) {\n                this.updatePlayerState(entity);\n            }\n        }\n    },\n\n    /**\r\n     * update one player: interpolation of player updates\r\n     * for a new player, no lerp till lerpTime\r\n     * after lerpTime,\r\n     *\r\n     * @param  {Player} entity\r\n     * @return {void}\r\n     */\n    updatePlayerState: function updatePlayerState(entity) {\n\n        // var lastDeltaTime = (entity.updates[entity.updates.length - 1].time - entity.updates[entity.updates.length - 2].time);\n\n        var now = new Date();\n        var rendered = 0;\n        if (this.rendering) {\n            rendered = this.rendered + (now - this.lastRenderTime);\n        }\n        // console.log(rendered);\n        this.rendered = rendered;\n        this.lastRenderTime = now;\n        var renderTime = this.getRenderTime(rendered);\n\n        var pos,\n            interpolationFactor,\n            newState,\n            pos = entity.getInterpolatedUpdates(renderTime);\n\n        // OPTI: jittering solution?\n        if (!pos.previous && entity.isVisible()) {\n            console.log(\"Jittering\");\n            // this.rendered = 0;\n            // this.rendering = false;\n            // newState = GamePhysics.getExtrapolatedPlayerState(entity.updates[entity.updates.length - 1], renderTime - entity.updates[entity.updates.length - 1].time);\n            // entity.setState(newState);\n        }\n        if (pos.previous && pos.target) {\n            interpolationFactor = this.getInterpolatedValue(pos.previous.time, pos.target.time, renderTime);\n            // console.log(pos.previous.ballStartTime);\n            // console.log(pos.previous.state.ballStartTime);\n            // console.log(pos.previous.state.ballAngle);\n            newState = GamePhysics.getInterpolatedEntityState(pos.previous.state, pos.target.state, interpolationFactor);\n            // newState = GamePhysics.getInterpolatedEntityState(entity.state, newState, this.smoothingFactor);\n            entity.setState(newState);\n\n            this.predictBallStates(entity, renderTime);\n\n            //only if interpolated\n            this.rendering = true;\n            // this.rendered = rendered;\n\n            //entities can be drawed after the first state interpolation\n            // if (!entity.isVisible()) {\n            //     entity.setVisible(true);\n            // }\n        } else {\n            //remove after interpolationTime\n            if (entity.isToRemove()) {\n                this.playerController.removeEntity(entity);\n            }\n        }\n    },\n\n    getInterpolatedValue: function getInterpolatedValue(previousTime, targetTime, renderTime) {\n        var range = targetTime - previousTime,\n            difference = renderTime - previousTime;\n        var ratio = difference / range;\n        if (ratio > 1) ratio = 1;\n        // console.log(ratio);\n        // ratio = 1;\n        var value = parseFloat(ratio.toFixed(3));\n        // console.log((difference / range));\n        return value;\n    },\n\n    getRenderTime: function getRenderTime(rendered) {\n        // var renderTime = this.serverTime - interpolationTime + this.elapsedLastUpdate;\n        // console.log(-interpolationTime + this.elapsedLastUpdate);\n        var renderTime = this.serverTime - this.interpolationTime + rendered;\n        // console.log(this.rendered);\n        return renderTime;\n    },\n\n    /**\r\n     * client render in the past to have at least 2 known position during the interpolationTime\r\n     * @param {time} serverTime\r\n     */\n    setServerTime: function setServerTime(serverTime) {\n        this.serverTime = serverTime;\n    },\n\n    //only for client rendering\n    setElapsedLastUpdate: function setElapsedLastUpdate(deltaTime) {\n        // console.log(now - this.lastUpdateTime);\n        if (!this.serverTime) return;\n        this.elapsedLastUpdate += deltaTime;\n        // console.log(this.elapsedLastUpdate);\n        // this.lastUpdateTime = now;\n        // console.log(this.elapsedLastUpdate);\n    },\n\n    predictBallStates: function predictBallStates(player, renderTime) {\n        var ballController = player.getBallController();\n        var deltaTime = (renderTime - ballController.getBallLastTime()) / 1000.0;\n        ballController.setBallLastTime(renderTime);\n\n        var oldAngle = ballController.getBallAngle();\n        var newAngle = GamePhysics.getNewBallAngle(oldAngle, deltaTime);\n        ballController.setBallAngle(newAngle);\n\n        GamePhysics.checkNewBalls(player);\n        var balls = ballController.getEntities();\n        for (var i = 0; i < balls.length; i++) {\n            var ball = balls[i];\n            // console.log(i + \":\" + ball.state.angle);\n\n            var newState = GamePhysics.getNewBallState(player.state, ball.state, newAngle, i);\n            ball.setState(newState);\n        }\n    },\n\n    predictShootStates: function predictShootStates(deltaTime) {\n        var entities = this.shootController.getEntities();\n        for (var i = entities.length; i--;) {\n            var shoot = entities[i];\n            var newState = GamePhysics.getNewShootState(shoot, deltaTime);\n            if (newState) {\n                shoot.setState(newState);\n            } else {\n                this.shootController.removeEntity(shoot);\n            }\n        }\n    },\n\n    /**\r\n     * predict food state: random or eating\r\n     * remove if eaten\r\n     * @param  {time} deltaTime rendering\r\n     * @return {void}\r\n     */\n    predictFoodStates: function predictFoodStates(deltaTime) {\n        var entities = this.foodController.getEntities();\n        for (var i = entities.length; i--;) {\n            var food = entities[i];\n            var newState = GamePhysics.getNewFoodState(food, deltaTime);\n            if (newState) {\n                food.setState(newState);\n            } else {\n                this.foodController.removeEntity(food);\n            }\n        }\n    },\n\n    /**\r\n     * if player new: add player(id, name)\r\n     * else: add update(state, time) to player from id\r\n     *\r\n     * @param {time} time     serverTs\r\n     * @param {list} updatePs array of array: players to update\r\n     */\n    addPlayerUpdates: function addPlayerUpdates(time, updatePs) {\n        for (var i = updatePs.length; i--;) {\n            var playerState = updatePs[i],\n                player;\n\n            var id = playerState[0],\n                state = playerState[1];\n\n            var j = lot.idxOf(this.playerController.getEntities(), 'id', id);\n            if (j >= 0) {\n                player = this.playerController.getEntities()[j];\n            } else {\n                var name = playerState[2],\n                    ballAngle = playerState[3];\n                player = this.playerController.add(id, name, ballAngle, time);\n            }\n            player.addUpdate(state, time);\n        }\n        var entities = this.playerController.getEntities();\n    },\n\n    updateShootStates: function updateShootStates(entitiesToAdd) {\n        for (var i = entitiesToAdd.length; i--;) {\n            var entityToAdd = entitiesToAdd[i];\n\n            var newEntity = this.shootController.add(entityToAdd[0]);\n            newEntity.setState(entityToAdd[1]);\n        }\n    },\n\n    /**\r\n     * add an Food after lerp\r\n     * @param  {list} entitiesToAdd : all foods to init\r\n     * @return {void}\r\n     */\n    updateFoodInitStates: function updateFoodInitStates(entitiesToAdd) {\n        // console.log();\n        for (var i = entitiesToAdd.length; i--;) {\n            var entityToAdd = entitiesToAdd[i];\n            var newEntity = this.foodController.add(entityToAdd[0], entityToAdd[2]);\n            newEntity.setState(entityToAdd[1]);\n        }\n    },\n\n    /**\r\n     *  remove players after lerpTime\r\n     * @param  {list} dataRemove : all players to be removed\r\n     * @return {void}\r\n     */\n    updatePlayerRemoveStates: function updatePlayerRemoveStates(dataRemove) {\n        this.updateEntityRemoveStates(dataRemove, this.playerController);\n    },\n\n    /**\r\n     *  remove outscope foods after lerpTime\r\n     * @param  {list} dataRemove : all foods to be removed\r\n     * @return {void}\r\n     */\n    updateFoodRemoveStates: function updateFoodRemoveStates(dataRemove) {\n        this.updateEntityRemoveStates(dataRemove, this.foodController);\n    },\n\n    /**\r\n     * remove players/foods after lerpTime\r\n     * @param  {list} dataRemove id to remove\r\n     * @param  {Controller} controller\r\n     * @return {void}\r\n     */\n    updateEntityRemoveStates: function updateEntityRemoveStates(dataRemove, controller) {\n        var self = this;\n\n        for (var i = dataRemove.length; i--;) {\n            (function () {\n                var entityId = dataRemove[i];\n                setTimeout(function () {\n                    var entities = controller.getEntities();\n                    var idx = lot.idxOf(entities, 'id', entityId);\n                    if (idx >= 0) {\n                        controller.remove(idx);\n                    }\n                }, self.interpolationTime);\n            })();\n        }\n    },\n\n    /**\r\n     *  add a referrer (player) to each food after lerpTime\r\n     * @param  {list} dataEat : all foods to be eaten by referrerId\r\n     * @return {void}\r\n     */\n    updateFoodEatStates: function updateFoodEatStates(dataEat) {\n        var self = this;\n\n        for (var i = dataEat.length; i--;) {\n            (function () {\n                var foodId = dataEat[i][0],\n                    referrerId = dataEat[i][1];\n                setTimeout(function () {\n                    var foods = self.foodController.getEntities();\n                    //optional check\n                    var idx = lot.idxOf(foods, 'id', foodId);\n                    if (idx >= 0) {\n                        var food = foods[idx];\n                        var players = self.playerController.getEntities();\n                        var idxPlayer = lot.idxOf(players, 'id', referrerId);\n                        if (idxPlayer >= 0) {\n                            var player = players[idxPlayer];\n                            food.referrer = player;\n                        }\n                    }\n                }, self.interpolationTime);\n            })();\n        }\n    },\n\n    updateBoard: function updateBoard(data) {\n        if (data.length) {\n            this.playerController.setBoard(data);\n            this.playerController.setUpdatedBoard(true);\n        }\n    },\n\n    //Remove\n\n\n    //Getters\n    getPlayerController: function getPlayerController() {\n        return this.playerController;\n    },\n\n    getFoodController: function getFoodController() {\n        return this.foodController;\n    },\n\n    getShootController: function getShootController() {\n        return this.shootController;\n    }\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nexports = module.exports = Chat;\n\nfunction Chat(socket) {\n    var chatText = document.getElementById(\"chat-text\");\n    var chatInput = document.getElementById(\"chat-input\");\n    var chatForm = document.getElementById(\"chat-form\");\n\n    socket.on('addToChat', function (data) {\n        chatText.innerHTML += '<div>' + data + '</div>';\n    });\n    socket.on('evalAnswer', function (data) {\n        console.log(data);\n    });\n\n    chatForm.onsubmit = function (e) {\n        e.preventDefault();\n        if (chatInput.value[0] === '/') {\n            //on envoie la commande sans le '/'\n            socket.emit('evalServer', chatInput.value.slice(1));\n        } else {\n            socket.emit('sendMsgToServer', chatInput.value);\n        }\n        chatInput.value = '';\n    };\n}\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nexports = module.exports = Debug;\n\nfunction Debug() {\n    debugDiv.style.display = 'inline-block';\n\n    // Simulated lag between client and server.\n    this.serverPhysicsInterval = null;\n    this.serverStateInterval = null;\n    this.lagCompensation = null;\n    this.interpolation = null;\n    this.interpolationTime = null;\n\n    var player_status = document.getElementById(\"player_status\");\n    var _lagCompensation = document.getElementById(\"lag\");\n    var _serverPhysicsInterval = document.getElementById(\"serverPhysicsInterval\");\n    var _serverStateInterval = document.getElementById(\"serverStateInterval\");\n    var _interpolation = document.getElementById(\"interpolation\");\n    var _interpolationTime = document.getElementById('interpolationTime');\n\n    _serverPhysicsInterval.value = cfg.serverPhysicsInterval;\n    _serverStateInterval.value = cfg.serverStateInterval;\n    _lagCompensation.value = cfg.serverLagCompensation;\n    _interpolation.checked = cfg.interpolation;\n    _interpolationTime.value = cfg.interpolationTime;\n\n    // Update simulation parameters from UI.\n    var updateParamFromUI = function () {\n        this.lagCompensation = updateNumberFromUI(this.lagCompensation, _lagCompensation);\n        this.serverPhysicsInterval = updateNumberFromUI(this.serverPhysicsInterval, _serverPhysicsInterval);\n        this.serverStateInterval = updateNumberFromUI(this.serverStateInterval, _serverStateInterval);\n        this.interpolation = _interpolation.checked;\n        this.interpolationTime = updateNumberFromUI(this.interpolationTime, _interpolationTime);\n    }.bind(this);\n\n    var updateNumberFromUI = function updateNumberFromUI(old_value, input) {\n        var new_value = parseInt(input.value);\n        if (isNaN(new_value)) {\n            new_value = old_value;\n        }\n        input.value = new_value;\n        return new_value;\n    };\n\n    _lagCompensation.onchange = updateParamFromUI;\n    _serverPhysicsInterval.onchange = updateParamFromUI;\n    _serverStateInterval.onchange = updateParamFromUI;\n    _interpolation.onchange = updateParamFromUI;\n    _interpolationTime.onchange = updateParamFromUI;\n\n    // Read initial parameters from the UI.\n    updateParamFromUI();\n}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\nmodule.exports = Clear;\n\nfunction Clear() {}\n\n/**\r\n * #2 tell the server to stop send updates \r\n * @return {Buffer}\r\n */\nClear.prototype.form = function () {\n    var buf = new ArrayBuffer(1);\n    var view = new DataView(buf);\n\n    view.setUint8(0, 2);\n\n    return buf;\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = Input;\n\nfunction Input(input) {\n    this.input = input;\n}\n\n/**\r\n * #input\r\n * @return {Buffer}\r\n */\nInput.prototype.form = function () {\n    var buf = new ArrayBuffer(1);\n    var view = new DataView(buf);\n\n    view.setUint8(0, this.input);\n\n    return buf;\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BufferWriter = __webpack_require__(38);\n\nmodule.exports = Submit;\n\nfunction Submit(name) {\n    this.name = name;\n}\n\n/**\r\n * #1, username\r\n * @return {Buffer}\r\n */\nSubmit.prototype.form = function () {\n    var buf = new BufferWriter();\n\n    buf.setUint8(1);\n    buf.setStringUTF8(this.name);\n\n    return buf.form();\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n    Submit: __webpack_require__(30),\n    Clear: __webpack_require__(28),\n    Input: __webpack_require__(29)\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BufferReader = __webpack_require__(37),\n    cfg = __webpack_require__(0);\n\nexports = module.exports = Receiver;\n\nfunction Receiver() {\n    this.seqUpdates = 0;\n    this.handler = {\n        1: this.onMsgSubmit.bind(this),\n        2: this.onMsgClear.bind(this),\n        // 1: this.message_onSpectate,\n        10: this.onMsgUpdate.bind(this)\n    };\n    this.handleSocketEvents();\n}\n\nReceiver.prototype = {\n    /**\r\n     * handle onmessage, onclose\r\n     * @return {void}\r\n     */\n    handleSocketEvents: function handleSocketEvents() {\n        this.socket.onmessage = function (msg) {\n            var buf = msg.data;\n            this.handleMessage(buf);\n        }.bind(this);\n\n        this.socket.onclose = function () {\n            this.onDisconnect();\n        }.bind(this);\n\n        this.socket.onerror = function (evt) {\n            console.log(\"ERROR \" + evt.data);\n        };\n    },\n\n    /**\r\n     * get the packetId of a message if not empty\r\n     * @param  {Buffer} buf\r\n     * @return {void}\r\n     */\n    handleMessage: function handleMessage(buf) {\n        if (buf.byteLength === 0) return;\n        var view = new DataView(buf);\n        var packetId = view.getUint8(0);\n        // console.log(packetId + \"...\" + this.selfId);\n        if (!this.handler.hasOwnProperty(packetId)) return;\n        this.handler[packetId](buf);\n    },\n\n    onMsgClear: function onMsgClear(msg) {\n        this.stateController.clearEntities();\n\n        //if game over\n        if (this.selfId !== -1) {\n            this.selfId = -1;\n            this.inTransition = true;\n        }\n    },\n\n    /**\r\n     * inTransition, set selfId, clearEntities before joining game\r\n     * inTransition false to stop spectator spawn\r\n     * @param  {Buffer} msg\r\n     * @return {void}\r\n     */\n    onMsgSubmit: function onMsgSubmit(msg) {\n        var buf = new BufferReader(msg);\n        buf.addOffset(1);\n        var id = buf.getUint16();\n        console.log(id);\n        this.selfId = id;\n        this.inTransition = true;\n    },\n\n    /**\r\n     * onUpdate, broadcast loop\r\n     */\n    onMsgUpdate: function onMsgUpdate(msg) {\n        // cl\n        var buf = new BufferReader(msg);\n        buf.addOffset(1);\n        var t = buf.getUint32();\n        // console.log(t - this.stateController.serverTime);\n        if (this.stateController.rendering) {\n            this.stateController.rendered -= t - this.stateController.serverTime;\n            // console.log(\"whut \" + (t - this.stateController.serverTime));\n        }\n        // console.log((t - this.stateController.serverTime));\n        this.stateController.setServerTime(t);\n\n        var flagsMain = buf.getFlags(),\n            updatePsFlag = flagsMain[0],\n            playersScopeRemoveFlag = flagsMain[1],\n            shootsScopeInitFlag = flagsMain[2],\n            foodsScopeInitFlag = flagsMain[3],\n            foodsScopeRemoveFlag = flagsMain[4],\n            foodsScopeEatFlag = flagsMain[5],\n            updateBoardFlag = flagsMain[6];\n        if (updatePsFlag) {\n            var lenUpdatePs = buf.getUint8(),\n                updatePs = [];\n\n            // console.log(this.stateController.playerController.entities);\n            // console.log(\"new \" + lenUpdatePs);\n            for (var i = 0; i < lenUpdatePs; i++) {\n                var id = buf.getUint16(),\n                    state = {},\n                    name,\n                    ballAngle;\n\n                var flagsPlayer = buf.getFlags(),\n                    nameFlag = flagsPlayer[0],\n                    xFlag = flagsPlayer[1],\n                    yFlag = flagsPlayer[2],\n                    vxFlag = flagsPlayer[3],\n                    vyFlag = flagsPlayer[4],\n                    massFlag = flagsPlayer[5];\n                state.ring = flagsPlayer[6];\n                state.dashing = flagsPlayer[7];\n\n                var flagsPlayer2 = buf.getFlags(),\n                    ballAngleFlag = flagsPlayer2[0];\n\n                if (nameFlag) {\n                    name = buf.getStringUTF8();\n                }\n                if (xFlag) {\n                    state.x = buf.getFloat32();\n                }\n                if (yFlag) {\n                    state.y = buf.getFloat32();\n                }\n                if (vxFlag) {\n                    var vxModif = buf.getInt16();\n                    state.vx = vxModif / 100.0;\n                }\n                if (vyFlag) {\n                    var vyModif = buf.getInt16();\n                    state.vy = vyModif / 100.0;\n                }\n                if (massFlag) {\n                    state.mass = buf.getUint32();\n                }\n\n                if (ballAngleFlag) {\n                    ballAngle = buf.getFloat32();\n                    console.log(\"angle \" + ballAngle);\n                }\n\n                if (!nameFlag) {\n                    updatePs.push([id, state]);\n                } else {\n                    console.log(id);\n                    updatePs.push([id, state, name, ballAngle]);\n                }\n            }\n            this.stateController.addPlayerUpdates(t, updatePs);\n        }\n\n        //foods to remove: id\n        if (playersScopeRemoveFlag) {\n            var lenPlayersScopeRemove = buf.getUint16(),\n                playersScopeRemove = [];\n            for (var i = 0; i < lenPlayersScopeRemove; i++) {\n                var id = buf.getUint16();\n                playersScopeRemove.push(id);\n            }\n            this.stateController.updatePlayerRemoveStates(playersScopeRemove);\n        }\n\n        if (shootsScopeInitFlag) {\n            var lenShootsScopeInit = buf.getUint8(),\n                shootsScopeInit = [];\n            for (var i = 0; i < lenShootsScopeInit; i++) {\n                var state = {};\n\n                state.x = buf.getFloat32();\n                state.y = buf.getFloat32();\n                state.mass = buf.getUint16();\n                state.lifeTime = buf.getUint16();\n                shootsScopeInit.push([null, state]);\n            }\n            this.stateController.updateShootStates(shootsScopeInit);\n        }\n\n        // new foods: id, xReal, yReal\n        if (foodsScopeInitFlag) {\n            var lenFoodsScopeInit = buf.getUint16(),\n                foodsScopeInit = [];\n            for (var i = 0; i < lenFoodsScopeInit; i++) {\n                var id = buf.getUint16(),\n                    state = {\n                    movingTime: 0,\n                    angle: 0,\n                    vr: Math.random()\n                };\n\n                state.xReal = buf.getFloat32();\n                state.yReal = buf.getFloat32();\n                state.x = state.xReal;\n                state.y = state.yReal;\n                var mass = buf.getUint8();\n                foodsScopeInit.push([id, state, mass]);\n            }\n            this.stateController.updateFoodInitStates(foodsScopeInit);\n        }\n\n        //foods to remove: id\n        if (foodsScopeRemoveFlag) {\n            var lenFoodsScopeRemove = buf.getUint16(),\n                foodsScopeRemove = [];\n            for (var i = 0; i < lenFoodsScopeRemove; i++) {\n                var id = buf.getUint16();\n                foodsScopeRemove.push(id);\n            }\n            this.stateController.updateFoodRemoveStates(foodsScopeRemove);\n        }\n\n        //foods to eat: id, referrerId\n        if (foodsScopeEatFlag) {\n            var lenFoodsScopeEat = buf.getUint8(),\n                foodsScopeEat = [];\n            for (var i = 0; i < lenFoodsScopeEat; i++) {\n                var id = buf.getUint16(),\n                    referrerId = buf.getUint16();\n                foodsScopeEat.push([id, referrerId]);\n            }\n            this.stateController.updateFoodEatStates(foodsScopeEat);\n        }\n\n        if (updateBoardFlag) {\n            var lenUpdateBoard = buf.getUint8(),\n                updateBoard = [];\n            for (var i = 0; i < lenUpdateBoard; i++) {\n                var name = buf.getStringUTF8();\n                updateBoard.push(name);\n            }\n            this.stateController.updateBoard(updateBoard);\n        }\n    }\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Packet = __webpack_require__(31);\n\nexports = module.exports = Sender;\n\nfunction Sender() {\n    this.onSubmit();\n}\n\nSender.prototype = {\n    /**\r\n     * form the final packet and send it\r\n     * @param  {Packet}\r\n     * @return {void}\r\n     */\n    sendMessage: function sendMessage(packet) {\n        if (this.socket.readyState === 1) {\n            var buf = packet.form();\n            this.socket.send(buf);\n        } else {\n            this.onDisconnect();\n        }\n    },\n\n    /**\r\n     * onSubmit, send the username\r\n     * @return {void}\r\n     */\n    onSubmit: function onSubmit() {\n        var signForm = document.getElementById(\"sign-form\");\n        var signDivUsername = document.getElementById(\"signDiv-username\");\n\n        signForm.onsubmit = function (e) {\n            e.preventDefault();\n            // this.sendMessage(new Packet.Clear());\n            this.sendMessage(new Packet.Submit(signDivUsername.value));\n        }.bind(this);\n    },\n\n    onSubmitted: function onSubmitted() {\n        this.sendMessage(new Packet.SubmitACK());\n    },\n\n    onInput: function onInput(input) {\n        this.sendMessage(new Packet.Input(input));\n    }\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nexports = module.exports = GameLoop;\n\nfunction GameLoop() {\n    //polyfill\n    this.requestAnimFrame = function () {\n        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n            window.setTimeout(callback, 1000 / 60);\n        };\n    }();\n    this.now = new Date();\n    this.accum = 0.0;\n}\n\nGameLoop.prototype.start = function (updateCallback, renderCallback) {\n    var self = this;\n\n    function loop() {\n        self.requestAnimFrame.call(window, loop);\n\n        var newTime = new Date(),\n            frameTime = newTime - self.now;\n        if (frameTime > 250) {\n            frameTime = 250;\n        }\n        self.now = newTime;\n        self.accum += frameTime;\n\n        while (self.accum >= 15) {\n            updateCallback();\n            self.accum -= 15;\n        }\n\n        renderCallback();\n    }\n    loop();\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n/** ?\r\n * The MIT License (MIT)\r\nCopyright (c) 2013 Jerome Etienne\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nexports = module.exports = Keyboard;\n\nfunction Keyboard() {\n    // to store the current states: {keyCodes: boolean}\n    this.keyCodes = {};\n\n    //used to oblige to keyUp after keyDown\n    this.keyUp = {\n        left: true,\n        up: true,\n        right: true,\n        down: true,\n        space: true\n    };\n\n    this.alias = {\n        /*'left': 37,\r\n        'up': 38,\r\n        'right': 39,\r\n        'down': 40,*/\n        'leftEU': 65,\n        'leftUS': 81,\n        'up': 90,\n        'right': 68,\n        'down': 83,\n        'space': 32,\n        'pageup': 33,\n        'pagedown': 34,\n        'tab': 9\n    };\n\n    // create callback to bind/unbind keyboard events\n    this.onKeyDown = function (e) {\n        this.onKeyChange(e, true);\n    }.bind(this);\n    this.onKeyUp = function (e) {\n        this.onKeyChange(e, false);\n    }.bind(this);\n\n    // bind keyEvents\n    document.addEventListener(\"keydown\", this.onKeyDown, false);\n    document.addEventListener(\"keyup\", this.onKeyUp, false);\n    window.addEventListener(\"keydown\", function (e) {\n        // space and arrow keys\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n            e.preventDefault();\n        }\n    }, false);\n}\n\nKeyboard.prototype = {\n    /**\r\n     * To stop listening of the keyboard events\r\n     */\n    destroy: function destroy() {\n        document.removeEventListener(\"keydown\", this.onKeyDown, false);\n        document.removeEventListener(\"keyup\", this.onKeyUp, false);\n    },\n\n    /**\r\n     * store in this.keyCodes, the keyboard dom event\r\n     * @param  {Event} e   : keyCode\r\n     * @param  {Boolean} pressed\r\n     * @return {void}\r\n     */\n    onKeyChange: function onKeyChange(e, pressed) {\n        // update this.keyCodes\n        var keyCode = e.keyCode;\n        this.keyCodes[keyCode] = pressed;\n    },\n\n    /**\r\n     * query keyboard state to know if a key is pressed of not\r\n     * then reset it\r\n     *\r\n     * @param {String} keyDesc the description of the key. format : modifiers+key e.g shift+A\r\n     * @return {Boolean} true if the key is pressed, false otherwise\r\n     */\n    pressed: function pressed(keyDesc) {\n        var keys = keyDesc.split(\"+\");\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var pressed, keyCode;\n            if (Object.keys(this.alias).indexOf(key) != -1) {\n                keyCode = this.alias[key];\n            } else {\n                // if not in alias\n                keyCode = key.toUpperCase().charCodeAt(0);\n            }\n            pressed = this.keyCodes[keyCode];\n            if (!pressed) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nexports = module.exports = MouseState;\n\nfunction MouseState(canvas) {\n    this.canvas = canvas;\n    this.running = false;\n    this.click = false;\n    this.angle = 0;\n\n    this.wheel = 0;\n\n    this.canvas.addEventListener('click', function (e) {\n        this.onClick(e);\n    }.bind(this));\n\n    this.canvas.addEventListener('mousewheel', function (e) {\n        this.onMouseWheel(e);\n    }.bind(this));\n}\n\nMouseState.prototype = {\n    onClick: function onClick(e) {\n        if (!this.running) return;\n\n        e = e || window.event;\n        this.click = e.type == 'click';\n        var mouseX = e.pageX - this.canvas.offsetLeft;\n        var mouseY = e.pageY - this.canvas.offsetTop;\n\n        var x = -this.canvas.clientWidth / 2 + mouseX;\n        var y = -this.canvas.clientHeight / 2 + mouseY;\n        this.angle = Math.atan2(y, x);\n    },\n\n    onMouseWheel: function onMouseWheel(e, delta) {\n        if (!this.running) return;\n\n        if (e.deltaY > 0) {\n            this.wheel--;\n        } else if (e.deltaY < 0) {\n            this.wheel++;\n        }\n\n        e.preventDefault();\n        //this disable 'scroll' event for the 'mousewheel' event\n        // return false;\n    },\n\n    /**\r\n     * return number of wheeled event and reset it\r\n     * @return {Boolean} this.wheel\r\n     */\n    wheeled: function wheeled() {\n        var wheeled = this.wheel;\n        this.wheel = 0;\n        return wheeled;\n    }\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nmodule.exports = BufferReader;\n\n//little endian\nfunction BufferReader(buf) {\n    this.buf = buf;\n    this.view = new DataView(this.buf);\n    this.offset = 0;\n}\n\nBufferReader.prototype = {\n    getUint8: function getUint8() {\n        var data = this.view.getUint8(this.offset);\n        this.offset += 1;\n        return data;\n    },\n\n    getInt8: function getInt8() {\n        var data = this.view.getInt8(this.offset);\n        this.offset += 1;\n        return data;\n    },\n\n    getUint16: function getUint16() {\n        var data = this.view.getUint16(this.offset, true);\n        this.offset += 2;\n        return data;\n    },\n\n    getInt16: function getInt16() {\n        var data = this.view.getInt16(this.offset, true);\n        this.offset += 2;\n        return data;\n    },\n\n    getUint32: function getUint32() {\n        var data = this.view.getUint32(this.offset, true);\n        this.offset += 4;\n        return data;\n    },\n\n    getInt32: function getInt32() {\n        var data = this.view.getInt32(this.offset, true);\n        this.offset += 4;\n        return data;\n    },\n\n    getFloat32: function getFloat32() {\n        var data = this.view.getFloat32(this.offset, true);\n        this.offset += 4;\n        return data;\n    },\n\n    getStringUTF8: function getStringUTF8() {\n        var name = \"\";\n        var charCodes = [];\n        var length = this.getUint8();\n        for (var i = 0; i < length; i++) {\n            var charCode = this.getUint8();\n            charCodes.push(charCode);\n        }\n\n        if (length) {\n            try {\n                name = decodeURIComponent(escape(String.fromCharCode.apply(null, charCodes)));\n            } catch (e) {}\n        }\n        // console.log(name);\n\n        return name;\n    },\n\n    /**\r\n     * get 8 flags from 1 byte\r\n     * @return {list}        \r\n     */\n    getFlags: function getFlags() {\n        var data = this.getUint8();\n        var flags = this.fromByte(data);\n        return flags;\n    },\n\n    fromByte: function fromByte(byte) {\n        var arr = new Array(8);\n        for (var i = 0; i < 8; i++) {\n            arr[i] = (byte & 1 << i) !== 0;\n        }\n        return arr;\n    },\n\n    addOffset: function addOffset(length) {\n        this.offset += length;\n    }\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = BufferWriter;\n\n/**\r\n * Used for big packets\r\n */\nfunction BufferWriter() {\n    this.bytes = [];\n    this.miniBuf = new ArrayBuffer(4);\n    this.miniView = new DataView(this.miniBuf);\n}\n\n/**\r\n * true: little endian\r\n * add each data in this.miniBuf\r\n * add each byte to this.bytes\r\n * @type {Object}\r\n */\nBufferWriter.prototype = {\n    setUint8: function setUint8(data) {\n        this.miniView.setUint8(0, data);\n        this.addToBytes(1);\n    },\n\n    setInt8: function setInt8(data) {\n        this.miniView.setInt8(0, data);\n        this.addToBytes(1);\n    },\n\n    setUint16: function setUint16(data) {\n        this.miniView.setUint16(0, data, true);\n        this.addToBytes(2);\n    },\n\n    setInt16: function setInt16(data) {\n        this.miniView.setInt16(0, data, true);\n        this.addToBytes(2);\n    },\n\n    setUint32: function setUint32(data) {\n        this.miniView.setUint32(0, data, true);\n        this.addToBytes(4);\n    },\n\n    setInt32: function setInt32(data) {\n        this.miniView.setInt32(0, data, true);\n        this.addToBytes(4);\n    },\n\n    setFloat32: function setFloat32(data) {\n        this.miniView.setFloat32(0, data, true);\n        this.addToBytes(4);\n    },\n\n    /**\r\n     * if username not empty:\r\n     * Javascript String are stored in UTF-16\r\n     * encodeURIComponent to get UTF-8 bytes URL-encoded\r\n     * unescape to decode\r\n     * send all the charCode bytes\r\n     * @param {String} data\r\n     */\n    setStringUTF8: function setStringUTF8(data) {\n        if (data && data.length) {\n\n            var utf8 = unescape(encodeURIComponent(data));\n            // REVIEW: max 255 bytes\n            this.setUint8(utf8.length);\n            for (var i = 0; i < utf8.length; i++) {\n                this.setUint8(utf8.charCodeAt(i));\n            }\n        } else {\n            this.setUint8(0);\n        }\n    },\n\n    /**\r\n     * set 8 flags in one byte\r\n     * @param {list} flags 0-1\r\n     */\n    setFlags: function setFlags(flags) {\n        var data = this.toByte(flags);\n        this.setUint8(data);\n    },\n\n    /**\r\n     * convert 8 binary to 1 byte\r\n     * @param  {list} arr of binary\r\n     * @return {int}     byte\r\n     */\n    toByte: function toByte(arr) {\n        var byte = 0;\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i]) {\n                byte |= 1 << i;\n            }\n        }\n        return byte;\n    },\n\n    /**\r\n     * push all the bytes of this.miniBuf in this.bytes\r\n     * then clear this.miniBuf\r\n     * @param {int} lenBytes\r\n     */\n    addToBytes: function addToBytes(lenBytes) {\n        for (var i = 0; i < lenBytes; i++) {\n            this.bytes.push(this.miniView.getUint8(i));\n        }\n        this.clearMiniBuf();\n    },\n\n    /**\r\n     * clear this.miniBuf after addToBytes\r\n     * @return {void}\r\n     */\n    clearMiniBuf: function clearMiniBuf() {\n        this.miniBuf = new ArrayBuffer(4);\n        this.miniView = new DataView(this.miniBuf);\n    },\n\n    /**\r\n     * form the final Buffer from this.bytes\r\n     * @return {Buffer}\r\n     */\n    form: function form() {\n        var buf = new ArrayBuffer(this.bytes.length);\n        var view = new DataView(buf);\n        for (var i = 0; i < this.bytes.length; i++) {\n            view.setUint8(i, this.bytes[i]);\n        }\n        return buf;\n    }\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar config = __webpack_require__(40);\n\nconfig.env = 'development';\n\nmodule.exports = config;\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n    env: 'development',\n\n    serverPort: __webpack_require__.i({\"NODE_ENV\":\"production\"}).PORT || 3000,\n    // serverUrl: 'localhost',\n    serverUrl: 'flapzd.herokuapp.com',\n    serverMaxGamers: 10,\n    serverMaxSameIp: 5,\n    serverLagCompensation: 0,\n    serverPacketMaxSize: 128, //OPTI: serverPacketMaxSize\n\n    tickMain: 50, //main loop - times in ms\n    tickBoard: 10, //update board - this * tickMain\n    tickPhysics: 17, //update physics\n\n    tickState: 50, //send state, each player\n    tickScope: 8, //scope = this * tickState\n\n    clientMaxUpdateBuffer: 120,\n    clientInterpolationTime: 100,\n    clientSmoothingFactor: 0.3,\n\n    debug: false,\n    debugMove: false,\n    debugZoom: true, //to remove!\n    debugTileSize: false,\n    debugSelfScope: false,\n    debugBorder: false,\n\n    debugRingHitbox: false,\n\n    zoomFactor: 1.1,\n    zoomScaleLimit: 2.5,\n\n    /**\r\n    * inactive_destroy = 5*60*1000;   //time in ms when to destroy inactive balls\r\n    * inactive_check   = 10*1000;     //time in ms when to search inactive balls\r\n    * spawn_interval   = 200;         //time in ms for respawn interval. 0 to disable (if your custom server don't have spawn problems)\r\n    * spawn_attempts   = 25;          //how much attempts to spawn before give up\r\n    */\n\n    //balance size\n    scaleMassFactor: 0.001,\n\n    ballInitSize: 20,\n    ballFactor: 0.5,\n    ballSpriteInitSize: 100,\n    ballSpriteFactor: 2,\n    ringInitSize: 100,\n    ringFactor: 2,\n    ringMaxInitSize: 151,\n    ringMaxFactor: 4.1,\n\n    ballTreshold: 500,\n    ballSpeed: 1.4,\n\n    ringFreqInit: 2000,\n    ringFreqFactor: 20,\n    ringTime: 300,\n\n    //Map 960x600\n    scopeRatio: 16 / 9,\n    scopeInitX: 1280, //1280 * 0.7,\n    scopeInitY: 720, //720 * 0.7,\n    tileAmountX: 100,\n    tileAmountY: 100,\n    tileScopeAmountX: 17, //odd\n    tileScopeAmountY: 11, //odd\n    tileFoodRange: 5, //range check to eat foods\n\n    minimapRad: 50,\n    miniselfRad: 3,\n    midLimitRad: 3000,\n    midLimitStroke: 1600,\n    midLimitOffset: 1400,\n    endLimitRad: 10000,\n    endLimitStroke: 1600,\n    endLimitOffset: 6000,\n    mapSize: 23200, //should be bigger to not see black\n    mapScale: 0.65,\n    tunnelHeight: 300,\n\n    //Player\n    playerNameMaxSize: 15,\n    playerImmunityTime: 10000,\n    playerVx: 152,\n    playerVy: 240,\n    playerGravity: 825 * 0.8,\n    playerMinMassDash: 0,\n    playerInitMass: 0, //debug\n    selfRadiusInitSize: 25,\n    selfRadiusFactor: 0.16,\n\n    // playerInitSize: 30, //init size sprite/hitbox\n    playerSpriteInitSize: 60, //init size sprite/hitbox\n    playerSpriteFactor: 0.8,\n    debugSelfHitbox: false,\n\n    dashSpeed: 800,\n    dashMassLoss: 1,\n    dashTime: 500,\n    //#sample of dash texture\n    dashTxtSize: 4,\n\n    shootInitSize: 64,\n    shootTime: 1000,\n\n    //Foods - server, shared, client\n    foodSpawnAmount: 500, //spawn amount for each click\n    foodInsideProportion: 0.5,\n    foodMasses: [1, 2, 3, 4, 12, 13], //random spawning masses\n\n    foodHitbox: 20, //radius - food eating\n    foodInitSize: 10,\n    foodFactor: 5.6,\n\n    foodSpriteInitSize: 6, //sprite\n    foodSpriteFactor: 15, //sprite\n    foodEatenHitbox: 8, //radius - food eaten (not mass dependent)\n    foodMovingTime: 1000, //attracting maximal time (speed)\n    foodRotationSpeed: 0.0035, //idle rotation speed\n    foodRotationRadius: 8, //idle rotation radius \n    debugFood: false, //not used\n    debugFoodHitbox: false,\n\n    gradColors: [0xBAFF74, //0 green\n    0x6780FF, //1 light blue\n    0xB9FFFF, //2 cyan\n    0xFFA42B, //3 orange\n    0xB87FFF, //4 purple\n    0xFF9090, //5 crusta\n    0xFF5252, //6 POMEGRANATE\n    0xFF71E8, //7 pink\n    0xFCE966 //8 yellow\n    ],\n    // 0xffcdd2; //nop\n    // 0xFF83B8; //nop?\n    // 0xBF55FF; //nop?\n\n    //Images\n    //playerImage: '/client/img/planet.png',\n    // playerSet: '/client/img/flappy.json',\n    playerSet: '/client/img/grumpy.json',\n    fireballSet: '/client/img/fireball.json',\n    ringImg: '/client/img/firewater.png',\n    shootImg: '/client/img/bullet.png',\n    foodImg: '/client/img/v9.png',\n    // mapImg: '/client/img/clouds.jpg',\n    // mapImg: '/client/img/Background Black 512.jpg',\n    mapImg: '/client/img/black.jpg',\n    // mapImg: '/client/img/Background Transparency.png',\n    // mapImg: '/client/img/bggray.jpg',\n    // mapImg: '/client/img/wormax.png',\n    // bgImg: '/client/img/bgred.jpg',\n    bgImg: '/client/img/wormax.png',\n    // bgImg: '/client/img/bgflowers.jpg',\n\n\n    spectatorInitState: {\n        x: 0,\n        y: 0,\n        mass: 0\n    },\n\n    textOpt: {\n        fontFamily: 'raleway',\n        fill: '#ffffff',\n        stroke: '#000000'\n    }\n};\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar cfg = __webpack_require__(0),\n    ic = __webpack_require__(5),\n\n// crypto = require('crypto'),\nlot = __webpack_require__(1);\n\n//client, not used\nexports.getExtrapolatedPlayerState = function (state, deltaTime) {\n    var newState = {};\n\n    newState.x = state.x;\n    newState.y = state.y;\n    newState.vx = state.vx;\n    newState.vy = state.vy;\n    newState.ring = state.ring;\n    newState.mass = state.mass;\n    newState.dashing = state.dashing;\n\n    if (newState.vy < cfg.playerVy) {\n        // && new Date() - newState.lastFlap > 100) {\n        newState.vy += cfg.playerGravity * deltaTime;\n    }\n    if (newState.vy > cfg.playerVy) {\n        newState.vy = cfg.playerVy;\n    }\n\n    newState.x += newState.vx * deltaTime;\n    newState.y += newState.vy * deltaTime;\n    return newState;\n};\n\nvar isInMap = function isInMap(x, y) {\n    var distFromO = lot.distEucl(0, 0, x, y);\n    if (distFromO <= cfg.midLimitRad || distFromO >= cfg.midLimitRad + cfg.midLimitStroke && distFromO <= cfg.endLimitRad || lot.inRect(x, y, -(cfg.midLimitRad + cfg.midLimitStroke / 2), 0, cfg.midLimitStroke + 100, cfg.tunnelHeight) || lot.inRect(x, y, cfg.midLimitRad + cfg.midLimitStroke / 2, 0, cfg.midLimitStroke + 100, cfg.tunnelHeight)) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nvar processKilled = function processKilled() {\n    // return ic.getInitPlayerState();\n    return false;\n};\n\n//physics\nexports.getNewPlayerState = function (player, deltaTime, tileController) {\n    var id = player.id,\n        state = player.state,\n        playerController = tileController.getPlayerController(),\n        shootController = tileController.getShootController(),\n        newState = {};\n\n    newState.x = state.x;\n    newState.y = state.y;\n    newState.ring = state.ring;\n    newState.mass = state.mass;\n    newState.dashing = state.dashing;\n\n    newState.immunity = state.immunity;\n    newState.startTime = state.startTime;\n    newState.vx = state.vx;\n    newState.vy = state.vy;\n    newState.lastFlap = state.lastFlap;\n    newState.lastRing = state.lastRing;\n    newState.lastDash = state.lastDash;\n    newState.canDash = state.canDash;\n    newState.dashX = state.dashX;\n    newState.dashY = state.dashY;\n    newState.dashRange = state.dashRange;\n    newState.dashDone = state.dashDone;\n\n    var selfRadius = lot.getSelfRadius(newState.mass);\n\n    processInputs(player, newState, tileController, shootController);\n    checkImmunity(newState);\n\n    if (newState.immunity) return newState;\n\n    if (!processMove(newState, deltaTime)) {\n        return processKilled();\n    }\n\n    //only foods on these tiles !\n    var newTiles = tileController.getTiles(newState.x, newState.y, cfg.tileFoodRange, cfg.tileFoodRange);\n    checkFoodsEating(newState, newTiles, selfRadius, player);\n    // checkRing(newState);\n\n    if (newState.dashing) return newState;\n\n    if (checkBallKill(newState, tileController, playerController, selfRadius, id)) {\n        return processKilled();\n    }\n    // if (checkBallKill(newState, tileController, playerController, selfRadius, id) ||\n    //     checkShootsKill(newState, tileController, shootController, selfRadius, id))\n\n    return newState;\n};\n\nvar processInputs = function processInputs(player, newState, tileController, shootController) {\n    if (cfg.debugMove) {\n        newState.vx = 0;\n    }\n\n    if (player.pressLeft && !newState.dashing) {\n        applyLeft(newState);\n    } else if (player.pressRight && !newState.dashing) {\n        applyRight(newState);\n    } else if (player.pressDash && newState.mass >= cfg.playerMinMassDash) {\n        //canDash\n        applyDash(player, newState, shootController);\n    } else if (player.pressClick) {\n        applySpawnFoods(tileController);\n    }\n};\n\nvar applyLeft = function applyLeft(newState) {\n    newState.vx = -cfg.playerVx;\n    newState.vy = -cfg.playerVy;\n    newState.lastFlap = new Date();\n    if (newState.immunity) {\n        newState.immunity = false;\n    }\n\n    if (cfg.debugMove) {\n        newState.vx = -150;\n    }\n};\n\nvar applyRight = function applyRight(newState) {\n    newState.vx = cfg.playerVx;\n    newState.vy = -cfg.playerVy;\n    newState.lastFlap = new Date();\n    if (newState.immunity) {\n        newState.immunity = false;\n    }\n\n    if (cfg.debugMove) {\n        newState.vx = 150;\n    }\n};\n\nvar applyDash = function applyDash(player, newState, shootController) {\n    //Reset dash, ring. Reduce mass.\n    newState.dashing = true;\n    newState.lastDash = new Date();\n    newState.lastRing = new Date();\n    newState.canDash = false;\n    newState.ring = false;\n    newState.mass = Math.round(newState.mass * cfg.dashMassLoss);\n\n    applyShoot(player, newState, shootController);\n};\n\nvar applyShoot = function applyShoot(player, newState, shootController) {\n    //New shoot\n    // var newShoot = shootController.add(player);\n    shootController.add(player);\n\n    newState.dashX = newState.x;\n    newState.dashY = newState.y;\n    newState.dashRange = lot.getRingMax(newState.mass);\n    newState.dashDone = 0;\n};\n\nvar applySpawnFoods = function applySpawnFoods(tileController) {\n    for (var j = 0; j < cfg.foodSpawnAmount; j++) {\n        var foodState = ic.getInitFoodState();\n        var tile = tileController.getTile(foodState.x, foodState.y);\n\n        var massIndex = lot.randomIntFromInterval(0, cfg.foodMasses.length - 1);\n        var mass = cfg.foodMasses[massIndex];\n        var newFood = tile.getFoodController().add(mass);\n        newFood.setState(foodState);\n    }\n};\n\nvar checkImmunity = function checkImmunity(newState) {\n    if (newState.immunity && new Date() - newState.startTime > cfg.playerImmunityTime) {\n        newState.immunity = false;\n        newState.vx = cfg.playerVx;\n        newState.vy = cfg.playerVy;\n    }\n};\n\nvar processMove = function processMove(newState, deltaTime) {\n    var newPos;\n    var angle = Math.atan2(newState.vy, newState.vx);\n\n    if (!newState.dashing) {\n        newPos = normalMove(newState, deltaTime);\n    }\n    if (newState.dashing && newState.dashDone < newState.dashRange) {\n        newPos = dashMove(newState, deltaTime, angle);\n    }\n    if (newState.dashing && newState.dashDone >= newState.dashRange) {\n        newPos = dashEndMove(newState, angle);\n    }\n\n    if (isInMap(newPos.x, newPos.y)) {\n        newState.x = newPos.x;\n        newState.y = newPos.y;\n    } else {\n        return false;\n    }\n    return true;\n};\n\nvar normalMove = function normalMove(newState, deltaTime) {\n    if (newState.vy < cfg.playerVy && new Date() - newState.lastFlap > 100) {\n        newState.vy += cfg.playerGravity * deltaTime;\n    }\n    if (newState.vy > cfg.playerVy) {\n        newState.vy = cfg.playerVy;\n    }\n\n    if (cfg.debugMove) {\n        newState.vy = 0;\n    }\n\n    return {\n        x: newState.x + newState.vx * deltaTime,\n        y: newState.y + newState.vy * deltaTime\n    };\n};\n\nvar dashMove = function dashMove(newState, deltaTime, angle) {\n    newState.dashDone += cfg.dashSpeed * deltaTime;\n    return {\n        x: newState.x + cfg.dashSpeed * Math.cos(angle) * deltaTime,\n        y: newState.y + cfg.dashSpeed * Math.sin(angle) * deltaTime\n    };\n};\n\nvar dashEndMove = function dashEndMove(newState, angle) {\n    newState.dashing = false;\n    return {\n        x: newState.dashX + newState.dashRange * Math.cos(angle),\n        y: newState.dashY + newState.dashRange * Math.sin(angle)\n    };\n};\n\nvar checkFoodsEating = function checkFoodsEating(newState, newTiles, selfRadius, player) {\n    //food eat and mass gain\n    for (var i = newTiles.length; i--;) {\n        var newTile = newTiles[i];\n        var foodController = newTile.getFoodController();\n        // console.log(newTile);\n\n        var foods = foodController.getEntities();\n        for (var j = foods.length; j--;) {\n            var food = foods[j];\n            // console.log(\"ohoh\");\n\n            var distPlayerFood = lot.distEucl(food.state.x, food.state.y, newState.x, newState.y);\n            var foodHitbox = lot.getFoodRadius(food.mass);\n            if (distPlayerFood < selfRadius + foodHitbox) {\n                newState.mass += food.mass;\n                foodController.remove(food, player.id);\n            }\n        }\n    }\n};\n\nvar checkBallKill = function checkBallKill(newState, tileController, playerController, selfRadius, id) {\n    var players = playerController.getEntities();\n    for (var j = players.length; j--;) {\n        var killer = players[j];\n        //don't check spectators\n        if (players[j].id === -1) continue;\n        //suicide not possible\n        if (killer.id == id) continue;\n\n        var balls = killer.getBallController().getEntities();\n\n        for (var i = 0; i < balls.length; i++) {\n            var ball = balls[i];\n            //if active\n\n            if (checkKill(newState, tileController, selfRadius, ball)) return true;\n        }\n    }\n};\n\nvar checkShootsKill = function checkShootsKill(newState, tileController, shootController, selfRadius, id) {\n    var shoots = shootController.getEntities();\n    for (var j = shoots.length; j--;) {\n        var shoot = shoots[j];\n        if (shoot.referrerId !== id && shoot.state.ring) {\n            if (checkKill(newState, tileController, selfRadius, shoot)) return true;\n        }\n    }\n};\n\nvar checkKill = function checkKill(newState, tileController, selfRadius, ball) {\n    var distPlayerBall = lot.distEucl(ball.state.x, ball.state.y, newState.x, newState.y);\n    var ballRadius = lot.getBallRadius(ball.state.mass);\n\n    if (selfRadius + ballRadius > distPlayerBall) {\n        for (var i = 0; i < 20; i++) {\n            // spawnFood(newState, tileController, i);\n        }\n\n        return true;\n    }\n};\n\n// var checkKill = function(newState, tileController, selfRadius, killer) {\n//     var distPlayers = lot.distEucl(killer.state.x, killer.state.y, newState.x, newState.y);\n//     var minScope = lot.getRingMin(killer.state.mass);\n//     var maxScope = lot.getRingMax(killer.state.mass);\n//\n//     if (minScope - selfRadius < distPlayers && distPlayers < selfRadius + maxScope) {\n//         for (var i = 0; i < 20; i++) {\n//             spawnFood(newState, tileController, i);\n//         }\n//\n//         return true;\n//     }\n// };\n\nvar spawnFood = function spawnFood(newState, tileController, iangle) {\n    var foodState = {\n        x: newState.x + Math.cos(Math.PI * iangle / 10) * lot.getRingMin(newState.mass),\n        y: newState.y + Math.sin(Math.PI * iangle / 10) * lot.getRingMin(newState.mass)\n    };\n    var tileFood = tileController.getTile(foodState.x, foodState.y);\n    //NOTE size\n    var newFood = tileFood.getFoodController().add(cfg.foodMasses[2]);\n    newFood.setState(foodState);\n};\n\nvar checkRing = function checkRing(newState) {\n    var ringFreq = lot.getRingFreq(newState.mass);\n    if (new Date() - newState.lastRing > ringFreq && !newState.ring) {\n        newState.ring = true;\n        newState.lastRing = new Date();\n        if (!newState.canDash) {\n            newState.canDash = true;\n        }\n    }\n    if (new Date() - newState.lastRing > cfg.ringTime && newState.ring) {\n        newState.ring = false;\n        newState.lastRing = new Date();\n    }\n};\n\n//shared\nexports.getNewBallAngle = function (angle, deltaTime) {\n    var newAngle = (angle + cfg.ballSpeed * deltaTime) % (2 * Math.PI);\n    return newAngle;\n};\n\n//add and remove balls. Min 1 ball.\n//shared\nexports.checkNewBalls = function (player) {\n    var ballController = player.getBallController();\n    var balls = ballController.getEntities();\n    var playerState = player.state;\n    var playerMass = playerState.mass;\n\n    //client\n    if (!balls.length) {\n        ballController.add(playerState);\n    }\n    if (playerMass >= cfg.ballTreshold && balls.length === 1) {\n        ballController.add(playerState);\n    }\n    if (playerMass >= 2 * cfg.ballTreshold && balls.length === 2) {\n        ballController.add(playerState);\n    }\n};\n\n//server\nexports.getNewBallState = function (playerState, state, ballAngle, i) {\n    var angle = (ballAngle + i * 2 * Math.PI / 3) % (2 * Math.PI);\n    var mass = getBallMass(playerState.mass, i);\n\n    var newState = ic.getInitBallState(playerState, mass, angle);\n    newState.active = state.active;\n    // console.log(newState);\n    // console.log(newState.angle);\n    return newState;\n};\n\nvar getBallMass = function getBallMass(playerMass, i) {\n    var massTresh = cfg.ballTreshold;\n    var massRem1 = playerMass - massTresh;\n    var massRem2 = playerMass - 2 * massTresh;\n    var massRem3 = playerMass - 3 * massTresh;\n    var massBalanced = massTresh + Math.round(massRem3 / 3);\n\n    var newMass;\n\n    if (i === 0) {\n        if (playerMass < massTresh) {\n            newMass = playerMass;\n        } else if (playerMass >= massTresh && playerMass < 3 * massTresh) {\n            newMass = massTresh;\n        } else {\n            newMass = massBalanced;\n        }\n    } else if (i === 1) {\n        if (playerMass >= massTresh && playerMass < 2 * massTresh) {\n            newMass = massRem1;\n        } else if (playerMass >= 2 * massTresh && playerMass < 3 * massTresh) {\n            newMass = massTresh;\n        } else {\n            newMass = massBalanced;\n        }\n    } else if (i === 2) {\n        if (playerMass >= 2 * massTresh && playerMass < 3 * massTresh) {\n            newMass = massRem2;\n        } else {\n            newMass = massBalanced;\n        }\n    }\n\n    return newMass;\n};\n\nexports.getNewShootState = function (shoot, deltaTime) {\n    var newState = {},\n        state = shoot.state;\n\n    newState.x = state.x;\n    newState.y = state.y;\n    newState.mass = state.mass;\n    newState.lifeTime = state.lifeTime + deltaTime;\n\n    newState.ring = state.ring;\n\n    if (!newState.ring && newState.lifeTime > cfg.dashTime) {\n        newState.ring = true;\n    }\n    if (newState.lifeTime > cfg.dashTime + cfg.shootTime) {\n        return false;\n    }\n    return newState;\n};\n\n/**\r\n * Prediction\r\n * if food.referrer is undefined: random circular moving\r\n * else: move the food towards referrer with movingTime\r\n *\r\n * @param  {Food} food\r\n * @param  {int} deltaTime\r\n * @return {booleanOrObject}    false if Food is eaten\r\n */\nexports.getNewFoodState = function (food, deltaTime) {\n    var newState = {},\n        state = food.state;\n    newState.xReal = state.xReal;\n    newState.yReal = state.yReal;\n    newState.angle = state.angle;\n    newState.vr = state.vr;\n    newState.movingTime = state.movingTime;\n\n    if (food.referrer === undefined) {\n        newState.angle = (state.angle + newState.vr * cfg.foodRotationSpeed * deltaTime) % (2 * Math.PI);\n        newState.x = state.xReal + cfg.foodRotationRadius * Math.cos(state.angle);\n        newState.y = state.yReal + cfg.foodRotationRadius * Math.sin(state.angle);\n    } else {\n        var referrerState = food.referrer.state;\n\n        newState.movingTime = state.movingTime + deltaTime;\n\n        var distX = referrerState.x - state.x;\n        var distY = referrerState.y - state.y;\n\n        newState.x = state.x + distX * newState.movingTime / cfg.foodMovingTime;\n        newState.y = state.y + distY * newState.movingTime / cfg.foodMovingTime;\n\n        //beautiful if you comment this...\n        if (lot.distEucl(newState.x, newState.y, referrerState.x, referrerState.y) < cfg.foodEatenHitbox) {\n            return false;\n        }\n    }\n\n    return newState;\n};\n\n//Client: oP oE\n/**\r\n * compute interpolated Player state\r\n * @param  {object} previousState\r\n * @param  {object} targetState\r\n * @param  {float} interpolationFactor\r\n * @return {object}                     interpolatedState\r\n */\nexports.getInterpolatedEntityState = function (previousState, targetState, interpolationFactor) {\n    var interpolatedState = {};\n    interpolatedState.x = previousState.x + interpolationFactor * (targetState.x - previousState.x);\n    interpolatedState.y = previousState.y + interpolationFactor * (targetState.y - previousState.y);\n    interpolatedState.vx = targetState.vx;\n    // if (targetState.vy - previousState.vy < 0) {\n    if (targetState.vx / previousState.vx < 0) {\n        interpolatedState.vy = targetState.vy;\n    } else {\n        interpolatedState.vy = previousState.vy + interpolationFactor * (targetState.vy - previousState.vy);\n    }\n    // interpolatedState.mass = targetState.mass;\n    interpolatedState.mass = Math.round(previousState.mass + interpolationFactor * (targetState.mass - previousState.mass));\n    interpolatedState.ring = targetState.ring;\n    interpolatedState.dashing = targetState.dashing;\n\n    return interpolatedState;\n};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nexports = module.exports = Fps;\n\nfunction Fps() {\n    // The higher this value, the less the fps will reflect temporary variations\n    // A value of 1 will only keep the last value\n    this.filterStrength = 20;\n    this.frameTime = 0;\n    this.lastLoop = new Date();\n    this.thisLoop = null;\n    this.value = 0;\n    this.oldValue = 0;\n}\n\nFps.prototype.setFps = function (now) {\n    var thisFrameTime = (this.thisLoop = now) - this.lastLoop;\n    this.frameTime += (thisFrameTime - this.frameTime) / this.filterStrength;\n    this.lastLoop = this.thisLoop;\n};\n\nFps.prototype.getFps = function () {\n    return (1000 / this.frameTime).toFixed(1);\n};\n\nFps.prototype.startServer = function () {\n    setInterval(function () {\n        this.value = Math.ceil(1000 / this.frameTime);\n        if (this.value != this.oldValue) {\n            console.log(this.value + \" FPS\");\n            this.oldValue = this.value;\n        }\n    }.bind(this), 1000);\n};\n\n/*function Timer() {\r\n    this.elapsed = 0;\r\n    this.last = null;\r\n}\r\n\r\nTimer.prototype = {\r\n    tick: function(now) {\r\n        this.elapsed = (now - (this.last || now)) / 1000;\r\n        this.last = now;\r\n    },\r\n    fps: function() {\r\n        return Math.round(1 / this.elapsed);\r\n    }\r\n};*/\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(6);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/client/bundle\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 43);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b110b7d2a2e03adb407d","var cfg = require('./config.development');\r\n\r\nmodule.exports = cfg;\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/config/index.js","var cfg = require('./config');\r\n\r\nexports.getScaleMass = function(mass) {\r\n    return 1 - Math.sqrt(mass) * cfg.scaleMassFactor;\r\n};\r\n\r\nexports.getRingRadius = function(mass) {\r\n    return cfg.ringInitSize + Math.sqrt(mass) * cfg.ringFactor;\r\n};\r\n\r\nexports.getFoodRadius = function(mass) {\r\n    return cfg.foodInitSize + Math.sqrt(mass) * cfg.foodFactor;\r\n};\r\n\r\nexports.getFoodSpriteRadius = function(mass) {\r\n    return cfg.foodSpriteInitSize + Math.sqrt(mass) * cfg.foodSpriteFactor;\r\n};\r\n\r\n//sprite\r\nexports.getBallRadius = function(mass) {\r\n    return cfg.ballInitSize + Math.sqrt(mass) * cfg.ballFactor;\r\n};\r\n//core\r\nexports.getBallSize = function(mass) {\r\n    return cfg.ballSpriteInitSize + Math.sqrt(mass) * cfg.ballSpriteFactor;\r\n};\r\n\r\nexports.getBallPos = function(xc, yc, radius, angle) {\r\n    var x = xc + radius * Math.cos(angle);\r\n    var y = yc + radius * Math.sin(angle);\r\n    var pos = {\r\n        x: x,\r\n        y: y,\r\n    };\r\n    return pos;\r\n};\r\n//sprite\r\nexports.getRingSize = function(mass) {\r\n    return cfg.ringInitSize + Math.sqrt(mass) * cfg.ringFactor;\r\n};\r\n\r\nexports.getRingMin = function(mass) {\r\n    return cfg.ringMinInitSize + Math.sqrt(mass) * cfg.ringMinFactor;\r\n};\r\n\r\nexports.getRingMax = function(mass) {\r\n    return cfg.ringMaxInitSize + Math.sqrt(mass) * cfg.ringMaxFactor;\r\n};\r\n\r\nexports.getRingFreq = function(mass) {\r\n    return cfg.ringFreqInit - Math.sqrt(mass) * cfg.ringFreqFactor;\r\n};\r\n\r\nexports.getSelfRadius = function(mass) {\r\n    return cfg.selfRadiusInitSize + Math.sqrt(mass) * cfg.selfRadiusFactor;\r\n};\r\n\r\nexports.getPlayerSpriteRadius = function(mass) {\r\n    return cfg.playerSpriteInitSize + Math.sqrt(mass) * cfg.playerSpriteFactor;\r\n};\r\n\r\nexports.getScope = function(playerScope, checkMass) {\r\n    return {\r\n        maxScopeW: playerScope.maxScopeWInit + this.getRingMax(checkMass),\r\n        maxScopeH: playerScope.maxScopeHInit + this.getRingMax(checkMass),\r\n        minScopeW: playerScope.minScopeWInit + this.getRingMax(checkMass),\r\n        minScopeH: playerScope.minScopeHInit + this.getRingMax(checkMass),\r\n    };\r\n};\r\n\r\nexports.getRandomPos = function(midBegin, midEnd, max) {\r\n    var randomRadius,\r\n        randomZone = Math.random();\r\n\r\n    if (randomZone < cfg.foodInsideProportion) {\r\n        randomRadius = exports.randomIntFromInterval(0, Math.pow(midBegin, 2));\r\n    } else {\r\n        randomRadius = exports.randomIntFromInterval(Math.pow(midEnd, 2), Math.pow(max, 2));\r\n    }\r\n\r\n    var angle = Math.random() * Math.PI * 2;\r\n\r\n    return {\r\n        x: Math.cos(angle) * Math.sqrt(randomRadius),\r\n        y: Math.sin(angle) * Math.sqrt(randomRadius),\r\n    };\r\n};\r\n\r\nexports.randomIntFromInterval = function(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexports.inRect = function(x, y, xc, yr, width, height) {\r\n    if (xc - width / 2 <= x && x <= xc + width / 2 && yr - height / 2 <= y && y <= yr + height / 2) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nexports.distEucl = function(xi, yi, xf, yf) {\r\n    return Math.sqrt(Math.pow(xf - xi, 2) + Math.pow(yf - yi, 2));\r\n};\r\n\r\nexports.idxOf = function(array, attr, value) {\r\n    var idx = -1;\r\n    for (var i = 0; i < array.length; i++) {\r\n        if (array[i][attr] === value) {\r\n            idx = i;\r\n            break;\r\n        }\r\n    }\r\n    return idx;\r\n};\r\n\r\nexports.abs = function(number) {\r\n    if (number >= 0) {\r\n        return number;\r\n    } else {\r\n        return -number;\r\n    }\r\n};\r\n\r\nexports.round = function(prec, float) {\r\n    var mul = Math.pow(10, prec);\r\n    return Math.round(float * mul) / mul;\r\n};\r\n\r\nexports.sizeObject = function(object) {\r\n    var objectList = [];\r\n    var stack = [object];\r\n    var bytes = 0;\r\n\r\n    while (stack.length) {\r\n        var value = stack.pop();\r\n\r\n        if (typeof value === 'boolean') {\r\n            bytes += 4;\r\n        } else if (typeof value === 'string') {\r\n            bytes += value.length * 2;\r\n        } else if (typeof value === 'number') {\r\n            bytes += 8;\r\n        } else if (typeof value === 'object' && objectList.indexOf(value) === -1) {\r\n            objectList.push(value);\r\n\r\n            for (var i in value) {\r\n                stack.push(value[i]);\r\n            }\r\n        }\r\n    }\r\n    return bytes;\r\n};\r\n\r\nexports.getStyle = function(factor, scale) {\r\n    return {\r\n        fontFamily: 'raleway',\r\n        fill: '#ffffff',\r\n        stroke: '#000000',\r\n        fontSize: Math.floor(factor * scale) + 'px',\r\n        strokeThickness: (2 * scale),\r\n    };\r\n};\n\n\n// WEBPACK FOOTER //\n// ./shared/lot.js","var Update = require('./../update'),\r\n    cfg = require('./../../../../../shared/config');\r\n\r\nexports = module.exports = Entity;\r\n\r\nfunction Entity(id) {\r\n    this.id = id;\r\n    this.state = {};\r\n    this.updates = []; //only players\r\n    this.visible = false; //wait lerpTime before rendering\r\n    setTimeout(function() {\r\n        this.visible = true;\r\n    }.bind(this), cfg.clientInterpolationTime);\r\n\r\n    this.toRemove = false;\r\n}\r\n\r\nEntity.prototype = {\r\n    //not used\r\n    addUpdate: function(state, time) {\r\n        var newUpdate = new Update(state, time);\r\n        if (this.updates.length === 0) {\r\n            this.state = newUpdate.state;\r\n        }\r\n        this.updates.push(newUpdate);\r\n        if (this.updates.length > cfg.clientMaxUpdateBuffer) {\r\n            this.updates.splice(0, 1);\r\n        }\r\n    },\r\n\r\n    //Setters\r\n    setState: function(state) {\r\n        this.state = state;\r\n    },\r\n\r\n    setToRemove: function(toRemove) {\r\n        this.toRemove = toRemove;\r\n    },\r\n\r\n    //Getters\r\n    getUpdates: function() {\r\n        return this.updates;\r\n    },\r\n\r\n    /**\r\n     * find the 2 updates bounding renderTime\r\n     * @param  {time} time : renderTime\r\n     * @return {object}      pos{previous, target}\r\n     */\r\n    getInterpolatedUpdates: function(renderTime) {\r\n        var pos = {};\r\n        for (var i = 0; i < this.updates.length - 1; i++) {\r\n            var previous = this.updates[i],\r\n                target = this.updates[i + 1];\r\n            if (renderTime >= previous.time && renderTime < target.time) {\r\n                pos.previous = previous;\r\n                pos.target = target;\r\n                break;\r\n            }\r\n        }\r\n        return pos;\r\n    },\r\n\r\n    getId: function() {\r\n        return this.id;\r\n    },\r\n\r\n    isVisible: function() {\r\n        return this.visible;\r\n    },\r\n\r\n    isToRemove: function() {\r\n        return this.toRemove;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/entities/entity.js","var lot = require('../../../../shared/lot'),\r\n    cfg = require('../../../../shared/config');\r\n\r\nexports = module.exports = EntityController;\r\n\r\n/**\r\n * entities: to render\r\n * removedEntities: sprites to remove\r\n */\r\nfunction EntityController() {\r\n    this.entities = [];\r\n    this.removedEntities = [];\r\n}\r\n\r\nEntityController.prototype = {\r\n    //Remove\r\n    removeEntity: function(entity) {\r\n        var i = this.entities.indexOf(entity);\r\n        this.remove(i);\r\n    },\r\n\r\n    /**\r\n     * add the Entity to remove in removedEntities and remove from entities\r\n     * (used for outscope)\r\n     * @param  {int} i : entities index\r\n     * @return {void}\r\n     */\r\n    remove: function(i) {\r\n        if (i >= 0) {\r\n            this.removedEntities.push(this.entities[i]);\r\n            this.entities.splice(i, 1);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * onDisconnect, game over, change server, change mode\r\n     * entities sprite to remove\r\n     * @return {void}\r\n     */\r\n    clearEntities: function() {\r\n        for (var i = this.entities.length; i--;) {\r\n            this.removedEntities.push(this.entities[i]);\r\n            this.entities.splice(i, 1);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * after sprites removed\r\n     * @return {void}\r\n     */\r\n    clearRemovedEntities: function() {\r\n        this.removedEntities = [];\r\n    },\r\n\r\n    //Getters\r\n    getEntities: function() {\r\n        return this.entities;\r\n    },\r\n\r\n    getRemovedEntities: function() {\r\n        return this.removedEntities;\r\n    },\r\n\r\n    /**\r\n     * return a state: spectator or player\r\n     * @param  {int} id\r\n     * @return {object}    state\r\n     */\r\n    getEntityState: function(id) {\r\n        var state = false;\r\n\r\n        if (id === -1) {\r\n            state = cfg.spectatorInitState;\r\n        }\r\n\r\n        var i = lot.idxOf(this.entities, 'id', id);\r\n        if (i >= 0) {\r\n            state = this.entities[i].state;\r\n        }\r\n        // console.log(\"iii\" + id);\r\n        return state;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/entitycontroller.js","exports = module.exports = Update;\r\n\r\nfunction Update(state, time) {\r\n    this.state = state;\r\n    this.time = time;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/update.js","var lot = require('./lot'),\r\n    cfg = require('./config');\r\n\r\nexports.getInitPlayerState = function() {\r\n    return {\r\n        x: 0,\r\n        y: 0,\r\n        vx: 0,\r\n        vy: 0,\r\n        ring: false,\r\n        mass: cfg.playerInitMass,\r\n        dashing: false,\r\n\r\n        startTime: new Date(),\r\n        lastRing: new Date(),\r\n        lastDash: new Date(),\r\n        canDash: false,\r\n        immunity: true,\r\n    };\r\n};\r\n\r\nexports.getInitSpectatorState = function() {\r\n    return {\r\n        x: 0,\r\n        y: 0,\r\n        mass: 0,\r\n    };\r\n};\r\n\r\nexports.getInitFoodState = function() {\r\n    var pos = lot.getRandomPos(cfg.midLimitRad - 50, cfg.midLimitRad + cfg.midLimitStroke + 50, cfg.endLimitRad - 50);\r\n    return {\r\n        x: pos.x,\r\n        y: pos.y,\r\n    };\r\n};\r\n\r\n//referrerPlayer\r\nexports.getInitBallState = function(referrerState, mass, angle) {\r\n    var radius = lot.getRingRadius(referrerState.mass);\r\n    var pos = lot.getBallPos(referrerState.x, referrerState.y, radius, angle);\r\n    return {\r\n        x: pos.x,\r\n        y: pos.y,\r\n        mass: mass,\r\n        angle: angle,\r\n        active: true, //\r\n    };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/initCore.js","import Canvas from './canvas/canvas';\r\n\r\nconst Client = require('./client/client'),\r\n    // GamePhysics = require('../../shared/core'),\r\n    GameLoop = require('./gameloop'),\r\n    Keyboard = require('./keyboard'),\r\n    Mouse = require('./mouse'),\r\n    cfg = require('../../shared/config');\r\n\r\n/*\r\ninitializeClient : startGame (onReady) : start game loop.\r\nupdate entity and player current states (on input, onUpdateClientPredictionReady)\r\ngetInterpolatedState (onInterpolation)\r\n*/\r\n\r\nfunction Game() {\r\n    this.gameloop = new GameLoop();\r\n    this.cv = new Canvas();\r\n    this.keyboard = new Keyboard();\r\n    this.mouse = new Mouse(this.cv.canvas);\r\n    const HOST = location.origin.replace(/^http/, 'ws');\r\n    const ws = new WebSocket(HOST);\r\n    ws.binaryType = 'arraybuffer';\r\n    ws.onopen = function(event) {\r\n        //NOTE: lost one day because of setTimeout(0): first msg not received\r\n        this.client = new Client(ws);\r\n        this.startGame();\r\n    }.bind(this);\r\n}\r\n\r\nGame.prototype = {\r\n    startGame: function() {\r\n        let selfId = this.client.getSelfId();\r\n        let selfMass = 0;\r\n        let lastTs = null;\r\n        let deltaTime = 0;\r\n\r\n        this.gameloop.start(\r\n            //Update Loop\r\n            () => {\r\n                const stateController = this.client.getStateController();\r\n\r\n                const nowTs = new Date();\r\n                lastTs = lastTs || nowTs;\r\n                deltaTime = (nowTs - lastTs);\r\n                lastTs = nowTs;\r\n                // stateController.setElapsedLastUpdate(deltaTime);\r\n                stateController.updatePlayerStates();\r\n\r\n                stateController.predictShootStates(deltaTime);\r\n                stateController.predictFoodStates(deltaTime);\r\n\r\n                //if new game or game over\r\n                if (this.client.isInTransition()) {\r\n                    if (selfId === -1) {\r\n                        selfId = this.updateNewGame();\r\n                    } else {\r\n                        console.log(\"ooooh\");\r\n                        selfId = this.updateGameOver();\r\n                    }\r\n                }\r\n                if (selfId === -1) return;\r\n\r\n                this.processInputs();\r\n            },\r\n            //Render Loop\r\n            () => {\r\n                if (!this.cv.assetsLoaded) return;\r\n\r\n                if (selfId !== -1) {\r\n                    this.cv.cam.smoothResize(deltaTime);\r\n                }\r\n\r\n                const stateController = this.client.getStateController(),\r\n                    playerController = stateController.getPlayerController(),\r\n                    foodController = stateController.getFoodController(),\r\n                    shootController = stateController.getShootController();\r\n\r\n                this.removeRemovedEntitiesSprites(playerController, foodController, shootController);\r\n                const players = playerController.getEntities(),\r\n                    foods = foodController.getEntities(),\r\n                    shoots = shootController.getEntities();\r\n\r\n                //if the client is in game or spectator, render\r\n                const selfState = playerController.getEntityState(selfId);\r\n                if (selfState.mass !== undefined) {\r\n                    //if mass changes, resize\r\n                    if (selfState.mass !== selfMass) {\r\n                        selfMass = selfState.mass;\r\n                        this.cv.cam.resizeMass(selfMass);\r\n                    }\r\n\r\n                    this.cv.vmap.drawMap(selfState);\r\n\r\n                    for (let i = foods.length; i--;) {\r\n                        const food = foods[i];\r\n                        if (!food.isVisible()) continue;\r\n                        this.cv.vfood.drawFood(food, selfState);\r\n                    }\r\n                    for (let i = shoots.length; i--;) {\r\n                        const shoot = shoots[i];\r\n                        if (!shoot.isVisible()) continue;\r\n                        this.cv.vshoot.drawShoot(shoot, selfState);\r\n                    }\r\n                    for (let i = players.length; i--;) {\r\n                        const player = players[i];\r\n                        if (!player.isVisible()) continue;\r\n                        this.cv.vplayer.drawPlayer(player, selfState);\r\n\r\n                        // if (!player.state.immunity) {\r\n                        const balls = player.getBallController().getEntities();\r\n                        for (let j = balls.length; j--;) {\r\n                            const ball = balls[j];\r\n                            // if (!ball.isVisible()) continue;\r\n                            this.cv.vball.drawBall(ball, selfState);\r\n                        }\r\n                        // }\r\n                    }\r\n\r\n                    this.cv.hud.drawHud(selfState);\r\n                    if (playerController.isUpdatedBoard()) {\r\n                        this.cv.hud.drawBoard(playerController.getBoard());\r\n                        playerController.setUpdatedBoard(false);\r\n                    }\r\n\r\n                    this.cv.render();\r\n                }\r\n\r\n                this.cv.hud.fps.setFps(new Date());\r\n            }\r\n        );\r\n    },\r\n\r\n    processInputs: function() {\r\n        this.processKeyboard();\r\n        this.processMouse();\r\n    },\r\n\r\n    processKeyboard: function() {\r\n        const leftEU = this.keyboard.pressed('leftEU');\r\n        const leftUS = this.keyboard.pressed('leftUS');\r\n        const left = leftEU || leftUS;\r\n        const right = this.keyboard.pressed('right');\r\n        const space = this.keyboard.pressed('space');\r\n\r\n        if (left && this.keyboard.keyUp.left) {\r\n            this.client.onInput(10);\r\n            this.keyboard.keyUp.left = false;\r\n        }\r\n\r\n        if (right && this.keyboard.keyUp.right) {\r\n            this.client.onInput(11);\r\n            this.keyboard.keyUp.right = false;\r\n        }\r\n\r\n        if (space && this.keyboard.keyUp.space) {\r\n            this.client.onInput(12);\r\n            this.keyboard.keyUp.space = false;\r\n        }\r\n\r\n        if (!left) {\r\n            this.keyboard.keyUp.left = true;\r\n        }\r\n        if (!right) {\r\n            this.keyboard.keyUp.right = true;\r\n        }\r\n        if (!space) {\r\n            this.keyboard.keyUp.space = true;\r\n        }\r\n\r\n        if (cfg.debugMove) {\r\n            this.keyboard.keyUp.left = true;\r\n            this.keyboard.keyUp.right = true;\r\n        }\r\n    },\r\n\r\n    processMouse: function() {\r\n        if (this.mouse.click) {\r\n            this.client.onInput(13);\r\n            this.mouse.click = false;\r\n        }\r\n\r\n        const wheeled = this.mouse.wheeled();\r\n        if (wheeled > 0) {\r\n            this.cv.cam.zoomIn(wheeled);\r\n        } else if (wheeled < 0) {\r\n            this.cv.cam.zoomOut(-wheeled);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * start a new game with a new id\r\n     * @return {int} new id of the client\r\n     */\r\n    updateNewGame: function() {\r\n        const signPanelDiv = document.getElementById('signPanelDiv'); \r\n        const hudDiv = document.getElementById('hudDiv'); \r\n        signPanelDiv.style.display = 'none';\r\n        hudDiv.style.visibility = 'visible';\r\n        this.cv.hud.container.visible = true;\r\n        this.mouse.running = true;\r\n\r\n        this.client.setInTransition(false);\r\n        return this.client.getSelfId();\r\n    },\r\n\r\n    updateGameOver: function() {\r\n        const signPanelDiv = document.getElementById('signPanelDiv'); \r\n        const hudDiv = document.getElementById('hudDiv'); \r\n        signPanelDiv.style.display = 'block';\r\n        hudDiv.style.visibility = 'hidden';\r\n        this.cv.hud.container.visible = false;\r\n        this.mouse.running = false;\r\n\r\n        this.client.setInTransition(false);\r\n        return -1;\r\n    },\r\n\r\n    removeRemovedEntitiesSprites: function(playerController, foodController, shootController) {\r\n        this.cv.removeSprites(playerController.getRemovedEntities(), foodController.getRemovedEntities(), shootController.getRemovedEntities());\r\n        playerController.clearRemovedEntities();\r\n        shootController.clearRemovedEntities();\r\n        foodController.clearRemovedEntities();\r\n    }\r\n};\r\n\r\nconst signForm = document.getElementById(\"sign-form\");\r\nsignForm.onsubmit = function(e) {\r\n    e.preventDefault();\r\n    return false;\r\n};\r\n\r\nconst game = new Game();\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/game.js","const lot = require('../../../shared/lot');\r\n// cfg = require('../../../shared/config');\r\n    \r\n\r\n\r\nexport default class ViewBall {\r\n    constructor(cv) {\r\n        this.cv = cv;\r\n        this.canvas = cv.canvas;\r\n    }\r\n    \r\n    drawBall(ball, selfState) {\r\n        if (!ball.sprite) {\r\n            ball.sprite = new PIXI.extras.MovieClip(this.cv.txt.fireballTxtList);\r\n            ball.sprite.animationSpeed = 0.2;\r\n            ball.sprite.play();\r\n            ball.sprite.anchor.set(0.5);\r\n            //ball.sprite.alpha = 0;\r\n            ball.sprite.displayGroup = this.cv.playerLayer;\r\n            this.cv.stage.addChild(ball.sprite);\r\n        }\r\n        // if (!ball.sprite) {\r\n        //     //TODO: color ball + size\r\n        //     //NOTE: texture careful!\r\n        //\r\n        //     this.cv.stage.addChild(ball.sprite);\r\n        // }\r\n        const size = lot.getBallSize(ball.state.mass);\r\n        ball.sprite.width = size;\r\n        ball.sprite.height = size;\r\n        const x = ball.state.x - selfState.x + this.canvas.width / 2;\r\n        const y = ball.state.y - selfState.y + this.canvas.height / 2;\r\n        ball.sprite.position.set(x, y);\r\n        ball.sprite.rotation = ball.state.angle + Math.PI / 2;\r\n        //\r\n        // if (ball.sprite.alpha < 1) {\r\n        //     ball.sprite.alpha += 0.05;\r\n        //     ball.sprite.alpha = Math.round(ball.sprite.alpha * 100) / 100;\r\n        //     ball.sprite.scale.set(ball.sprite.alpha);\r\n        // }\r\n\r\n        // if (cfg.debugFoodHitbox) {\r\n        // this.tunnel.clear();\r\n        this.cv.debug.beginFill(0xFF0000);\r\n        // const radius = lot.getBallMass(ball.state.mass);\r\n        // this.cv.debug.drawCircle(x, y, radius);\r\n        this.cv.debug.beginFill(0xFF0000, 0);\r\n        // this.cv.debug.drawCircle(x, y, cfg.foodEatenHitbox);\r\n        // }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/js/canvas/ViewBall.js","const lot = require('../../../shared/lot'),\r\ncfg = require('../../../shared/config');\r\n\r\n\r\n\r\nexport default class ViewFood {\r\n    constructor(cv) {\r\n        this.cv = cv;\r\n        this.canvas = cv.canvas;\r\n    }\r\n    \r\n    drawFood(food, selfState) {\r\n        if (!food.sprite) {\r\n            //TODO: color food + size\r\n            //NOTE: texture careful!\r\n            // const texture = Math.round(Math.random() * (cfg.foodPaletteSize - 1));\r\n            // food.sprite = new PIXI.Sprite(this.cv.txt.foodTxtList[food.mass]);\r\n            food.sprite = new PIXI.Sprite(this.cv.txt.foodTxt);\r\n            food.sprite.blendMode = PIXI.BLEND_MODES.ADD;\r\n            //NOTE: tint white for color!\r\n            const i = lot.randomIntFromInterval(0, cfg.gradColors.length - 1);\r\n            food.sprite.tint = cfg.gradColors[i];\r\n            \r\n            \r\n            food.sprite.anchor.set(0.5);\r\n            food.sprite.alpha = 0;\r\n            food.sprite.displayGroup = this.cv.foodLayer;\r\n            \r\n            this.cv.stage.addChild(food.sprite);\r\n        }\r\n        \r\n        const x = food.state.x - selfState.x + this.canvas.width / 2;\r\n        const y = food.state.y - selfState.y + this.canvas.height / 2;\r\n        food.sprite.position.x = x;\r\n        food.sprite.position.y = y;\r\n        \r\n        let size = lot.getFoodSpriteRadius(food.mass);\r\n        // let size = 50 + 4 * food.mass;\r\n        let newScale = 1;\r\n        \r\n        //spawn\r\n        if (food.sprite.alpha < 1) {\r\n            food.sprite.alpha += 0.05;\r\n            food.sprite.alpha = Math.round(food.sprite.alpha * 100) / 100;\r\n            newScale = food.sprite.alpha; \r\n        }\r\n\r\n        //eaten\r\n        if (food.referrer) {\r\n            const referrerState = food.referrer.state;\r\n            const dist = lot.distEucl(referrerState.x, referrerState.y, food.state.x, food.state.y);\r\n            newScale = 1 - ((cfg.foodHitbox - cfg.foodEatenHitbox) / (2 * dist));\r\n            // food.sprite.alpha = newScale;\r\n            if (newScale < 0) newScale = 0;\r\n            // console.log(newScale);\r\n            // food.sprite.scale.set(newScale / 8);\r\n        }\r\n        \r\n        size *= newScale;\r\n        food.sprite.width = size;\r\n        food.sprite.height = size;\r\n        \r\n        if (cfg.debugFoodHitbox) {\r\n            const sizeHitbox = lot.getFoodRadius(food.mass);\r\n            this.cv.debug.lineStyle(1, 0xFF0000);\r\n            this.cv.debug.drawCircle(food.state.xReal - selfState.x + this.canvas.width / 2, food.state.yReal - selfState.y + this.canvas.height / 2, sizeHitbox);\r\n            // this.cv.debug.drawCircle(x, y, cfg.foodEatenHitbox);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/js/canvas/ViewFood.js","const cfg = require('../../../shared/config');\r\n\r\n\r\nexport default class ViewMap {\r\n    constructor(cv) {\r\n        this.cv = cv;\r\n        this.canvas = cv.canvas;\r\n    }\r\n    \r\n    preloadSprites() {\r\n        this.map = new PIXI.extras.TilingSprite(this.cv.txt.mapTxt, cfg.mapSize, cfg.mapSize);\r\n        this.map.displayGroup = this.cv.tunnelLayer;\r\n        this.cv.stage.addChild(this.map);\r\n\r\n        this.bg = new PIXI.extras.TilingSprite(this.cv.txt.bgTxt, cfg.mapSize, cfg.mapSize);\r\n        // this.bg = new PIXI.Sprite(this.bgTexture);\r\n        this.bg.displayGroup = this.cv.limitLayer;\r\n        this.cv.stage.addChild(this.bg);\r\n\r\n        //Limit\r\n        this.midLimit = new PIXI.Sprite(this.cv.txt.midLimitTxt);\r\n        this.midLimit.displayGroup = this.cv.limitLayer;\r\n        this.cv.stage.addChild(this.midLimit);\r\n        this.endLimit = new PIXI.Sprite(this.cv.txt.endLimitTxt);\r\n        this.endLimit.displayGroup = this.cv.limitLayer;\r\n        this.cv.stage.addChild(this.endLimit);\r\n\r\n        //Tunnel\r\n        this.tunnel = new PIXI.Graphics();\r\n        this.tunnel.displayGroup = this.tunnelLayer;\r\n        this.cv.stage.addChild(this.tunnel);\r\n        \r\n        //Debug layer\r\n        this.cv.debug = new PIXI.Graphics();\r\n        this.cv.debug.displayGroup = this.cv.tunnelLayer;\r\n        this.cv.stage.addChild(this.cv.debug);\r\n    }\r\n    \r\n    //Stage\r\n    drawMap(selfState) {\r\n        //the middle of the canvas - selfPos\r\n        //i.e. if self go down, the map go up\r\n        const x = this.canvas.width / 2 - selfState.x;\r\n        const y = this.canvas.height / 2 - selfState.y;\r\n        //origin at the center of the map\r\n        this.map.anchor.set(0.5);\r\n        this.map.position.set(x, y);\r\n        this.map.scale.set(cfg.mapScale);\r\n        this.map.alpha = 1;\r\n        // this.map.tint = 0xb00000;\r\n        // this.map.tint = 0xa144ff;\r\n        // this.map.tint = 0x008705;\r\n        // this.map.tint = 0x00b2ff;\r\n        \r\n        this.map.tint = 0x006EC7;\r\n        \r\n        this.bg.anchor.set(0.5);\r\n        this.bg.position.set(x, y);\r\n        this.bg.scale.set(0);\r\n\r\n\r\n        //LIMITS\r\n        const angle = Math.atan2(selfState.y, selfState.x);\r\n        this.midLimit.position.x = x + cfg.midLimitOffset * Math.sqrt(2) * Math.cos(angle);\r\n        this.midLimit.position.y = y + cfg.midLimitOffset * Math.sqrt(2) * Math.sin(angle);\r\n        this.midLimit.rotation = -Math.PI / 4 + angle;\r\n\r\n        this.endLimit.position.x = x + cfg.endLimitOffset * Math.sqrt(2) * Math.cos(angle);\r\n        this.endLimit.position.y = y + cfg.endLimitOffset * Math.sqrt(2) * Math.sin(angle);\r\n        this.endLimit.rotation = -Math.PI / 4 + angle;\r\n\r\n\r\n        //TUNNELS\r\n        this.tunnel.clear();\r\n        this.tunnel.beginFill(0x00FF00, 0.5);\r\n        if (selfState.x < 0) { //\r\n            this.tunnel.drawRect(x - (cfg.midLimitRad + cfg.midLimitStroke), y - cfg.tunnelHeight / 2, cfg.midLimitStroke, cfg.tunnelHeight);\r\n        } else {\r\n            this.tunnel.drawRect(x + cfg.midLimitRad, y - cfg.tunnelHeight / 2, cfg.midLimitStroke, cfg.tunnelHeight);\r\n        }\r\n        \r\n        \r\n        //DEBUG\r\n        this.cv.debug.clear();\r\n\r\n        if (cfg.debugTileSize) {\r\n            this.cv.debug.lineStyle(3, 0xFF0000);\r\n            const width = Math.floor(cfg.endLimitRad / cfg.tileAmountX);\r\n            const height = Math.floor(cfg.endLimitRad / cfg.tileAmountY);\r\n            this.cv.debug.drawRect(x, y, width, height);\r\n            // const X = Math.floor(cfg.tileAmountX * (selfState.x + cfg.endLimitRad) / (2 * cfg.endLimitRad));\r\n            // const Y = Math.floor(cfg.tileAmountY * (selfState.y + cfg.endLimitRad) / (2 * cfg.endLimitRad));\r\n            // const xTile = this.canvas.width / 2 - (X - cfg.tileAmountX / 2) * cfg.endLimitRad / cfg.tileAmountX;\r\n            // const yTile = this.canvas.height / 2 - (Y - cfg.tileAmountY / 2) * cfg.endLimitRad / cfg.tileAmountY;\r\n            // this.cv.debug.drawRect(xTile, yTile, width, height);\r\n        }\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./client/js/canvas/ViewMap.js","const cfg = require('../../../shared/config'),\r\n    lot = require('../../../shared/lot');\r\n\r\n\r\nexport default class ViewPlayer {\r\n    constructor(cv) {\r\n        this.cv = cv;\r\n        this.canvas = cv.canvas;\r\n    }\r\n    \r\n    drawPlayer(player, selfState) {\r\n        if (!player.sprite) {\r\n            player.sprite = new PIXI.extras.MovieClip(this.cv.txt.playerTxtList);\r\n            player.sprite.animationSpeed = 0.15;\r\n            // player.sprite.tint = 0xffa8a8;\r\n            player.sprite.play();\r\n            player.sprite.anchor.set(0.5);\r\n            //player.sprite.alpha = 0;\r\n            player.sprite.displayGroup = this.cv.playerLayer;\r\n            this.cv.stage.addChild(player.sprite);\r\n\r\n            //to destroy\r\n            player.spriteDash = new PIXI.extras.MovieClip(this.cv.txt.dashTxtList);\r\n            player.spriteDash.animationSpeed = 0.3;\r\n            player.spriteDash.anchor.set(0.5);\r\n            player.spriteDash.blendMode = PIXI.BLEND_MODES.ADD;\r\n            player.spriteDash.visible = false;\r\n            player.spriteDash.displayGroup = this.foodLayer;\r\n            this.cv.stage.addChild(player.spriteDash);\r\n\r\n            player.spriteRing = new PIXI.Sprite(this.cv.txt.ringTxt);\r\n            player.spriteRing.anchor.set(0.5);\r\n            player.spriteRing.alpha = 0;\r\n            player.spriteRing.displayGroup = this.cv.playerLayer;\r\n            this.cv.stage.addChild(player.spriteRing);\r\n\r\n            player.graphics = new PIXI.Graphics();\r\n            this.cv.stage.addChild(player.graphics);\r\n\r\n            player.text = new PIXI.Text(player.name, cfg.textOpt);\r\n            player.text.anchor.set(0.5);\r\n            // player.text.alpha = 1;\r\n            this.cv.hud.container.addChild(player.text);\r\n        }\r\n\r\n        let size = lot.getPlayerSpriteRadius(player.state.mass);\r\n\r\n        const x = player.state.x - selfState.x + this.canvas.width / 2;\r\n        const y = player.state.y - selfState.y + this.canvas.height / 2;\r\n\r\n        player.text.position.x = x;\r\n        player.text.position.y = y + size - 15;\r\n        // const scaleMass = lot.getScaleMass(player.state.mass);\r\n\r\n        player.text.style = lot.getStyle(14, this.cv.cam.scale);\r\n\r\n        const angle = Math.atan2(player.state.vy, player.state.vx);\r\n        if (player.state.vx < 0) {\r\n            // player.sprite.textures = this.playerLTxtList;\r\n            player.sprite.scale.x = -1;\r\n            player.sprite.rotation = angle + Math.PI;\r\n        } else {\r\n            player.sprite.scale.x = 1;\r\n            player.sprite.rotation = angle;\r\n        }\r\n        if (!player.state.dashing && player.sprite.currentFrame === 0 && player.state.vy === cfg.playerVy) {\r\n            player.sprite.stop();\r\n        } else {\r\n            if (!player.sprite.playing) {\r\n                player.sprite.play();\r\n            }\r\n        }\r\n        if (player.state.dashing) {\r\n            player.sprite.animationSpeed = 0.3;\r\n            if (player.sprite.alpha > 0.8) {\r\n                player.sprite.alpha -= 0.05;\r\n            }\r\n            player.spriteDash.play();\r\n            player.spriteDash.visible = true;\r\n        } else {\r\n            if (player.spriteDash.playing) {\r\n                player.sprite.animationSpeed = 0.15;\r\n                player.sprite.alpha = 1;\r\n                player.spriteDash.gotoAndStop(0);\r\n                player.spriteDash.visible = false;\r\n            }\r\n        }\r\n        player.sprite.position.x = x - 3;\r\n        player.sprite.position.y = y + 8;\r\n        player.sprite.width = size;\r\n        // player.sprite.height = size;\r\n        player.sprite.height = size*(player.sprite._texture.baseTexture.height/player.sprite._texture.baseTexture.width);\r\n\r\n        player.spriteDash.position.x = x;\r\n        player.spriteDash.position.y = y;\r\n        player.spriteDash.width = size;\r\n        player.spriteDash.height = size;\r\n\r\n        // player.link;\r\n        // const p1 = selfState;\r\n        // const p2 = player.state;\r\n        // const dist = lot.distEucl(p1.x, p1.y, p2.x, p2.y);\r\n        // // if (dist < 1000) {\r\n        // //グラデーションの生成\r\n        // const size = 1000;\r\n        // const can = this.createCanvas(size, size);\r\n        // const ctx = can.getContext('2d');\r\n        // const grad = ctx.createLinearGradient(p1.x, p1.y, p2.x, p2.y);\r\n        // grad.addColorStop(0, 'rgba(' + 102 + ',' + 217 + ',' + 239 + ',' + (1 - dist / 1000) + ')');\r\n        // grad.addColorStop(1, 'rgba(' + 249 + ',' + 38 + ',' + 114 + ',' + (1 - dist / 1000) + ')');\r\n        // ctx.strokeStyle = grad;\r\n        // //線の描画\r\n        // ctx.beginPath();\r\n        // ctx.moveTo(p1.x, p1.y);\r\n        // ctx.lineTo(p2.x, p2.y);\r\n        // ctx.closePath();\r\n        // ctx.stroke();\r\n        // if (player.link) {\r\n        //     this.cv.stage.removeChild(player.link);\r\n        //     player.link.destroy(true);\r\n        //     this.cv.txts.destroy(true);\r\n        // }\r\n        // this.cv.txts = new PIXI.Texture.fromCanvas(can);\r\n        // player.link = new PIXI.Sprite(this.cv.txts); // to delete\r\n        // player.link.anchor.set(0.5);\r\n        // player.link.displayGroup = this.cv.playerLayer;\r\n        // player.link.position.x = (p1.x + p2.x) / 2;\r\n        // player.link.position.y = (p1.y + p2.y) / 2;\r\n        // this.cv.stage.addChild(player.link);\r\n\r\n        // for (let prop in PIXI.utils.TextureCache) {\r\n        //     console.log(prop);\r\n        // }\r\n\r\n        //ring\r\n        size = lot.getRingSize(player.state.mass);\r\n\r\n        player.spriteRing.position.x = x;\r\n        player.spriteRing.position.y = y;\r\n        player.spriteRing.width = size;\r\n        player.spriteRing.height = size;\r\n        if (player.state.ring) {\r\n            if (player.spriteRing.alpha < 1) {\r\n                player.spriteRing.alpha += 0.1;\r\n                player.spriteRing.alpha = Math.round(player.spriteRing.alpha * 10) / 10;\r\n            }\r\n        } else {\r\n            if (player.spriteRing.alpha > 0) {\r\n                player.spriteRing.alpha = 0;\r\n            }\r\n        }\r\n\r\n        player.spriteRing.visible = false;\r\n        // this.cv.debug.clear();\r\n        this.cv.debug.lineStyle(2, 0xFF0000);\r\n        if (cfg.debugSelfHitbox) {\r\n            const selfRadius = lot.getSelfRadius(player.state.mass);\r\n            this.cv.debug.drawCircle(x, y, selfRadius);\r\n        }\r\n        if (cfg.debugSelfScope) {\r\n            const width = Math.floor(cfg.tileScopeAmountX * cfg.endLimitRad / cfg.tileAmountX);\r\n            const height = Math.floor(cfg.tileScopeAmountY * cfg.endLimitRad / cfg.tileAmountY);\r\n            this.cv.debug.drawRect(x - width / 4, y - height / 4, width / 2, height / 2);\r\n        }\r\n        // this.cv.debug.drawCircle(x, y, lot.getRingRadius(player.state.mass));\r\n        if (cfg.debugRingHitbox) {\r\n            this.cv.debug.drawCircle(x, y, lot.getRingMin(player.state.mass));\r\n            this.cv.debug.drawCircle(x, y, lot.getRingMax(player.state.mass));\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/js/canvas/ViewPlayer.js","const lot = require('../../../shared/lot'),\r\ncfg = require('../../../shared/config');\r\n\r\n\r\n\r\nexport default class ViewShoot {\r\n    constructor(cv) {\r\n        this.cv = cv;\r\n        this.canvas = cv.canvas;\r\n    }\r\n    \r\n    drawShoot(shoot, selfState) {\r\n        if (!shoot.sprite) {\r\n            shoot.sprite = new PIXI.Sprite(this.cv.txt.ringTxt);\r\n            shoot.sprite.anchor.set(0.5);\r\n            shoot.sprite.displayGroup = this.cv.playerLayer;\r\n            this.cv.stage.addChild(shoot.sprite);\r\n        }\r\n\r\n        const size = lot.getRingSize(shoot.state.mass);\r\n        let sizeFactor = shoot.state.lifeTime / cfg.dashTime;\r\n        if (sizeFactor > 1) {\r\n            sizeFactor = 1;\r\n        }\r\n\r\n        shoot.sprite.width = sizeFactor * size;\r\n        shoot.sprite.height = sizeFactor * size;\r\n        // shoot.sprite.alpha = sizeFactor;\r\n        shoot.sprite.position.x = shoot.state.x - selfState.x + this.canvas.width / 2;\r\n        shoot.sprite.position.y = shoot.state.y - selfState.y + this.canvas.height / 2;\r\n        //\r\n        // shoot.sprite.visible = true;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/js/canvas/ViewShoot.js","const cfg = require('../../../shared/config'),\r\n    lot = require('../../../shared/lot');\r\n\r\n\r\nexport default class Camera {\n    //called in Canvas\n    constructor(cv) {\n        this.cv = cv;\n        this.scale = 1; //with zoom\r\n        this.scaleMass = 1;\r\n        this.zoom = 0;\r\n        this.scaleTarget = 1;\r\n        this.scaleCurrent = 1;\n    }\r\n\n    setScaleTarget(applySmooth) {\r\n        this.scaleTarget = this.scale * this.scaleMass * Math.pow(cfg.zoomFactor, this.zoom);\r\n        //TODO: smooth only zoom\r\n        \r\n        if (!applySmooth) {\r\n            this.scaleCurrent = this.scaleTarget;\r\n            this.resizeStage(this.scaleCurrent);\r\n        }\r\n    }\r\n    \r\n    //called in Game\r\n    smoothResize(deltaTime) {\r\n        if (this.scaleTarget > this.scaleCurrent) {\r\n            this.scaleCurrent += deltaTime * 0.0030;\r\n            if (this.scaleCurrent > this.scaleTarget) {\r\n                this.scaleCurrent = this.scaleTarget;\r\n            }\r\n            this.resizeStage(this.scaleCurrent);\r\n        } else if (this.scaleTarget < this.scaleCurrent) {\r\n            this.scaleCurrent -= deltaTime * 0.0030;\r\n            if (this.scaleCurrent < this.scaleTarget) {\r\n                this.scaleCurrent = this.scaleTarget;\r\n            }\r\n            this.resizeStage(this.scaleCurrent);\r\n        }\r\n    }\r\n    \r\n    //called in Game\r\n    zoomIn(zoomIn) {\r\n        for (let i = 0; i < zoomIn; i++) {\r\n            const scaleTarget = this.scale * this.scaleMass * Math.pow(cfg.zoomFactor, this.zoom + 1);\r\n            if (scaleTarget > cfg.zoomScaleLimit) {\r\n                // this.zoom = Math.log(cfg.zoomScaleLimit / (this.scale * this.scaleMass)) /\r\n                //     (cfg.zoomFactor * Math.log(cfg.zoomFactor));\r\n                // console.log(this.zoom);\r\n                break;\r\n            } else {\r\n                this.zoom += 1;\r\n            }\r\n        }\r\n        this.setScaleTarget(true);\r\n    }\r\n    \r\n    //called in Game\r\n    zoomOut(zoomOut) {\r\n        for (let i = 0; i < zoomOut; i++) {\r\n            this.zoom -= 1;\r\n            if (this.zoom < 0 && !cfg.debugZoom) {\r\n                this.zoom = 0;\r\n            }\r\n        }\r\n        \r\n        this.setScaleTarget(true);\r\n    }\r\n    \r\n    /**\r\n    * called in Canvas on window resize\r\n    * @return {void}\r\n    */\r\n    resizeCamera() {\r\n        this.resizeCanvas();\r\n        this.resizeHud();\r\n    }\r\n    \r\n    //modify this.scale and resize\r\n    resizeCanvas() {\r\n        console.log(\"res\");\r\n        //like agario\r\n        const w = window.innerWidth * 1.25;\r\n        const h = window.innerHeight * 1.25;\r\n        // console.log(w);\r\n        // console.log(h);\n        this.cv.canvas.width = w;\r\n        this.cv.canvas.height = h;\r\n        this.cv.renderer.resize(this.cv.canvas.width, this.cv.canvas.height);\r\n        this.cv.stage.pivot.x = this.cv.canvas.width / 2;\r\n        this.cv.stage.pivot.y = this.cv.canvas.height / 2;\r\n        this.cv.stage.position.x = this.cv.canvas.width / 2;\r\n        this.cv.stage.position.y = this.cv.canvas.height / 2;\r\n        \r\n        // 1600 / 1920 = 0.8333;\r\n        // 500 / 1080 = 0.463;\r\n        // to fill canvas will be 0.8333 * (1920,1080) = (1600,900) clipped top and bottom\r\n        const scale = Math.max(w / cfg.scopeInitX, h / cfg.scopeInitY);\r\n        \r\n        //care of rounding...\r\n        const canW = lot.round(2, scale * cfg.scopeInitX);\r\n        const canH = lot.round(2, scale * cfg.scopeInitY);\r\n        if (canW > w) {\r\n            this.scale = window.innerHeight / cfg.scopeInitY;\r\n        } else\r\n        if (canH > h) {\r\n            this.scale = window.innerWidth / cfg.scopeInitX;\r\n        }\r\n        //no smoothing\r\n        this.setScaleTarget(false);\r\n    }\r\n    \r\n    //modify this.scaleMass and resize\r\n    resizeMass(mass) {\r\n        this.scaleMass = lot.getScaleMass(mass);\r\n        this.setScaleTarget(false);\r\n    }\r\n    \r\n    resizeStage(scale) {\r\n        this.cv.stage.scale.set(scale);\r\n    }\r\n    \r\n    resizeHud() {\n        const leaderboard = document.getElementById('leaderboard'); \n        const boardDiv = document.getElementById('boardDiv'); \n        const entry = document.getElementById('entry'); \n        leaderboard.style.fontSize = (boardDiv.offsetWidth / 7) + \"px\";\r\n        entry.style.fontSize = (boardDiv.offsetWidth / 11) + \"px\";\n        \r\n        const fpsTextX = 5 * this.scale,\r\n        fpsTextY = 5 * this.scale,\r\n        scoreX = 5 * this.scale,\r\n        scoreY = this.cv.canvas.height - 25 * this.scale,\r\n        xX = 5 * this.scale,\r\n        xY = 30 * this.scale,\r\n        yX = 5 * this.scale,\r\n        yY = 50 * this.scale,\r\n        miniX = this.cv.canvas.width - 60 * this.scale,\r\n        miniY = this.cv.canvas.height - 60 * this.scale;\r\n        \r\n        this.cv.hud.fpsText.position.set(fpsTextX, fpsTextY);\r\n        this.cv.hud.score.position.set(scoreX, scoreY);\r\n        this.cv.hud.x.position.set(xX, xY);\r\n        this.cv.hud.y.position.set(yX, yY);\r\n        \r\n        console.log(this.scale);\r\n        const style = lot.getStyle(20, this.scale);\r\n        console.log(style);\r\n        this.cv.hud.fpsText.style = style;\r\n        this.cv.hud.score.style = style;\r\n        this.cv.hud.x.style = style;\r\n        this.cv.hud.y.style = style;\r\n        \r\n        this.cv.hud.minimap.clear();\r\n        this.cv.hud.minimap.beginFill(0xa8a8a8, 0.5);\r\n        this.cv.hud.minimap.drawCircle(miniX, miniY, cfg.minimapRad * this.scale);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/js/canvas/camera.js","import Camera from './camera';\r\nimport Hud from './hud';\r\nimport Textures from './textures';\r\nimport ViewMap from './ViewMap';\r\nimport ViewPlayer from './ViewPlayer';\r\nimport ViewBall from './ViewBall';\r\nimport ViewFood from './ViewFood';\r\nimport ViewShoot from './ViewShoot';\r\n\r\nconst cfg = require('../../../shared/config');\r\n    \r\n\r\nexport default class Canvas {\r\n    constructor() {\r\n        this.canvas = document.getElementById(\"ctx\");\r\n        this.assetsLoaded = false;\r\n        this.txt = new Textures(this);\r\n        this.hud = new Hud(this);\r\n        this.cam = new Camera(this);\r\n        this.vmap = new ViewMap(this);\r\n        this.vplayer = new ViewPlayer(this);\r\n        this.vball = new ViewBall(this);\r\n        this.vfood = new ViewFood(this);\r\n        this.vshoot = new ViewShoot(this);\r\n        \r\n        this.preload();\r\n        \r\n        window.addEventListener('resize', (e) => {\r\n            this.cam.resizeCamera();\r\n        });\r\n        this.cam.resizeCamera();\r\n    }\r\n    \r\n    preload() {\r\n        this.renderer = new PIXI.autoDetectRenderer(cfg.scopeInitX, cfg.scopeInitY, {\r\n            view: this.canvas\r\n        });\r\n        //PIXI.RESOLUTION = window.devicePixelRatio;\r\n        this.renderer.clearBeforeRender = false;\r\n\r\n        this.preloadStage();\r\n        this.txt.preloadTextures();\r\n        this.hud.preloadHud();\r\n    }\r\n\r\n    preloadStage() {\r\n        this.stage = new PIXI.Container();\r\n        this.stage.displayList = new PIXI.DisplayList();\r\n        this.limitLayer = new PIXI.DisplayGroup(0, false);\r\n        this.tunnelLayer = new PIXI.DisplayGroup(1, false);\r\n        this.foodLayer = new PIXI.DisplayGroup(2, false);\r\n        this.playerLayer = new PIXI.DisplayGroup(3, false);\r\n        // this.textLayer = new PIXI.DisplayGroup(4, false);\r\n    }\r\n\r\n    onTexturesLoaded() {\r\n        this.vmap.preloadSprites();\r\n        //NOTE needed ?\r\n        this.vmap.drawMap({\r\n            x: 0,\r\n            y: 0,\r\n        });\r\n        this.assetsLoaded = true;\r\n\r\n        //start DOM animation\r\n        const signPanelDiv = document.getElementById('signPanelDiv');\r\n        signPanelDiv.style.display = 'block';\r\n        this.canvas.style.display = 'block';\r\n    }\r\n\r\n    render() {\r\n        this.renderer.render(this.stage);\r\n        this.renderer.render(this.hud.container);\r\n        // this.renderer.render(this.foodContainer);\r\n    }\r\n    \r\n\r\n    removeSprites(removedPlayers, removedFoods, removedShoots) {\r\n        // sprite.destroy(); - will destroy sprite, leaving PIXI.Texture and PIXI.BaseTexture untouched\r\n        // sprite.destroy(true); - will destroy sprite and PIXI.Texture; PIXI.BaseTexture remains untouched\r\n        // sprite.destroy(true, true); - will destroy sprite, PIXI.Texture and PIXI.BaseTexture\r\n        for (let i = removedPlayers.length; i--;) {\r\n            const removedBalls = removedPlayers[i].getBallController().getEntities();\r\n            if (removedPlayers[i].sprite) {\r\n                this.stage.removeChild(removedPlayers[i].sprite);\r\n                removedPlayers[i].sprite.destroy();\r\n            }\r\n            for (let j = removedBalls.length; j--;) {\r\n                if (removedBalls[j].sprite) {\r\n                    this.stage.removeChild(removedBalls[j].sprite);\r\n                    removedBalls[j].sprite.destroy();\r\n                }\r\n            }\r\n            if (removedPlayers[i].spriteRing) {\r\n                this.stage.removeChild(removedPlayers[i].spriteRing);\r\n                removedPlayers[i].spriteRing.destroy();\r\n            }\r\n            if (removedPlayers[i].spriteDash) {\r\n                this.stage.removeChild(removedPlayers[i].spriteDash);\r\n                removedPlayers[i].spriteDash.destroy();\r\n            }\r\n            if (removedPlayers[i].graphics) {\r\n                this.stage.removeChild(removedPlayers[i].graphics);\r\n                removedPlayers[i].graphics.destroy(true);\r\n            }\r\n            if (removedPlayers[i].text) {\r\n                this.hud.container.removeChild(removedPlayers[i].text);\r\n                removedPlayers[i].text.destroy(true);\r\n            }\r\n        }\r\n        for (let i = removedFoods.length; i--;) {\r\n            if (removedFoods[i].sprite) {\r\n                this.stage.removeChild(removedFoods[i].sprite);\r\n                removedFoods[i].sprite.destroy();\r\n            }\r\n        }\r\n        for (let i = removedShoots.length; i--;) {\r\n            if (removedShoots[i].sprite) {\r\n                this.stage.removeChild(removedShoots[i].sprite);\r\n                removedShoots[i].sprite.destroy();\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/canvas/canvas.js","//temporary\r\nconst Fps = require('../../../shared/fps'),\r\n    cfg = require('../../../shared/config');\r\n\r\n\r\nexport default class Hud {\r\n    constructor(cv) {\r\n        this.cv = cv;\r\n        this.canvas = cv.canvas;\r\n    }\r\n    \r\n    preloadHud() {\r\n        //we don't apply scale on HUD (but we do on stage): no blur\r\n        this.container = new PIXI.Container();\r\n\r\n        //Board\r\n        // const board = document.getElementById('boardDiv');\r\n        // const leaderboard = document.getElementById('leaderboard');\r\n        const num = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'];\r\n        this.entries = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            this.entries.push(document.getElementById(num[i]));\r\n        }\r\n        \r\n        //FPS\r\n        this.fps = new Fps();\r\n        this.fpsText = new PIXI.Text('', cfg.textOpt);\r\n        this.container.addChild(this.fpsText);\r\n        setInterval(() => {\r\n            this.fpsText.text = 'Fps: ' + this.fps.getFps();\r\n        }, 1000);\r\n        \r\n        //Mass\r\n        this.score = new PIXI.Text('', cfg.textOpt);\r\n        this.container.addChild(this.score);\r\n        \r\n        //x, y\r\n        this.x = new PIXI.Text('', cfg.textOpt);\r\n        this.container.addChild(this.x);\r\n        this.y = new PIXI.Text('', cfg.textOpt);\r\n        this.container.addChild(this.y);\r\n        \r\n        //Minimap\r\n        this.minimap = new PIXI.Graphics();\r\n        this.container.addChild(this.minimap);\r\n        this.miniself = new PIXI.Graphics();\r\n        this.container.addChild(this.miniself);\r\n        \r\n        this.container.visible = false;\r\n    }\r\n\r\n    //DOM\r\n    drawBoard(board) {\r\n        const len = board.length;\r\n        for (let i = 0; i < len; i++) {\r\n            this.entries[i].textContent = (i + 1) + '. ' + board[i];\r\n        }\r\n        \r\n        if (len < 10) {\r\n            for (let i = len; i < 10; i++) {\r\n                this.entries[i].textContent = '';\r\n            }\r\n        }\r\n    }\r\n    \r\n    drawHud(selfState) {\r\n        //Mass if modif\r\n        if (this.score.text !== 'Mass : ' + selfState.mass) {\r\n            this.score.text = 'Mass : ' + selfState.mass;\r\n        }\r\n        //x,y\r\n        this.x.text = 'x: ' + Math.round(selfState.x);\r\n        this.y.text = 'y: ' + Math.round(selfState.y);\r\n        \r\n        //minimap\r\n        const miniX = this.canvas.width + (selfState.x * cfg.minimapRad / cfg.midLimitRad - 60) * this.cv.cam.scale;\r\n        const miniY = this.canvas.height + (selfState.y * cfg.minimapRad / cfg.midLimitRad - 60) * this.cv.cam.scale;\r\n        this.miniself.clear();\r\n        this.miniself.beginFill(0x000000, 0.5);\r\n        this.miniself.drawCircle(miniX, miniY, cfg.miniselfRad * this.cv.cam.scale);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./client/js/canvas/hud.js","const cfg = require('../../../shared/config');\r\n\r\n\r\nexport default class Textures {\r\n    constructor(cv) {\r\n        this.cv = cv;\r\n    }\r\n    \r\n    /**\r\n     * Pixi uses Texture cache to store and reference all the textures needed.\r\n     * Texture = WebGL format of an image, to be processed by the GPU.\r\n     * @return {[type]} [description]\r\n     */\r\n    preloadTextures() {\r\n        this.loader = new PIXI.loaders.Loader();\r\n        this.loader\r\n            // Chainable `add` to enqueue a resource\r\n            .add(\"ringTxt\", cfg.ringImg)\r\n            .add(\"mapTxt\", cfg.mapImg)\r\n            .add(\"bgTxt\", cfg.bgImg)\r\n            .add(\"foodTxt\", cfg.foodImg)\r\n            .add(cfg.playerSet)\r\n            .add(cfg.fireballSet)\r\n\r\n            .on(\"progress\", this.onAssetsLoading.bind(this))\r\n            .once(\"complete\", this.onAssetsLoaded.bind(this))\r\n            // The `load` method loads the queue of resources, and calls the\r\n            // passed in callback called once all resources have loaded.\r\n            .load();\r\n\r\n        //.reset()\r\n        //PIXI.TextureCache['assets/images/hud/hud_bench.png'].destroy(true);\r\n\r\n        //mid limit\r\n        const canMid = this.createBorderTexture(cfg.midLimitRad, cfg.midLimitStroke, cfg.midLimitOffset);\r\n        this.midLimitTxt = new PIXI.Texture.fromCanvas(canMid);\r\n        //end limit\r\n        const canEnd = this.createBorderTexture(cfg.endLimitRad, cfg.endLimitStroke, cfg.endLimitOffset);\r\n        this.endLimitTxt = new PIXI.Texture.fromCanvas(canEnd);\r\n\r\n        // this.foodTxtList = {};\r\n        // for (let i = 0; i < cfg.foodMasses.length; i++) {\r\n        //     const canFood = this.createFoodTexture(cfg.foodMasses[i]);\r\n        //     this.foodTxtList[cfg.foodMasses[i]] = new PIXI.Texture.fromCanvas(canFood);\r\n        // }\r\n\r\n        //TODO: dash color for each skin\r\n        this.dashTxtList = [];\r\n        for (let i = 0; i < cfg.dashTxtSize; i++) {\r\n            const b = {\r\n                x: 25,\r\n                y: 25,\r\n                rad: 25,\r\n                r: 252,\r\n                g: 233,\r\n                b: 102,\r\n            };\r\n            const canDash = this.createDashTexture(i, b);\r\n            this.dashTxtList.push(new PIXI.Texture.fromCanvas(canDash));\r\n        }\r\n        //dash textures: a-b-c-d-c-b\r\n        //or play and rewind\r\n        const rewind = this.dashTxtList.slice(1, -1);\r\n        this.dashTxtList = this.dashTxtList.concat(rewind.reverse());\r\n    }\r\n\r\n    onAssetsLoading(loader, loadedResource) {\r\n        console.log('Progress:', loader.progress + '%');\r\n    }\r\n\r\n    /**\r\n     * use aliases\r\n     * @return {void}\r\n     */\r\n    onAssetsLoaded() {\r\n        const resources = this.loader.resources;\r\n        // this.playerImgL.baseTexture.mipmap = false;\r\n        // this.playerImgR.baseTexture.mipmap = false;\r\n        // this.loader.resources.ringTxt.destroy(true);\r\n        // PIXI.TextureCache['/client/img/bullet.png'].destroy(true);\r\n        this.ringTxt = resources.ringTxt.texture;\r\n        this.mapTxt = resources.mapTxt.texture;\r\n        this.bgTxt = resources.bgTxt.texture;\r\n        this.foodTxt = resources.foodTxt.texture;\r\n        // console.log(PIXI.loader.resources);\r\n        this.playerTxtList = [];\r\n        // for (let i = 0; i < 3; i++) {\r\n        //     this.playerTxtList.push(PIXI.Texture.fromFrame('flappy' + i + '.png'));\r\n        for (let i = 1; i < 5; i++) {\r\n            this.playerTxtList.push(PIXI.Texture.fromFrame('frame-' + i + '.png'));\r\n        }\r\n\r\n        this.fireballTxtList = [];\r\n        for (let i = 0; i < 6; i++) {\r\n            this.fireballTxtList.push(PIXI.Texture.fromFrame('fireball' + i + '.png'));\r\n        }\r\n        //Create a rectangle object that defines the position and\r\n        //size of the sub-image you want to extract from the texture\r\n        // const rectangle = new Rectangle(0, 0, 512, 512);\r\n        //\r\n        // const txt = resources.fireballTxtSet;\r\n        // //Tell the texture to use that rectangular section\r\n        // txt.frame = rectangle;\r\n        // this.ballTxtList.push(new PIXI)\r\n\r\n        this.cv.onTexturesLoaded();\r\n    }\r\n\r\n    /**\r\n     * mid and end limit\r\n     * @param  {float} limitRad    radius\r\n     * @param  {float} limitStroke thickness\r\n     * @param  {float} limitOffset negative position of the center\r\n     * @return {canvas}            90 degrees circle of radius =\r\n     *                                limitRad + limitStroke thickness\r\n     */\r\n    createBorderTexture(limitRad, limitStroke, limitOffset) {\r\n        //can we decrease width/height according to scale ?\r\n        const canSize = limitRad + limitStroke - limitOffset;\r\n        const can = this.createCanvas(canSize, canSize);\r\n        const ctx = can.getContext('2d');\r\n        if (cfg.debugBorder) {\r\n            ctx.strokeStyle = 'rgba(250, 255, 0, 0.7)';\r\n            ctx.lineWidth = 5;\r\n            ctx.strokeRect(0, 0, canSize, canSize);\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(-limitOffset, -limitOffset, limitRad + limitStroke / 2, 0, Math.PI / 2); //radius + lineWidth/2\r\n        ctx.lineWidth = limitStroke;\r\n        ctx.strokeStyle = 'rgba(255, 0, 0, 0.7)';\r\n        ctx.stroke();\r\n        return can;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param  {int} mass food mass\r\n     * @return {canvas}     lighter canvas of a food\r\n     */\r\n    createFoodTexture(mass) {\r\n        //TODO: food color\r\n        const size = cfg.foodInitSize + mass * cfg.foodFactor;\r\n        const can = this.createCanvas(size, size);\r\n        const ctx = can.getContext('2d');\r\n        ctx.globalCompositeOperation = \"lighter\";\r\n        if (cfg.debugFood) {\r\n            ctx.strokeStyle = 'rgba(250, 255, 0, 0.7)';\r\n            ctx.lineWidth = 5;\r\n            ctx.strokeRect(0, 0, size, size);\r\n        }\r\n        ctx.beginPath();\r\n        const b = {\r\n            x: size / 2,\r\n            y: size / 2,\r\n            rad: size / 2,\r\n        };\r\n        let gradblur = ctx.createRadialGradient(b.x, b.y, 0, b.x, b.y, b.rad);\r\n        //REVIEW: food texture: circle ? ring ?\r\n        // let edgecolor1 = \"rgba(255, 255, 255, 0.0)\"; // + (0.9 + mass * 0.03) + \")\";\r\n        let edgecolor1 = \"rgba(255, 255, 255, 0.4)\";\r\n        gradblur.addColorStop(0, edgecolor1);\r\n        // gradblur.addColorStop(0.2, edgecolor2);\r\n        gradblur.addColorStop(0.6, edgecolor1);\r\n        // gradblur.addColorStop(0.95, edgecolor2);\r\n        ctx.fillStyle = gradblur;\r\n        ctx.arc(b.x, b.y, b.rad, 0, Math.PI * 2, false);\r\n        ctx.fill();\r\n        \r\n        gradblur = ctx.createRadialGradient(b.x, b.y, 0, b.x, b.y, b.rad);\r\n        //REVIEW: food texture: circle ? ring ?\r\n        edgecolor1 = \"rgba(255, 255, 255, 0.4)\"; // + (0.9 + mass * 0.03) + \")\";\r\n        const edgecolor2 = \"rgba(255, 255, 255, 0.0)\";\r\n        gradblur.addColorStop(0, edgecolor2);\r\n        // gradblur.addColorStop(0.2, edgecolor2);\r\n        gradblur.addColorStop(0.6, edgecolor2);\r\n        gradblur.addColorStop(0.6, edgecolor1);\r\n        // gradblur.addColorStop(0.9, edgecolor2);\r\n        gradblur.addColorStop(1, edgecolor2);\r\n        ctx.fillStyle = gradblur;\r\n        ctx.arc(b.x, b.y, b.rad, 0, Math.PI * 2, false);\r\n        ctx.fill();\r\n        \r\n        // ctx.fillStyle = \"rgba(255, 255, 255, 0.4)\";\r\n        // ctx.beginPath();\r\n        // ctx.arc(b.x, b.y, b.rad - 4 - mass / 2, 0, Math.PI * 2, false);\r\n        // ctx.fill();\r\n        // ctx.strokeStyle = \"rgba(255, 255, 255, 0.8)\";\r\n        // ctx.lineWidth = 2;\r\n        ctx.fill();\r\n        // ctx.beginPath();\r\n        // ctx.arc(b.x, b.y, b.rad - 10 - mass / 2, 0, Math.PI * 2, false);\r\n        // ctx.stroke();\r\n        // ctx.arc(b.x, b.y, b.rad - 13 - mass / 2, 0, Math.PI * 2, false);\r\n        // ctx.stroke();\r\n        // ctx.arc(b.x, b.y, b.rad - 22 - mass / 2, 0, Math.PI * 2, false);\r\n        // ctx.stroke();\r\n\r\n        // ctx.strokeStyle = \"rgba(\" + b.r + \",\" + b.g + \",\" + b.b + \",0.9)\";\r\n        // ctx.lineWidth = 3;\r\n        // ctx.strokeRect(0, 0, can.width, can.height);\r\n        return can;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param  {int} i sample #i\r\n     * @param  {ball} b circle object\r\n     * @return {canvas}   lighter canvas for dash #i\r\n     */\r\n    createDashTexture(i, b) {\r\n        const can = this.createCanvas(b.rad * 2, b.rad * 2);\r\n        const ctx = can.getContext('2d');\r\n        ctx.globalCompositeOperation = \"lighter\";\r\n        ctx.beginPath();\r\n        const gradblur = ctx.createRadialGradient(b.x, b.y, 0, b.x, b.y, b.rad);\r\n\r\n        const edgecolor1 = \"rgba(\" + b.r + \",\" + b.g + \",\" + b.b + \",\" + (0.6) + \")\";\r\n        const edgecolor2 = \"rgba(\" + b.r + \",\" + b.g + \",\" + b.b + \",0.0)\";\r\n        gradblur.addColorStop(0, edgecolor1);\r\n        gradblur.addColorStop(0.7 + i * 0.05, edgecolor2);\r\n        ctx.fillStyle = gradblur;\r\n        ctx.arc(b.x, b.y, b.rad, 0, Math.PI * 2, false);\r\n        for (let j = -3; j < i; j++) {\r\n            ctx.fill();\r\n        }\r\n        return can;\r\n    }\r\n\r\n    createCanvas(width, height) {\r\n        const can = document.createElement(\"canvas\");\r\n        can.width = width;\r\n        can.height = height;\r\n        return can;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/canvas/textures.js","var Debug = require('./others/debug'),\r\n    Chat = require('./others/chat'),\r\n    cfg = require('../../../shared/config'),\r\n    Sender = require('./socket/sender'),\r\n    Receiver = require('./socket/receiver'),\r\n    StateController = require('./controllers/statecontroller');\r\n\r\nexports = module.exports = Client;\r\n\r\nfunction Client(socket) {\r\n    if (cfg.debug) {\r\n        new Chat(socket);\r\n    }\r\n\r\n    this.socket = socket;\r\n    this.stateController = new StateController();\r\n\r\n    this.selfId = -1;\r\n    this.inTransition = false;\r\n\r\n    Receiver.call(this);\r\n    Sender.call(this);\r\n}\r\n\r\n\r\nClient.prototype = _.extend(Object.create(Sender.prototype), Object.create(Receiver.prototype), {\r\n    onDisconnect: function() {\r\n        this.stateController.clearEntities();\r\n        this.socket.close();\r\n        console.log(\"Disconnected\");\r\n    },\r\n\r\n    //Setters\r\n    setInTransition: function(isInTransition) {\r\n        this.inTransition = isInTransition;\r\n    },\r\n\r\n    //Getters\r\n    getStateController: function() {\r\n        return this.stateController;\r\n    },\r\n\r\n    /**\r\n     * if not in game: -1\r\n     * else: >= 0\r\n     * @return {int} id\r\n     */\r\n    getSelfId: function() {\r\n        return this.selfId;\r\n    },\r\n\r\n    /**\r\n     * if received Clear: true\r\n     * else: false\r\n     * @return {Boolean}\r\n     */\r\n    isInTransition: function() {\r\n        return this.inTransition;\r\n    },\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/client.js","var EntityController = require('./entitycontroller'),\r\n    Ball = require('./entities/ball');\r\n\r\nexports = module.exports = BallController;\r\n\r\nfunction BallController(referrerId, ballAngle, ballStartTime) {\r\n    EntityController.call(this);\r\n\r\n    this.nextId = 1;\r\n    this.referrerId = referrerId;\r\n    this.ballAngle = ballAngle;\r\n    this.ballLastTime = ballStartTime;\r\n}\r\n\r\nBallController.prototype = _.extend(Object.create(EntityController.prototype), {\r\n    add: function(referrerState) {\r\n        var newBall = new Ball(this.nextId++, this.referrerId, referrerState);\r\n        this.entities.push(newBall);\r\n\r\n        return newBall;\r\n    },\r\n\r\n    getBallAngle: function() {\r\n        return this.ballAngle;\r\n    },\r\n\r\n    getBallLastTime: function() {\r\n        return this.ballLastTime;\r\n    },\r\n\r\n    setBallAngle: function(ballAngle) {\r\n        this.ballAngle = ballAngle;\r\n    },\r\n\r\n    setBallLastTime: function(ballLastTime) {\r\n        this.ballLastTime = ballLastTime;\r\n    },\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/ballcontroller.js","var Entity = require('./entity'),\r\n    ic = require('../../../../../shared/initCore');\r\n\r\nexports = module.exports = Ball;\r\n\r\nfunction Ball(id, referrerId, referrerState) {\r\n    Entity.call(this, id);\r\n    this.referrerId = referrerId; //not needed to broadcast and update\r\n    this.state = ic.getInitBallState(referrerState, 0, 0);\r\n}\r\n\r\nBall.prototype = _.extend(Object.create(Entity.prototype), {\r\n    //broadcast\r\n    // getBallState: function() {\r\n    //     //TODO: if not changed!\r\n    //     return {\r\n    //         mass: this.state.mass,\r\n    //         angle: this.stage.angle,\r\n    //     };\r\n    // },\r\n\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/entities/ball.js","var Entity = require('./entity');\r\n\r\nexports = module.exports = Food;\r\n\r\n/**\r\n * Food entity, state:\r\n * xReal, yReal: hitbox,\r\n * x, y: random position,\r\n * vr - random circular speed: Math.random()\r\n * angle 0: random circular direction\r\n * movingTime 0: limit time of moving (when eating)\r\n *\r\n * @param {int} id\r\n */\r\nfunction Food(id, mass) {\r\n    Entity.call(this, id);\r\n    this.state.movingTime = 0;\r\n    this.mass = mass;\r\n}\r\n\r\nFood.prototype = Object.create(Entity.prototype);\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/entities/food.js","var Entity = require('./entity'),\r\n    BallController = require('../ballcontroller'),\r\n    Update = require('./../update'),\r\n    cfg = require('../../../../../shared/config');\r\n\r\n\r\nexports = module.exports = Player;\r\n\r\n/**\r\n * name\r\n * state {x, y, vx, vy, mass, ring, dashing}\r\n *\r\n * @param {int} id\r\n * @param {string} name\r\n */\r\nfunction Player(id, name, ballAngle, ballStartTime) {\r\n    Entity.call(this, id);\r\n    this.name = name;\r\n    // this.inputController = 1;\r\n    this.ballController = new BallController(id, ballAngle, ballStartTime);\r\n}\r\n\r\nPlayer.prototype = _.extend(Object.create(Entity.prototype), {\r\n    /**\r\n     * if first update: player.state = new state\r\n     * else: use last update to have a complete new state\r\n     *\r\n     * add update from updatePs msg\r\n     * remove the first update if full\r\n     * this buffer length allows to handle lags.\r\n     *\r\n     * @param {object} state : new state\r\n     * @param {time} time\r\n     */\r\n    addUpdate: function(state, time) {\r\n        var newState = state;\r\n        if (this.updates.length === 0) {\r\n            this.state = state;\r\n        } else {\r\n            var preState = this.updates[this.updates.length - 1].state;\r\n            if (state.x === undefined) {\r\n                newState.x = preState.x;\r\n            }\r\n            if (state.y === undefined) {\r\n                newState.y = preState.y;\r\n            }\r\n            if (state.vx === undefined) {\r\n                newState.vx = preState.vx;\r\n            }\r\n            if (state.vy === undefined) {\r\n                newState.vy = preState.vy;\r\n            }\r\n            if (state.ring === undefined) {\r\n                newState.ring = preState.ring;\r\n            }\r\n            if (state.mass === undefined) {\r\n                newState.mass = preState.mass;\r\n            }\r\n            if (state.dashing === undefined) {\r\n                newState.dashing = preState.dashing;\r\n            }\r\n        }\r\n\r\n        var newUpdate = new Update(newState, time);\r\n        this.updates.push(newUpdate);\r\n        if (this.updates.length > cfg.clientMaxUpdateBuffer) {\r\n            this.updates.splice(0, 1);\r\n        }\r\n    },\r\n\r\n    getBallController: function() {\r\n        return this.ballController;\r\n    },\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/entities/player.js","var Entity = require('./entity');\r\n\r\nexports = module.exports = Shoot;\r\n\r\nfunction Shoot(id) {\r\n    Entity.call(this, id);\r\n}\r\n\r\nShoot.prototype = Object.create(Entity.prototype);\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/entities/shoot.js","var EntityController = require('./entitycontroller'),\r\n    Food = require('./entities/food');\r\n\r\nexports = module.exports = FoodController;\r\n\r\nfunction FoodController() {\r\n    EntityController.call(this);\r\n}\r\n\r\nFoodController.prototype = _.extend(EntityController.prototype, {\r\n    add: function(id, mass) {\r\n        // REVIEW: check how did I handle double food\r\n        // if (lot.idxOf(this.entities, 'id', id) > -1) {\r\n        //     console.log(\"Double food\");\r\n        // }\r\n        var food = new Food(id, mass);\r\n        this.entities.push(food);\r\n        return food;\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/foodcontroller.js","var EntityController = require('./entitycontroller'),\r\n    Player = require('./entities/player');\r\n\r\nexports = module.exports = PlayerController;\r\n\r\nfunction PlayerController() {\r\n    EntityController.call(this);\r\n    this.board = [];\r\n    this.updatedBoard = false;\r\n}\r\n\r\nPlayerController.prototype = _.extend(Object.create(EntityController.prototype), {\r\n    /**\r\n     * add player from updatePs msg\r\n     * @param {int} id\r\n     * @param {string} name\r\n     */\r\n    add: function(id, name, ballAngle, ballStartTime) {\r\n        var player = new Player(id, name, ballAngle, ballStartTime);\r\n        this.entities.push(player);\r\n        return player;\r\n    },\r\n\r\n    //Setters\r\n    setBoard: function(board) {\r\n        this.board = board;\r\n    },\r\n\r\n    setUpdatedBoard: function(updatedBoard) {\r\n        this.updatedBoard = updatedBoard;\r\n    },\r\n\r\n    //Getters\r\n    getBoard: function() {\r\n        return this.board;\r\n    },\r\n\r\n    isUpdatedBoard: function() {\r\n        return this.updatedBoard;\r\n    },\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/playercontroller.js","var EntityController = require('./entitycontroller'),\r\n    Shoot = require('./entities/shoot');\r\n\r\nexports = module.exports = ShootController;\r\n\r\nfunction ShootController() {\r\n    EntityController.call(this);\r\n}\r\nShootController.prototype = Object.create(EntityController.prototype);\r\nShootController.prototype.add = function(id) {\r\n    var shoot = new Shoot(id);\r\n    this.entities.push(shoot);\r\n    return shoot;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/shootcontroller.js","var cfg = require('../../../../shared/config'),\r\n    lot = require('../../../../shared/lot'),\r\n    GamePhysics = require('../../../../shared/core'),\r\n    Update = require('./update'),\r\n    PlayerController = require('./playercontroller'),\r\n    FoodController = require('./foodcontroller'),\r\n    ShootController = require('./shootcontroller');\r\n\r\nexports = module.exports = StateController;\r\n\r\nfunction StateController() {\r\n    this.serverTime = 0;\r\n    this.interpolationTime = cfg.clientInterpolationTime;\r\n    this.rendered = 0;\r\n    this.lastRenderTime = 0;\r\n    this.rendering = false;\r\n\r\n    this.smoothingFactor = cfg.clientSmoothingFactor;\r\n\r\n    this.playerController = new PlayerController();\r\n    this.foodController = new FoodController();\r\n    this.shootController = new ShootController();\r\n\r\n    if (cfg.debug) {\r\n        this.debug = new Debug();\r\n    }\r\n    this.lagCompensation = cfg.serverLagCompensation;\r\n}\r\nStateController.prototype = {\r\n    /**\r\n     * TODO: reset leaderboard\r\n     * onDisconnect: just clear\r\n     * @return {void}\r\n     */\r\n    clearEntities: function() {\r\n        console.log(\"removing\");\r\n        this.playerController.clearEntities();\r\n        this.foodController.clearEntities();\r\n        this.shootController.clearEntities();\r\n    },\r\n\r\n    /**\r\n     * update all the player states if they have at least one Update\r\n     * @return {void}\r\n     */\r\n    updatePlayerStates: function() {\r\n        var entities = this.playerController.getEntities();\r\n        for (var i = entities.length; i--;) {\r\n            var entity = entities[i];\r\n            if (entity.getUpdates().length) {\r\n                this.updatePlayerState(entity);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * update one player: interpolation of player updates\r\n     * for a new player, no lerp till lerpTime\r\n     * after lerpTime,\r\n     *\r\n     * @param  {Player} entity\r\n     * @return {void}\r\n     */\r\n    updatePlayerState: function(entity) {\r\n\r\n\r\n        // var lastDeltaTime = (entity.updates[entity.updates.length - 1].time - entity.updates[entity.updates.length - 2].time);\r\n\r\n        var now = new Date();\r\n        var rendered = 0;\r\n        if (this.rendering) {\r\n            rendered = this.rendered + (now - this.lastRenderTime);\r\n        }\r\n        // console.log(rendered);\r\n        this.rendered = rendered;\r\n        this.lastRenderTime = now;\r\n        var renderTime = this.getRenderTime(rendered);\r\n\r\n        var pos, interpolationFactor, newState,\r\n            pos = entity.getInterpolatedUpdates(renderTime);\r\n\r\n        // OPTI: jittering solution?\r\n        if (!pos.previous && entity.isVisible()) {\r\n            console.log(\"Jittering\");\r\n            // this.rendered = 0;\r\n            // this.rendering = false;\r\n            // newState = GamePhysics.getExtrapolatedPlayerState(entity.updates[entity.updates.length - 1], renderTime - entity.updates[entity.updates.length - 1].time);\r\n            // entity.setState(newState);\r\n        }\r\n        if (pos.previous && pos.target) {\r\n            interpolationFactor = this.getInterpolatedValue(pos.previous.time, pos.target.time, renderTime);\r\n            // console.log(pos.previous.ballStartTime);\r\n            // console.log(pos.previous.state.ballStartTime);\r\n            // console.log(pos.previous.state.ballAngle);\r\n            newState = GamePhysics.getInterpolatedEntityState(pos.previous.state, pos.target.state, interpolationFactor);\r\n            // newState = GamePhysics.getInterpolatedEntityState(entity.state, newState, this.smoothingFactor);\r\n            entity.setState(newState);\r\n\r\n            this.predictBallStates(entity, renderTime);\r\n\r\n            //only if interpolated\r\n            this.rendering = true;\r\n            // this.rendered = rendered;\r\n\r\n            //entities can be drawed after the first state interpolation\r\n            // if (!entity.isVisible()) {\r\n            //     entity.setVisible(true);\r\n            // }\r\n        } else {\r\n            //remove after interpolationTime\r\n            if (entity.isToRemove()) {\r\n                this.playerController.removeEntity(entity);\r\n            }\r\n        }\r\n    },\r\n\r\n    getInterpolatedValue: function(previousTime, targetTime, renderTime) {\r\n        var range = targetTime - previousTime,\r\n            difference = renderTime - previousTime;\r\n        var ratio = difference / range;\r\n        if (ratio > 1) ratio = 1;\r\n        // console.log(ratio);\r\n        // ratio = 1;\r\n        var value = parseFloat(ratio.toFixed(3));\r\n        // console.log((difference / range));\r\n        return value;\r\n    },\r\n\r\n    getRenderTime: function(rendered) {\r\n        // var renderTime = this.serverTime - interpolationTime + this.elapsedLastUpdate;\r\n        // console.log(-interpolationTime + this.elapsedLastUpdate);\r\n        var renderTime = this.serverTime - this.interpolationTime + rendered;\r\n        // console.log(this.rendered);\r\n        return renderTime;\r\n    },\r\n\r\n    /**\r\n     * client render in the past to have at least 2 known position during the interpolationTime\r\n     * @param {time} serverTime\r\n     */\r\n    setServerTime: function(serverTime) {\r\n        this.serverTime = serverTime;\r\n    },\r\n\r\n    //only for client rendering\r\n    setElapsedLastUpdate: function(deltaTime) {\r\n        // console.log(now - this.lastUpdateTime);\r\n        if (!this.serverTime) return;\r\n        this.elapsedLastUpdate += deltaTime;\r\n        // console.log(this.elapsedLastUpdate);\r\n        // this.lastUpdateTime = now;\r\n        // console.log(this.elapsedLastUpdate);\r\n    },\r\n\r\n    predictBallStates: function(player, renderTime) {\r\n        var ballController = player.getBallController();\r\n        var deltaTime = (renderTime - ballController.getBallLastTime()) / 1000.0;\r\n        ballController.setBallLastTime(renderTime);\r\n\r\n        var oldAngle = ballController.getBallAngle();\r\n        var newAngle = GamePhysics.getNewBallAngle(oldAngle, deltaTime);\r\n        ballController.setBallAngle(newAngle);\r\n\r\n        GamePhysics.checkNewBalls(player);\r\n        var balls = ballController.getEntities();\r\n        for (var i = 0; i < balls.length; i++) {\r\n            var ball = balls[i];\r\n            // console.log(i + \":\" + ball.state.angle);\r\n\r\n            var newState = GamePhysics.getNewBallState(player.state, ball.state, newAngle, i);\r\n            ball.setState(newState);\r\n        }\r\n    },\r\n\r\n    predictShootStates: function(deltaTime) {\r\n        var entities = this.shootController.getEntities();\r\n        for (var i = entities.length; i--;) {\r\n            var shoot = entities[i];\r\n            var newState = GamePhysics.getNewShootState(shoot, deltaTime);\r\n            if (newState) {\r\n                shoot.setState(newState);\r\n            } else {\r\n                this.shootController.removeEntity(shoot);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * predict food state: random or eating\r\n     * remove if eaten\r\n     * @param  {time} deltaTime rendering\r\n     * @return {void}\r\n     */\r\n    predictFoodStates: function(deltaTime) {\r\n        var entities = this.foodController.getEntities();\r\n        for (var i = entities.length; i--;) {\r\n            var food = entities[i];\r\n            var newState = GamePhysics.getNewFoodState(food, deltaTime);\r\n            if (newState) {\r\n                food.setState(newState);\r\n            } else {\r\n                this.foodController.removeEntity(food);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * if player new: add player(id, name)\r\n     * else: add update(state, time) to player from id\r\n     *\r\n     * @param {time} time     serverTs\r\n     * @param {list} updatePs array of array: players to update\r\n     */\r\n    addPlayerUpdates: function(time, updatePs) {\r\n        for (var i = updatePs.length; i--;) {\r\n            var playerState = updatePs[i],\r\n                player;\r\n\r\n            var id = playerState[0],\r\n                state = playerState[1];\r\n\r\n            var j = lot.idxOf(this.playerController.getEntities(), 'id', id);\r\n            if (j >= 0) {\r\n                player = this.playerController.getEntities()[j];\r\n            } else {\r\n                var name = playerState[2],\r\n                    ballAngle = playerState[3];\r\n                player = this.playerController.add(id, name, ballAngle, time);\r\n            }\r\n            player.addUpdate(state, time);\r\n        }\r\n        var entities = this.playerController.getEntities();\r\n    },\r\n\r\n    updateShootStates: function(entitiesToAdd) {\r\n        for (var i = entitiesToAdd.length; i--;) {\r\n            var entityToAdd = entitiesToAdd[i];\r\n\r\n            var newEntity = this.shootController.add(entityToAdd[0]);\r\n            newEntity.setState(entityToAdd[1]);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * add an Food after lerp\r\n     * @param  {list} entitiesToAdd : all foods to init\r\n     * @return {void}\r\n     */\r\n    updateFoodInitStates: function(entitiesToAdd) {\r\n        // console.log();\r\n        for (var i = entitiesToAdd.length; i--;) {\r\n            var entityToAdd = entitiesToAdd[i];\r\n            var newEntity = this.foodController.add(entityToAdd[0], entityToAdd[2]);\r\n            newEntity.setState(entityToAdd[1]);\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  remove players after lerpTime\r\n     * @param  {list} dataRemove : all players to be removed\r\n     * @return {void}\r\n     */\r\n    updatePlayerRemoveStates: function(dataRemove) {\r\n        this.updateEntityRemoveStates(dataRemove, this.playerController);\r\n    },\r\n\r\n    /**\r\n     *  remove outscope foods after lerpTime\r\n     * @param  {list} dataRemove : all foods to be removed\r\n     * @return {void}\r\n     */\r\n    updateFoodRemoveStates: function(dataRemove) {\r\n        this.updateEntityRemoveStates(dataRemove, this.foodController);\r\n    },\r\n\r\n    /**\r\n     * remove players/foods after lerpTime\r\n     * @param  {list} dataRemove id to remove\r\n     * @param  {Controller} controller\r\n     * @return {void}\r\n     */\r\n    updateEntityRemoveStates: function(dataRemove, controller) {\r\n        var self = this;\r\n\r\n        for (var i = dataRemove.length; i--;) {\r\n            (function() {\r\n                var entityId = dataRemove[i];\r\n                setTimeout(function() {\r\n                    var entities = controller.getEntities();\r\n                    var idx = lot.idxOf(entities, 'id', entityId);\r\n                    if (idx >= 0) {\r\n                        controller.remove(idx);\r\n                    }\r\n                }, self.interpolationTime);\r\n            })();\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  add a referrer (player) to each food after lerpTime\r\n     * @param  {list} dataEat : all foods to be eaten by referrerId\r\n     * @return {void}\r\n     */\r\n    updateFoodEatStates: function(dataEat) {\r\n        var self = this;\r\n\r\n        for (var i = dataEat.length; i--;) {\r\n            (function() {\r\n                var foodId = dataEat[i][0],\r\n                    referrerId = dataEat[i][1];\r\n                setTimeout(function() {\r\n                    var foods = self.foodController.getEntities();\r\n                    //optional check\r\n                    var idx = lot.idxOf(foods, 'id', foodId);\r\n                    if (idx >= 0) {\r\n                        var food = foods[idx];\r\n                        var players = self.playerController.getEntities();\r\n                        var idxPlayer = lot.idxOf(players, 'id', referrerId);\r\n                        if (idxPlayer >= 0) {\r\n                            var player = players[idxPlayer];\r\n                            food.referrer = player;\r\n                        }\r\n                    }\r\n                }, self.interpolationTime);\r\n            })();\r\n        }\r\n    },\r\n\r\n    updateBoard: function(data) {\r\n        if (data.length) {\r\n            this.playerController.setBoard(data);\r\n            this.playerController.setUpdatedBoard(true);\r\n        }\r\n    },\r\n\r\n    //Remove\r\n\r\n\r\n\r\n    //Getters\r\n    getPlayerController: function() {\r\n        return this.playerController;\r\n    },\r\n\r\n    getFoodController: function() {\r\n        return this.foodController;\r\n    },\r\n\r\n    getShootController: function() {\r\n        return this.shootController;\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/controllers/statecontroller.js","exports = module.exports = Chat;\n\nfunction Chat(socket) {\n    var chatText = document.getElementById(\"chat-text\");\n    var chatInput = document.getElementById(\"chat-input\");\n    var chatForm = document.getElementById(\"chat-form\");\n\n    socket.on('addToChat', function(data) {\n        chatText.innerHTML += '<div>' + data + '</div>';\n    });\n    socket.on('evalAnswer', function(data) {\n        console.log(data);\n    });\n\n    chatForm.onsubmit = function(e) {\n        e.preventDefault();\n        if (chatInput.value[0] === '/') {\n            //on envoie la commande sans le '/'\n            socket.emit('evalServer', chatInput.value.slice(1));\n        } else {\n            socket.emit('sendMsgToServer', chatInput.value);\n        }\n        chatInput.value = '';\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/others/chat.js","exports = module.exports = Debug;\r\n\r\nfunction Debug() {\r\n    debugDiv.style.display = 'inline-block';\r\n\r\n    // Simulated lag between client and server.\r\n    this.serverPhysicsInterval = null;\r\n    this.serverStateInterval = null;\r\n    this.lagCompensation = null;\r\n    this.interpolation = null;\r\n    this.interpolationTime = null;\r\n\r\n    var player_status = document.getElementById(\"player_status\");\r\n    var _lagCompensation = document.getElementById(\"lag\");\r\n    var _serverPhysicsInterval = document.getElementById(\"serverPhysicsInterval\");\r\n    var _serverStateInterval = document.getElementById(\"serverStateInterval\");\r\n    var _interpolation = document.getElementById(\"interpolation\");\r\n    var _interpolationTime = document.getElementById('interpolationTime');\r\n\r\n    _serverPhysicsInterval.value = cfg.serverPhysicsInterval;\r\n    _serverStateInterval.value = cfg.serverStateInterval;\r\n    _lagCompensation.value = cfg.serverLagCompensation;\r\n    _interpolation.checked = cfg.interpolation;\r\n    _interpolationTime.value = cfg.interpolationTime;\r\n\r\n    // Update simulation parameters from UI.\r\n    var updateParamFromUI = function() {\r\n        this.lagCompensation = updateNumberFromUI(this.lagCompensation, _lagCompensation);\r\n        this.serverPhysicsInterval = updateNumberFromUI(this.serverPhysicsInterval, _serverPhysicsInterval);\r\n        this.serverStateInterval = updateNumberFromUI(this.serverStateInterval, _serverStateInterval);\r\n        this.interpolation = _interpolation.checked;\r\n        this.interpolationTime = updateNumberFromUI(this.interpolationTime, _interpolationTime);\r\n    }.bind(this);\r\n\r\n    var updateNumberFromUI = function(old_value, input) {\r\n        var new_value = parseInt(input.value);\r\n        if (isNaN(new_value)) {\r\n            new_value = old_value;\r\n        }\r\n        input.value = new_value;\r\n        return new_value;\r\n    };\r\n\r\n    _lagCompensation.onchange = updateParamFromUI;\r\n    _serverPhysicsInterval.onchange = updateParamFromUI;\r\n    _serverStateInterval.onchange = updateParamFromUI;\r\n    _interpolation.onchange = updateParamFromUI;\r\n    _interpolationTime.onchange = updateParamFromUI;\r\n\r\n    // Read initial parameters from the UI.\r\n    updateParamFromUI();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/others/debug.js","module.exports = Clear;\r\n\r\n\r\nfunction Clear() {}\r\n\r\n/**\r\n * #2 tell the server to stop send updates \r\n * @return {Buffer}\r\n */\r\nClear.prototype.form = function() {\r\n    var buf = new ArrayBuffer(1);\r\n    var view = new DataView(buf);\r\n\r\n    view.setUint8(0, 2);\r\n\r\n    return buf;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/socket/packet/Clear.js","module.exports = Input;\r\n\r\n\r\nfunction Input(input) {\r\n    this.input = input;\r\n}\r\n\r\n/**\r\n * #input\r\n * @return {Buffer}\r\n */\r\nInput.prototype.form = function() {\r\n    var buf = new ArrayBuffer(1);\r\n    var view = new DataView(buf);\r\n\r\n    view.setUint8(0, this.input);\r\n\r\n    return buf;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/socket/packet/Input.js","var BufferWriter = require('../../../../../shared/BufferWriter');\r\n\r\nmodule.exports = Submit;\r\n\r\nfunction Submit(name) {\r\n    this.name = name;\r\n}\r\n\r\n/**\r\n * #1, username\r\n * @return {Buffer}\r\n */\r\nSubmit.prototype.form = function() {\r\n    var buf = new BufferWriter();\r\n\r\n    buf.setUint8(1);\r\n    buf.setStringUTF8(this.name);\r\n\r\n    return buf.form();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/socket/packet/Submit.js","module.exports = {\r\n    Submit: require('./Submit'),\r\n    Clear: require('./Clear'),\r\n    Input: require('./Input'),\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/socket/packet/index.js","var BufferReader = require('../../../../shared/BufferReader'),\r\n    cfg = require('../../../../shared/config');\r\n\r\nexports = module.exports = Receiver;\r\n\r\nfunction Receiver() {\r\n    this.seqUpdates = 0;\r\n    this.handler = {\r\n        1: this.onMsgSubmit.bind(this),\r\n        2: this.onMsgClear.bind(this),\r\n        // 1: this.message_onSpectate,\r\n        10: this.onMsgUpdate.bind(this),\r\n    };\r\n    this.handleSocketEvents();\r\n}\r\n\r\n\r\nReceiver.prototype = {\r\n    /**\r\n     * handle onmessage, onclose\r\n     * @return {void}\r\n     */\r\n    handleSocketEvents: function() {\r\n        this.socket.onmessage = function(msg) {\r\n            var buf = msg.data;\r\n            this.handleMessage(buf);\r\n        }.bind(this);\r\n\r\n        this.socket.onclose = function() {\r\n            this.onDisconnect();\r\n        }.bind(this);\r\n\r\n        this.socket.onerror = function(evt) {\r\n            console.log(\"ERROR \" + evt.data);\r\n        };\r\n    },\r\n\r\n    /**\r\n     * get the packetId of a message if not empty\r\n     * @param  {Buffer} buf\r\n     * @return {void}\r\n     */\r\n    handleMessage: function(buf) {\r\n        if (buf.byteLength === 0) return;\r\n        var view = new DataView(buf);\r\n        var packetId = view.getUint8(0);\r\n        // console.log(packetId + \"...\" + this.selfId);\r\n        if (!this.handler.hasOwnProperty(packetId)) return;\r\n        this.handler[packetId](buf);\r\n    },\r\n\r\n    onMsgClear: function(msg) {\r\n        this.stateController.clearEntities();\r\n\r\n        //if game over\r\n        if (this.selfId !== -1) {\r\n            this.selfId = -1;\r\n            this.inTransition = true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * inTransition, set selfId, clearEntities before joining game\r\n     * inTransition false to stop spectator spawn\r\n     * @param  {Buffer} msg\r\n     * @return {void}\r\n     */\r\n    onMsgSubmit: function(msg) {\r\n        var buf = new BufferReader(msg);\r\n        buf.addOffset(1);\r\n        var id = buf.getUint16();\r\n        console.log(id);\r\n        this.selfId = id;\r\n        this.inTransition = true;\r\n    },\r\n\r\n    /**\r\n     * onUpdate, broadcast loop\r\n     */\r\n    onMsgUpdate: function(msg) {\r\n        // cl\r\n        var buf = new BufferReader(msg);\r\n        buf.addOffset(1);\r\n        var t = buf.getUint32();\r\n        // console.log(t - this.stateController.serverTime);\r\n        if (this.stateController.rendering) {\r\n            this.stateController.rendered -= (t - this.stateController.serverTime);\r\n            // console.log(\"whut \" + (t - this.stateController.serverTime));\r\n        }\r\n        // console.log((t - this.stateController.serverTime));\r\n        this.stateController.setServerTime(t);\r\n\r\n        var flagsMain = buf.getFlags(),\r\n            updatePsFlag = flagsMain[0],\r\n            playersScopeRemoveFlag = flagsMain[1],\r\n            shootsScopeInitFlag = flagsMain[2],\r\n            foodsScopeInitFlag = flagsMain[3],\r\n            foodsScopeRemoveFlag = flagsMain[4],\r\n            foodsScopeEatFlag = flagsMain[5],\r\n            updateBoardFlag = flagsMain[6];\r\n        if (updatePsFlag) {\r\n            var lenUpdatePs = buf.getUint8(),\r\n                updatePs = [];\r\n\r\n            // console.log(this.stateController.playerController.entities);\r\n            // console.log(\"new \" + lenUpdatePs);\r\n            for (var i = 0; i < lenUpdatePs; i++) {\r\n                var id = buf.getUint16(),\r\n                    state = {},\r\n                    name, ballAngle;\r\n\r\n                var flagsPlayer = buf.getFlags(),\r\n                    nameFlag = flagsPlayer[0],\r\n                    xFlag = flagsPlayer[1],\r\n                    yFlag = flagsPlayer[2],\r\n                    vxFlag = flagsPlayer[3],\r\n                    vyFlag = flagsPlayer[4],\r\n                    massFlag = flagsPlayer[5];\r\n                state.ring = flagsPlayer[6];\r\n                state.dashing = flagsPlayer[7];\r\n\r\n                var flagsPlayer2 = buf.getFlags(),\r\n                    ballAngleFlag = flagsPlayer2[0];\r\n\r\n                if (nameFlag) {\r\n                    name = buf.getStringUTF8();\r\n                }\r\n                if (xFlag) {\r\n                    state.x = buf.getFloat32();\r\n                }\r\n                if (yFlag) {\r\n                    state.y = buf.getFloat32();\r\n                }\r\n                if (vxFlag) {\r\n                    var vxModif = buf.getInt16();\r\n                    state.vx = vxModif / 100.0;\r\n                }\r\n                if (vyFlag) {\r\n                    var vyModif = buf.getInt16();\r\n                    state.vy = vyModif / 100.0;\r\n                }\r\n                if (massFlag) {\r\n                    state.mass = buf.getUint32();\r\n                }\r\n\r\n                if (ballAngleFlag) {\r\n                    ballAngle = buf.getFloat32();\r\n                    console.log(\"angle \" + ballAngle);\r\n                }\r\n\r\n                if (!nameFlag) {\r\n                    updatePs.push([id, state]);\r\n                } else {\r\n                    console.log(id);\r\n                    updatePs.push([id, state, name, ballAngle]);\r\n                }\r\n            }\r\n            this.stateController.addPlayerUpdates(t, updatePs);\r\n        }\r\n\r\n\r\n        //foods to remove: id\r\n        if (playersScopeRemoveFlag) {\r\n            var lenPlayersScopeRemove = buf.getUint16(),\r\n                playersScopeRemove = [];\r\n            for (var i = 0; i < lenPlayersScopeRemove; i++) {\r\n                var id = buf.getUint16();\r\n                playersScopeRemove.push(id);\r\n            }\r\n            this.stateController.updatePlayerRemoveStates(playersScopeRemove);\r\n        }\r\n\r\n        if (shootsScopeInitFlag) {\r\n            var lenShootsScopeInit = buf.getUint8(),\r\n                shootsScopeInit = [];\r\n            for (var i = 0; i < lenShootsScopeInit; i++) {\r\n                var state = {};\r\n\r\n                state.x = buf.getFloat32();\r\n                state.y = buf.getFloat32();\r\n                state.mass = buf.getUint16();\r\n                state.lifeTime = buf.getUint16();\r\n                shootsScopeInit.push([null, state]);\r\n            }\r\n            this.stateController.updateShootStates(shootsScopeInit);\r\n        }\r\n\r\n        // new foods: id, xReal, yReal\r\n        if (foodsScopeInitFlag) {\r\n            var lenFoodsScopeInit = buf.getUint16(),\r\n                foodsScopeInit = [];\r\n            for (var i = 0; i < lenFoodsScopeInit; i++) {\r\n                var id = buf.getUint16(),\r\n                    state = {\r\n                        movingTime: 0,\r\n                        angle: 0,\r\n                        vr: Math.random(),\r\n                    };\r\n\r\n                state.xReal = buf.getFloat32();\r\n                state.yReal = buf.getFloat32();\r\n                state.x = state.xReal;\r\n                state.y = state.yReal;\r\n                var mass = buf.getUint8();\r\n                foodsScopeInit.push([id, state, mass]);\r\n            }\r\n            this.stateController.updateFoodInitStates(foodsScopeInit);\r\n        }\r\n\r\n        //foods to remove: id\r\n        if (foodsScopeRemoveFlag) {\r\n            var lenFoodsScopeRemove = buf.getUint16(),\r\n                foodsScopeRemove = [];\r\n            for (var i = 0; i < lenFoodsScopeRemove; i++) {\r\n                var id = buf.getUint16();\r\n                foodsScopeRemove.push(id);\r\n            }\r\n            this.stateController.updateFoodRemoveStates(foodsScopeRemove);\r\n        }\r\n\r\n        //foods to eat: id, referrerId\r\n        if (foodsScopeEatFlag) {\r\n            var lenFoodsScopeEat = buf.getUint8(),\r\n                foodsScopeEat = [];\r\n            for (var i = 0; i < lenFoodsScopeEat; i++) {\r\n                var id = buf.getUint16(),\r\n                    referrerId = buf.getUint16();\r\n                foodsScopeEat.push([id, referrerId]);\r\n            }\r\n            this.stateController.updateFoodEatStates(foodsScopeEat);\r\n        }\r\n\r\n        if (updateBoardFlag) {\r\n            var lenUpdateBoard = buf.getUint8(),\r\n                updateBoard = [];\r\n            for (var i = 0; i < lenUpdateBoard; i++) {\r\n                var name = buf.getStringUTF8();\r\n                updateBoard.push(name);\r\n            }\r\n            this.stateController.updateBoard(updateBoard);\r\n        }\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/socket/receiver.js","var Packet = require('./packet');\r\n\r\nexports = module.exports = Sender;\r\n\r\nfunction Sender() {\r\n    this.onSubmit();\r\n}\r\n\r\nSender.prototype = {\r\n    /**\r\n     * form the final packet and send it\r\n     * @param  {Packet}\r\n     * @return {void}\r\n     */\r\n    sendMessage: function(packet) {\r\n        if (this.socket.readyState === 1) {\r\n            var buf = packet.form();\r\n            this.socket.send(buf);\r\n        } else {\r\n            this.onDisconnect();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * onSubmit, send the username\r\n     * @return {void}\r\n     */\r\n    onSubmit: function() {\r\n        var signForm = document.getElementById(\"sign-form\");\r\n        var signDivUsername = document.getElementById(\"signDiv-username\");\r\n\r\n        signForm.onsubmit = function(e) {\r\n            e.preventDefault();\r\n            // this.sendMessage(new Packet.Clear());\r\n            this.sendMessage(new Packet.Submit(signDivUsername.value));\r\n        }.bind(this);\r\n    },\r\n\r\n    onSubmitted: function() {\r\n        this.sendMessage(new Packet.SubmitACK());\r\n    },\r\n\r\n    onInput: function(input) {\r\n        this.sendMessage(new Packet.Input(input));\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/client/socket/sender.js","exports = module.exports = GameLoop;\r\n\r\nfunction GameLoop() {\r\n    //polyfill\r\n    this.requestAnimFrame = (function() {\r\n        return window.requestAnimationFrame ||\r\n            window.webkitRequestAnimationFrame ||\r\n            window.mozRequestAnimationFrame ||\r\n            window.oRequestAnimationFrame ||\r\n            window.msRequestAnimationFrame ||\r\n            function(callback) {\r\n                window.setTimeout(callback, 1000 / 60);\r\n            };\r\n    }());\r\n    this.now = new Date();\r\n    this.accum = 0.0;\r\n}\r\n\r\nGameLoop.prototype.start = function(updateCallback, renderCallback) {\r\n    var self = this;\r\n\r\n    function loop() {\r\n        self.requestAnimFrame.call(window, loop);\r\n\r\n        var newTime = new Date(),\r\n            frameTime = newTime - self.now;\r\n        if (frameTime > 250) {\r\n            frameTime = 250;\r\n        }\r\n        self.now = newTime;\r\n        self.accum += frameTime;\r\n\r\n        while (self.accum >= 15) {\r\n            updateCallback();\r\n            self.accum -= 15;\r\n        }\r\n\r\n        renderCallback();\r\n    }\r\n    loop();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/gameloop.js","/** ?\r\n * The MIT License (MIT)\r\nCopyright (c) 2013 Jerome Etienne\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nexports = module.exports = Keyboard;\r\n\r\nfunction Keyboard() {\r\n    // to store the current states: {keyCodes: boolean}\r\n    this.keyCodes = {};\r\n\r\n    //used to oblige to keyUp after keyDown\r\n    this.keyUp = {\r\n        left: true,\r\n        up: true,\r\n        right: true,\r\n        down: true,\r\n        space: true,\r\n    };\r\n\r\n    this.alias = {\r\n        /*'left': 37,\r\n        'up': 38,\r\n        'right': 39,\r\n        'down': 40,*/\r\n        'leftEU': 65,\r\n        'leftUS': 81,\r\n        'up': 90,\r\n        'right': 68,\r\n        'down': 83,\r\n        'space': 32,\r\n        'pageup': 33,\r\n        'pagedown': 34,\r\n        'tab': 9\r\n    };\r\n\r\n    // create callback to bind/unbind keyboard events\r\n    this.onKeyDown = function(e) {\r\n        this.onKeyChange(e, true);\r\n    }.bind(this);\r\n    this.onKeyUp = function(e) {\r\n        this.onKeyChange(e, false);\r\n    }.bind(this);\r\n\r\n    // bind keyEvents\r\n    document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    document.addEventListener(\"keyup\", this.onKeyUp, false);\r\n    window.addEventListener(\"keydown\", function(e) {\r\n        // space and arrow keys\r\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n            e.preventDefault();\r\n        }\r\n    }, false);\r\n}\r\n\r\nKeyboard.prototype = {\r\n    /**\r\n     * To stop listening of the keyboard events\r\n     */\r\n    destroy: function() {\r\n        document.removeEventListener(\"keydown\", this.onKeyDown, false);\r\n        document.removeEventListener(\"keyup\", this.onKeyUp, false);\r\n    },\r\n\r\n    /**\r\n     * store in this.keyCodes, the keyboard dom event\r\n     * @param  {Event} e   : keyCode\r\n     * @param  {Boolean} pressed\r\n     * @return {void}\r\n     */\r\n    onKeyChange: function(e, pressed) {\r\n        // update this.keyCodes\r\n        var keyCode = e.keyCode;\r\n        this.keyCodes[keyCode] = pressed;\r\n    },\r\n\r\n    /**\r\n     * query keyboard state to know if a key is pressed of not\r\n     * then reset it\r\n     *\r\n     * @param {String} keyDesc the description of the key. format : modifiers+key e.g shift+A\r\n     * @return {Boolean} true if the key is pressed, false otherwise\r\n     */\r\n    pressed: function(keyDesc) {\r\n        var keys = keyDesc.split(\"+\");\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var key = keys[i];\r\n            var pressed, keyCode;\r\n            if (Object.keys(this.alias).indexOf(key) != -1) {\r\n                keyCode = this.alias[key];\r\n            } else {\r\n                // if not in alias\r\n                keyCode = key.toUpperCase().charCodeAt(0);\r\n            }\r\n            pressed = this.keyCodes[keyCode];\r\n            if (!pressed) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/keyboard.js","exports = module.exports = MouseState;\r\n\r\nfunction MouseState(canvas) {\r\n    this.canvas = canvas;\r\n    this.running = false;\r\n    this.click = false;\r\n    this.angle = 0;\r\n\r\n    this.wheel = 0;\r\n\r\n    this.canvas.addEventListener('click', function(e) {\r\n        this.onClick(e);\r\n    }.bind(this));\r\n\r\n    this.canvas.addEventListener('mousewheel', function(e) {\r\n        this.onMouseWheel(e);\r\n    }.bind(this));\r\n}\r\n\r\nMouseState.prototype = {\r\n    onClick: function(e) {\r\n        if (!this.running) return;\r\n\r\n        e = e || window.event;\r\n        this.click = (e.type == 'click');\r\n        var mouseX = e.pageX - this.canvas.offsetLeft;\r\n        var mouseY = e.pageY - this.canvas.offsetTop;\r\n\r\n        var x = -this.canvas.clientWidth / 2 + mouseX;\r\n        var y = -this.canvas.clientHeight / 2 + mouseY;\r\n        this.angle = Math.atan2(y, x);\r\n    },\r\n\r\n    onMouseWheel: function(e, delta) {\r\n        if (!this.running) return;\r\n\r\n        if (e.deltaY > 0) {\r\n            this.wheel--;\r\n        } else if (e.deltaY < 0) {\r\n            this.wheel++;\r\n        }\r\n\r\n        e.preventDefault();\r\n        //this disable 'scroll' event for the 'mousewheel' event\r\n        // return false;\r\n    },\r\n\r\n    /**\r\n     * return number of wheeled event and reset it\r\n     * @return {Boolean} this.wheel\r\n     */\r\n    wheeled: function() {\r\n        var wheeled = this.wheel;\r\n        this.wheel = 0;\r\n        return wheeled;\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/mouse.js","module.exports = BufferReader;\r\n\r\n//little endian\r\nfunction BufferReader(buf) {\r\n    this.buf = buf;\r\n    this.view = new DataView(this.buf);\r\n    this.offset = 0;\r\n}\r\n\r\nBufferReader.prototype = {\r\n    getUint8: function() {\r\n        var data = this.view.getUint8(this.offset);\r\n        this.offset += 1;\r\n        return data;\r\n    },\r\n\r\n    getInt8: function() {\r\n        var data = this.view.getInt8(this.offset);\r\n        this.offset += 1;\r\n        return data;\r\n    },\r\n\r\n    getUint16: function() {\r\n        var data = this.view.getUint16(this.offset, true);\r\n        this.offset += 2;\r\n        return data;\r\n    },\r\n\r\n    getInt16: function() {\r\n        var data = this.view.getInt16(this.offset, true);\r\n        this.offset += 2;\r\n        return data;\r\n    },\r\n\r\n    getUint32: function() {\r\n        var data = this.view.getUint32(this.offset, true);\r\n        this.offset += 4;\r\n        return data;\r\n    },\r\n\r\n    getInt32: function() {\r\n        var data = this.view.getInt32(this.offset, true);\r\n        this.offset += 4;\r\n        return data;\r\n    },\r\n\r\n    getFloat32: function() {\r\n        var data = this.view.getFloat32(this.offset, true);\r\n        this.offset += 4;\r\n        return data;\r\n    },\r\n\r\n    getStringUTF8: function() {\r\n        var name = \"\";\r\n        var charCodes = [];\r\n        var length = this.getUint8();\r\n        for (var i = 0; i < length; i++) {\r\n            var charCode = this.getUint8();\r\n            charCodes.push(charCode);\r\n        }\r\n\r\n        if (length) {\r\n            try {\r\n                name = decodeURIComponent(escape(String.fromCharCode.apply(null, charCodes)));\r\n            } catch (e) {}\r\n        }\r\n        // console.log(name);\r\n\r\n        return name;\r\n    },\r\n\r\n    /**\r\n     * get 8 flags from 1 byte\r\n     * @return {list}        \r\n     */\r\n    getFlags: function() {\r\n        var data = this.getUint8();\r\n        var flags = this.fromByte(data);\r\n        return flags;\r\n    },\r\n\r\n\r\n    fromByte: function(byte) {\r\n        var arr = new Array(8);\r\n        for (var i = 0; i < 8; i++) {\r\n            arr[i] = (byte & (1 << i)) !== 0;\r\n        }\r\n        return arr;\r\n    },\r\n\r\n    addOffset: function(length) {\r\n        this.offset += length;\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/BufferReader.js","module.exports = BufferWriter;\r\n\r\n/**\r\n * Used for big packets\r\n */\r\nfunction BufferWriter() {\r\n    this.bytes = [];\r\n    this.miniBuf = new ArrayBuffer(4);\r\n    this.miniView = new DataView(this.miniBuf);\r\n}\r\n\r\n/**\r\n * true: little endian\r\n * add each data in this.miniBuf\r\n * add each byte to this.bytes\r\n * @type {Object}\r\n */\r\nBufferWriter.prototype = {\r\n    setUint8: function(data) {\r\n        this.miniView.setUint8(0, data);\r\n        this.addToBytes(1);\r\n    },\r\n\r\n    setInt8: function(data) {\r\n        this.miniView.setInt8(0, data);\r\n        this.addToBytes(1);\r\n    },\r\n\r\n    setUint16: function(data) {\r\n        this.miniView.setUint16(0, data, true);\r\n        this.addToBytes(2);\r\n    },\r\n\r\n    setInt16: function(data) {\r\n        this.miniView.setInt16(0, data, true);\r\n        this.addToBytes(2);\r\n    },\r\n\r\n    setUint32: function(data) {\r\n        this.miniView.setUint32(0, data, true);\r\n        this.addToBytes(4);\r\n    },\r\n\r\n    setInt32: function(data) {\r\n        this.miniView.setInt32(0, data, true);\r\n        this.addToBytes(4);\r\n    },\r\n\r\n    setFloat32: function(data) {\r\n        this.miniView.setFloat32(0, data, true);\r\n        this.addToBytes(4);\r\n    },\r\n\r\n    /**\r\n     * if username not empty:\r\n     * Javascript String are stored in UTF-16\r\n     * encodeURIComponent to get UTF-8 bytes URL-encoded\r\n     * unescape to decode\r\n     * send all the charCode bytes\r\n     * @param {String} data\r\n     */\r\n    setStringUTF8: function(data) {\r\n        if (data && data.length) {\r\n\r\n            var utf8 = unescape(encodeURIComponent(data));\r\n            // REVIEW: max 255 bytes\r\n            this.setUint8(utf8.length);\r\n            for (var i = 0; i < utf8.length; i++) {\r\n                this.setUint8(utf8.charCodeAt(i));\r\n            }\r\n        } else {\r\n            this.setUint8(0);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * set 8 flags in one byte\r\n     * @param {list} flags 0-1\r\n     */\r\n    setFlags: function(flags) {\r\n        var data = this.toByte(flags);\r\n        this.setUint8(data);\r\n    },\r\n\r\n    /**\r\n     * convert 8 binary to 1 byte\r\n     * @param  {list} arr of binary\r\n     * @return {int}     byte\r\n     */\r\n    toByte: function(arr) {\r\n        var byte = 0;\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (arr[i]) {\r\n                byte |= 1 << i;\r\n            }\r\n        }\r\n        return byte;\r\n    },\r\n\r\n    /**\r\n     * push all the bytes of this.miniBuf in this.bytes\r\n     * then clear this.miniBuf\r\n     * @param {int} lenBytes\r\n     */\r\n    addToBytes: function(lenBytes) {\r\n        for (var i = 0; i < lenBytes; i++) {\r\n            this.bytes.push(this.miniView.getUint8(i));\r\n        }\r\n        this.clearMiniBuf();\r\n    },\r\n\r\n    /**\r\n     * clear this.miniBuf after addToBytes\r\n     * @return {void}\r\n     */\r\n    clearMiniBuf: function() {\r\n        this.miniBuf = new ArrayBuffer(4);\r\n        this.miniView = new DataView(this.miniBuf);\r\n    },\r\n\r\n    /**\r\n     * form the final Buffer from this.bytes\r\n     * @return {Buffer}\r\n     */\r\n    form: function() {\r\n        var buf = new ArrayBuffer(this.bytes.length);\r\n        var view = new DataView(buf);\r\n        for (var i = 0; i < this.bytes.length; i++) {\r\n            view.setUint8(i, this.bytes[i]);\r\n        }\r\n        return buf;\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/BufferWriter.js","var config = require('./config.global');\n\nconfig.env = 'development';\n\nmodule.exports = config;\n\n\n\n// WEBPACK FOOTER //\n// ./shared/config/config.development.js","module.exports = {\r\n    env: 'development',\r\n    \r\n    serverPort: process.env.PORT || 3000,\r\n    // serverUrl: 'localhost',\r\n    serverUrl: 'flapzd.herokuapp.com',\r\n    serverMaxGamers: 10,\r\n    serverMaxSameIp: 5,\r\n    serverLagCompensation: 0,\r\n    serverPacketMaxSize: 128, //OPTI: serverPacketMaxSize\r\n    \r\n    tickMain: 50, //main loop - times in ms\r\n    tickBoard: 10, //update board - this * tickMain\r\n    tickPhysics: 17, //update physics\r\n    \r\n    tickState: 50, //send state, each player\r\n    tickScope: 8, //scope = this * tickState\r\n    \r\n    clientMaxUpdateBuffer: 120,\r\n    clientInterpolationTime: 100,\r\n    clientSmoothingFactor: 0.3,\r\n    \r\n    debug: false,\r\n    debugMove: false,\r\n    debugZoom: true, //to remove!\r\n    debugTileSize: false,\r\n    debugSelfScope: false,\r\n    debugBorder: false,\r\n    \r\n    debugRingHitbox: false,\r\n    \r\n    zoomFactor: 1.1,\r\n    zoomScaleLimit: 2.5,\r\n    \r\n    /**\r\n    * inactive_destroy = 5*60*1000;   //time in ms when to destroy inactive balls\r\n    * inactive_check   = 10*1000;     //time in ms when to search inactive balls\r\n    * spawn_interval   = 200;         //time in ms for respawn interval. 0 to disable (if your custom server don't have spawn problems)\r\n    * spawn_attempts   = 25;          //how much attempts to spawn before give up\r\n    */\r\n    \r\n    //balance size\r\n    scaleMassFactor: 0.001,\r\n    \r\n    ballInitSize: 20,\r\n    ballFactor: 0.5,\r\n    ballSpriteInitSize: 100,\r\n    ballSpriteFactor: 2,\r\n    ringInitSize: 100,\r\n    ringFactor: 2,\r\n    ringMaxInitSize: 151,\r\n    ringMaxFactor: 4.1,\r\n    \r\n    ballTreshold: 500,\r\n    ballSpeed: 1.4,\r\n    \r\n    ringFreqInit: 2000,\r\n    ringFreqFactor: 20,\r\n    ringTime: 300,\r\n    \r\n    //Map 960x600\r\n    scopeRatio: 16 / 9,\r\n    scopeInitX: 1280, //1280 * 0.7,\r\n    scopeInitY: 720, //720 * 0.7,\r\n    tileAmountX: 100,\r\n    tileAmountY: 100,\r\n    tileScopeAmountX: 17, //odd\r\n    tileScopeAmountY: 11, //odd\r\n    tileFoodRange: 5, //range check to eat foods\r\n    \r\n    minimapRad: 50,\r\n    miniselfRad: 3,\r\n    midLimitRad: 3000,\r\n    midLimitStroke: 1600,\r\n    midLimitOffset: 1400,\r\n    endLimitRad: 10000,\r\n    endLimitStroke: 1600,\r\n    endLimitOffset: 6000,\r\n    mapSize: 23200, //should be bigger to not see black\r\n    mapScale: 0.65,\r\n    tunnelHeight: 300,\r\n    \r\n    //Player\r\n    playerNameMaxSize: 15,\r\n    playerImmunityTime: 10000,\r\n    playerVx: 152,\r\n    playerVy: 240,\r\n    playerGravity: 825 * 0.8,\r\n    playerMinMassDash: 0,\r\n    playerInitMass: 0, //debug\r\n    selfRadiusInitSize: 25,\r\n    selfRadiusFactor: 0.16,\r\n    \r\n    // playerInitSize: 30, //init size sprite/hitbox\r\n    playerSpriteInitSize: 60, //init size sprite/hitbox\r\n    playerSpriteFactor: 0.8,\r\n    debugSelfHitbox: false,\r\n    \r\n    \r\n    dashSpeed: 800,\r\n    dashMassLoss: 1,\r\n    dashTime: 500,\r\n    //#sample of dash texture\r\n    dashTxtSize: 4,\r\n    \r\n    shootInitSize: 64,\r\n    shootTime: 1000,\r\n    \r\n    //Foods - server, shared, client\r\n    foodSpawnAmount: 500, //spawn amount for each click\r\n    foodInsideProportion: 0.5,\r\n    foodMasses: [1, 2, 3, 4, 12, 13], //random spawning masses\r\n     \r\n    foodHitbox: 20, //radius - food eating\r\n    foodInitSize: 10,\r\n    foodFactor: 5.6,\r\n    \r\n    foodSpriteInitSize: 6, //sprite\r\n    foodSpriteFactor: 15, //sprite\r\n    foodEatenHitbox: 8, //radius - food eaten (not mass dependent)\r\n    foodMovingTime: 1000, //attracting maximal time (speed)\r\n    foodRotationSpeed: 0.0035, //idle rotation speed\r\n    foodRotationRadius: 8, //idle rotation radius \r\n    debugFood: false, //not used\r\n    debugFoodHitbox: false,\r\n    \r\n    gradColors: [\r\n        0xBAFF74, //0 green\r\n        0x6780FF, //1 light blue\r\n        0xB9FFFF, //2 cyan\r\n        0xFFA42B, //3 orange\r\n        0xB87FFF, //4 purple\r\n        0xFF9090, //5 crusta\r\n        0xFF5252, //6 POMEGRANATE\r\n        0xFF71E8, //7 pink\r\n        0xFCE966 //8 yellow\r\n    ],\r\n    // 0xffcdd2; //nop\r\n    // 0xFF83B8; //nop?\r\n    // 0xBF55FF; //nop?\r\n    \r\n    //Images\r\n    //playerImage: '/client/img/planet.png',\r\n    // playerSet: '/client/img/flappy.json',\r\n    playerSet: '/client/img/grumpy.json',\r\n    fireballSet: '/client/img/fireball.json',\r\n    ringImg: '/client/img/firewater.png',\r\n    shootImg: '/client/img/bullet.png',\r\n    foodImg: '/client/img/v9.png',\r\n    // mapImg: '/client/img/clouds.jpg',\r\n    // mapImg: '/client/img/Background Black 512.jpg',\r\n    mapImg: '/client/img/black.jpg',\r\n    // mapImg: '/client/img/Background Transparency.png',\r\n    // mapImg: '/client/img/bggray.jpg',\r\n    // mapImg: '/client/img/wormax.png',\r\n    // bgImg: '/client/img/bgred.jpg',\r\n    bgImg: '/client/img/wormax.png',\r\n    // bgImg: '/client/img/bgflowers.jpg',\r\n    \r\n    \r\n    spectatorInitState: {\r\n        x: 0,\r\n        y: 0,\r\n        mass: 0,\r\n    },\r\n    \r\n    textOpt: {\r\n        fontFamily: 'raleway',\r\n        fill: '#ffffff',\r\n        stroke: '#000000',\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/config/config.global.js","var cfg = require('./config'),\r\n    ic = require('./initCore'),\r\n    // crypto = require('crypto'),\r\n    lot = require('./lot');\r\n\r\n\r\n//client, not used\r\nexports.getExtrapolatedPlayerState = function(state, deltaTime) {\r\n    var newState = {};\r\n\r\n    newState.x = state.x;\r\n    newState.y = state.y;\r\n    newState.vx = state.vx;\r\n    newState.vy = state.vy;\r\n    newState.ring = state.ring;\r\n    newState.mass = state.mass;\r\n    newState.dashing = state.dashing;\r\n\r\n    if (newState.vy < cfg.playerVy) { // && new Date() - newState.lastFlap > 100) {\r\n        newState.vy += cfg.playerGravity * deltaTime;\r\n    }\r\n    if (newState.vy > cfg.playerVy) {\r\n        newState.vy = cfg.playerVy;\r\n    }\r\n\r\n    newState.x += newState.vx * deltaTime;\r\n    newState.y += newState.vy * deltaTime;\r\n    return newState;\r\n};\r\n\r\nvar isInMap = function(x, y) {\r\n    var distFromO = lot.distEucl(0, 0, x, y);\r\n    if (distFromO <= cfg.midLimitRad || (distFromO >= cfg.midLimitRad + cfg.midLimitStroke && distFromO <= cfg.endLimitRad) ||\r\n        lot.inRect(x, y, -(cfg.midLimitRad + cfg.midLimitStroke / 2), 0, cfg.midLimitStroke + 100, cfg.tunnelHeight) ||\r\n        lot.inRect(x, y, cfg.midLimitRad + cfg.midLimitStroke / 2, 0, cfg.midLimitStroke + 100, cfg.tunnelHeight)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nvar processKilled = function() {\r\n    // return ic.getInitPlayerState();\r\n    return false;\r\n};\r\n\r\n//physics\r\nexports.getNewPlayerState = function(player, deltaTime, tileController) {\r\n    var id = player.id,\r\n        state = player.state,\r\n        playerController = tileController.getPlayerController(),\r\n        shootController = tileController.getShootController(),\r\n        newState = {};\r\n\r\n    newState.x = state.x;\r\n    newState.y = state.y;\r\n    newState.ring = state.ring;\r\n    newState.mass = state.mass;\r\n    newState.dashing = state.dashing;\r\n\r\n    newState.immunity = state.immunity;\r\n    newState.startTime = state.startTime;\r\n    newState.vx = state.vx;\r\n    newState.vy = state.vy;\r\n    newState.lastFlap = state.lastFlap;\r\n    newState.lastRing = state.lastRing;\r\n    newState.lastDash = state.lastDash;\r\n    newState.canDash = state.canDash;\r\n    newState.dashX = state.dashX;\r\n    newState.dashY = state.dashY;\r\n    newState.dashRange = state.dashRange;\r\n    newState.dashDone = state.dashDone;\r\n\r\n    var selfRadius = lot.getSelfRadius(newState.mass);\r\n\r\n    processInputs(player, newState, tileController, shootController);\r\n    checkImmunity(newState);\r\n\r\n    if (newState.immunity) return newState;\r\n\r\n    if (!processMove(newState, deltaTime)) {\r\n        return processKilled();\r\n    }\r\n\r\n    //only foods on these tiles !\r\n    var newTiles = tileController.getTiles(newState.x, newState.y, cfg.tileFoodRange, cfg.tileFoodRange);\r\n    checkFoodsEating(newState, newTiles, selfRadius, player);\r\n    // checkRing(newState);\r\n\r\n    if (newState.dashing) return newState;\r\n\r\n    if (checkBallKill(newState, tileController, playerController, selfRadius, id)) {\r\n        return processKilled();\r\n    }\r\n    // if (checkBallKill(newState, tileController, playerController, selfRadius, id) ||\r\n    //     checkShootsKill(newState, tileController, shootController, selfRadius, id))\r\n\r\n    return newState;\r\n};\r\n\r\nvar processInputs = function(player, newState, tileController, shootController) {\r\n    if (cfg.debugMove) {\r\n        newState.vx = 0;\r\n    }\r\n\r\n    if (player.pressLeft && !newState.dashing) {\r\n        applyLeft(newState);\r\n    } else if (player.pressRight && !newState.dashing) {\r\n        applyRight(newState);\r\n    } else if (player.pressDash && newState.mass >= cfg.playerMinMassDash) { //canDash\r\n        applyDash(player, newState, shootController);\r\n    } else if (player.pressClick) {\r\n        applySpawnFoods(tileController);\r\n    }\r\n};\r\n\r\nvar applyLeft = function(newState) {\r\n    newState.vx = -cfg.playerVx;\r\n    newState.vy = -cfg.playerVy;\r\n    newState.lastFlap = new Date();\r\n    if (newState.immunity) {\r\n        newState.immunity = false;\r\n    }\r\n\r\n    if (cfg.debugMove) {\r\n        newState.vx = -150;\r\n    }\r\n};\r\n\r\nvar applyRight = function(newState) {\r\n    newState.vx = cfg.playerVx;\r\n    newState.vy = -cfg.playerVy;\r\n    newState.lastFlap = new Date();\r\n    if (newState.immunity) {\r\n        newState.immunity = false;\r\n    }\r\n\r\n    if (cfg.debugMove) {\r\n        newState.vx = 150;\r\n    }\r\n};\r\n\r\nvar applyDash = function(player, newState, shootController) {\r\n    //Reset dash, ring. Reduce mass.\r\n    newState.dashing = true;\r\n    newState.lastDash = new Date();\r\n    newState.lastRing = new Date();\r\n    newState.canDash = false;\r\n    newState.ring = false;\r\n    newState.mass = Math.round(newState.mass * cfg.dashMassLoss);\r\n\r\n    applyShoot(player, newState, shootController);\r\n};\r\n\r\nvar applyShoot = function(player, newState, shootController) {\r\n    //New shoot\r\n    // var newShoot = shootController.add(player);\r\n    shootController.add(player);\r\n\r\n    newState.dashX = newState.x;\r\n    newState.dashY = newState.y;\r\n    newState.dashRange = lot.getRingMax(newState.mass);\r\n    newState.dashDone = 0;\r\n};\r\n\r\nvar applySpawnFoods = function(tileController) {\r\n    for (var j = 0; j < cfg.foodSpawnAmount; j++) {\r\n        var foodState = ic.getInitFoodState();\r\n        var tile = tileController.getTile(foodState.x, foodState.y);\r\n        \r\n        var massIndex = lot.randomIntFromInterval(0, cfg.foodMasses.length - 1);\r\n        var mass = cfg.foodMasses[massIndex];\r\n        var newFood = tile.getFoodController().add(mass);\r\n        newFood.setState(foodState);\r\n    }\r\n};\r\n\r\nvar checkImmunity = function(newState) {\r\n    if (newState.immunity && new Date() - newState.startTime > cfg.playerImmunityTime) {\r\n        newState.immunity = false;\r\n        newState.vx = cfg.playerVx;\r\n        newState.vy = cfg.playerVy;\r\n    }\r\n};\r\n\r\nvar processMove = function(newState, deltaTime) {\r\n    var newPos;\r\n    var angle = Math.atan2(newState.vy, newState.vx);\r\n\r\n    if (!newState.dashing) {\r\n        newPos = normalMove(newState, deltaTime);\r\n    }\r\n    if (newState.dashing && newState.dashDone < newState.dashRange) {\r\n        newPos = dashMove(newState, deltaTime, angle);\r\n    }\r\n    if (newState.dashing && newState.dashDone >= newState.dashRange) {\r\n        newPos = dashEndMove(newState, angle);\r\n    }\r\n\r\n    if (isInMap(newPos.x, newPos.y)) {\r\n        newState.x = newPos.x;\r\n        newState.y = newPos.y;\r\n    } else {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nvar normalMove = function(newState, deltaTime) {\r\n    if (newState.vy < cfg.playerVy && new Date() - newState.lastFlap > 100) {\r\n        newState.vy += cfg.playerGravity * deltaTime;\r\n    }\r\n    if (newState.vy > cfg.playerVy) {\r\n        newState.vy = cfg.playerVy;\r\n    }\r\n\r\n    if (cfg.debugMove) {\r\n        newState.vy = 0;\r\n    }\r\n\r\n    return {\r\n        x: newState.x + newState.vx * deltaTime,\r\n        y: newState.y + newState.vy * deltaTime,\r\n    };\r\n};\r\n\r\nvar dashMove = function(newState, deltaTime, angle) {\r\n    newState.dashDone += cfg.dashSpeed * deltaTime;\r\n    return {\r\n        x: newState.x + cfg.dashSpeed * Math.cos(angle) * deltaTime,\r\n        y: newState.y + cfg.dashSpeed * Math.sin(angle) * deltaTime,\r\n    };\r\n};\r\n\r\nvar dashEndMove = function(newState, angle) {\r\n    newState.dashing = false;\r\n    return {\r\n        x: newState.dashX + newState.dashRange * Math.cos(angle),\r\n        y: newState.dashY + newState.dashRange * Math.sin(angle),\r\n    };\r\n};\r\n\r\nvar checkFoodsEating = function(newState, newTiles, selfRadius, player) {\r\n    //food eat and mass gain\r\n    for (var i = newTiles.length; i--;) {\r\n        var newTile = newTiles[i];\r\n        var foodController = newTile.getFoodController();\r\n        // console.log(newTile);\r\n\r\n        var foods = foodController.getEntities();\r\n        for (var j = foods.length; j--;) {\r\n            var food = foods[j];\r\n            // console.log(\"ohoh\");\r\n\r\n            var distPlayerFood = lot.distEucl(food.state.x, food.state.y, newState.x, newState.y);\r\n            const foodHitbox = lot.getFoodRadius(food.mass);\r\n            if (distPlayerFood < selfRadius + foodHitbox) {\r\n                newState.mass += food.mass;\r\n                foodController.remove(food, player.id);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nvar checkBallKill = function(newState, tileController, playerController, selfRadius, id) {\r\n    var players = playerController.getEntities();\r\n    for (var j = players.length; j--;) {\r\n        var killer = players[j];\r\n        //don't check spectators\r\n        if (players[j].id === -1) continue;\r\n        //suicide not possible\r\n        if (killer.id == id) continue;\r\n\r\n        var balls = killer.getBallController().getEntities();\r\n\r\n        for (var i = 0; i < balls.length; i++) {\r\n            var ball = balls[i];\r\n            //if active\r\n\r\n            if (checkKill(newState, tileController, selfRadius, ball)) return true;\r\n        }\r\n    }\r\n};\r\n\r\nvar checkShootsKill = function(newState, tileController, shootController, selfRadius, id) {\r\n    var shoots = shootController.getEntities();\r\n    for (var j = shoots.length; j--;) {\r\n        var shoot = shoots[j];\r\n        if (shoot.referrerId !== id && shoot.state.ring) {\r\n            if (checkKill(newState, tileController, selfRadius, shoot)) return true;\r\n        }\r\n    }\r\n};\r\n\r\nvar checkKill = function(newState, tileController, selfRadius, ball) {\r\n    var distPlayerBall = lot.distEucl(ball.state.x, ball.state.y, newState.x, newState.y);\r\n    var ballRadius = lot.getBallRadius(ball.state.mass);\r\n\r\n    if (selfRadius + ballRadius > distPlayerBall) {\r\n        for (var i = 0; i < 20; i++) {\r\n            // spawnFood(newState, tileController, i);\r\n        }\r\n\r\n        return true;\r\n    }\r\n};\r\n\r\n// var checkKill = function(newState, tileController, selfRadius, killer) {\r\n//     var distPlayers = lot.distEucl(killer.state.x, killer.state.y, newState.x, newState.y);\r\n//     var minScope = lot.getRingMin(killer.state.mass);\r\n//     var maxScope = lot.getRingMax(killer.state.mass);\r\n//\r\n//     if (minScope - selfRadius < distPlayers && distPlayers < selfRadius + maxScope) {\r\n//         for (var i = 0; i < 20; i++) {\r\n//             spawnFood(newState, tileController, i);\r\n//         }\r\n//\r\n//         return true;\r\n//     }\r\n// };\r\n\r\nvar spawnFood = function(newState, tileController, iangle) {\r\n    var foodState = {\r\n        x: newState.x + Math.cos(Math.PI * iangle / 10) * lot.getRingMin(newState.mass),\r\n        y: newState.y + Math.sin(Math.PI * iangle / 10) * lot.getRingMin(newState.mass),\r\n    };\r\n    var tileFood = tileController.getTile(foodState.x, foodState.y);\r\n    //NOTE size\r\n    var newFood = tileFood.getFoodController().add(cfg.foodMasses[2]);\r\n    newFood.setState(foodState);\r\n};\r\n\r\nvar checkRing = function(newState) {\r\n    var ringFreq = lot.getRingFreq(newState.mass);\r\n    if (new Date() - newState.lastRing > ringFreq && !newState.ring) {\r\n        newState.ring = true;\r\n        newState.lastRing = new Date();\r\n        if (!newState.canDash) {\r\n            newState.canDash = true;\r\n        }\r\n    }\r\n    if (new Date() - newState.lastRing > cfg.ringTime && newState.ring) {\r\n        newState.ring = false;\r\n        newState.lastRing = new Date();\r\n    }\r\n};\r\n\r\n//shared\r\nexports.getNewBallAngle = function(angle, deltaTime) {\r\n    var newAngle = (angle + cfg.ballSpeed * deltaTime) % (2 * Math.PI);\r\n    return newAngle;\r\n};\r\n\r\n//add and remove balls. Min 1 ball.\r\n//shared\r\nexports.checkNewBalls = function(player) {\r\n    var ballController = player.getBallController();\r\n    var balls = ballController.getEntities();\r\n    var playerState = player.state;\r\n    var playerMass = playerState.mass;\r\n\r\n    //client\r\n    if (!balls.length) {\r\n        ballController.add(playerState);\r\n    }\r\n    if (playerMass >= cfg.ballTreshold && balls.length === 1) {\r\n        ballController.add(playerState);\r\n    }\r\n    if (playerMass >= 2 * cfg.ballTreshold && balls.length === 2) {\r\n        ballController.add(playerState);\r\n    }\r\n};\r\n\r\n//server\r\nexports.getNewBallState = function(playerState, state, ballAngle, i) {\r\n    var angle = (ballAngle + i * 2 * Math.PI / 3) % (2 * Math.PI);\r\n    var mass = getBallMass(playerState.mass, i);\r\n\r\n    var newState = ic.getInitBallState(playerState, mass, angle);\r\n    newState.active = state.active;\r\n    // console.log(newState);\r\n    // console.log(newState.angle);\r\n    return newState;\r\n};\r\n\r\nvar getBallMass = function(playerMass, i) {\r\n    var massTresh = cfg.ballTreshold;\r\n    var massRem1 = playerMass - massTresh;\r\n    var massRem2 = playerMass - 2 * massTresh;\r\n    var massRem3 = playerMass - 3 * massTresh;\r\n    var massBalanced = massTresh + Math.round(massRem3 / 3);\r\n\r\n    var newMass;\r\n\r\n    if (i === 0) {\r\n        if (playerMass < massTresh) {\r\n            newMass = playerMass;\r\n        } else if (playerMass >= massTresh && playerMass < 3 * massTresh) {\r\n            newMass = massTresh;\r\n        } else {\r\n            newMass = massBalanced;\r\n        }\r\n    } else if (i === 1) {\r\n        if (playerMass >= massTresh && playerMass < 2 * massTresh) {\r\n            newMass = massRem1;\r\n        } else if (playerMass >= 2 * massTresh && playerMass < 3 * massTresh) {\r\n            newMass = massTresh;\r\n        } else {\r\n            newMass = massBalanced;\r\n        }\r\n    } else if (i === 2) {\r\n        if (playerMass >= 2 * massTresh && playerMass < 3 * massTresh) {\r\n            newMass = massRem2;\r\n        } else {\r\n            newMass = massBalanced;\r\n        }\r\n    }\r\n\r\n    return newMass;\r\n};\r\n\r\nexports.getNewShootState = function(shoot, deltaTime) {\r\n    var newState = {},\r\n        state = shoot.state;\r\n\r\n    newState.x = state.x;\r\n    newState.y = state.y;\r\n    newState.mass = state.mass;\r\n    newState.lifeTime = state.lifeTime + deltaTime;\r\n\r\n    newState.ring = state.ring;\r\n\r\n    if (!newState.ring && newState.lifeTime > cfg.dashTime) {\r\n        newState.ring = true;\r\n    }\r\n    if (newState.lifeTime > cfg.dashTime + cfg.shootTime) {\r\n        return false;\r\n    }\r\n    return newState;\r\n};\r\n\r\n/**\r\n * Prediction\r\n * if food.referrer is undefined: random circular moving\r\n * else: move the food towards referrer with movingTime\r\n *\r\n * @param  {Food} food\r\n * @param  {int} deltaTime\r\n * @return {booleanOrObject}    false if Food is eaten\r\n */\r\nexports.getNewFoodState = function(food, deltaTime) {\r\n    var newState = {},\r\n        state = food.state;\r\n    newState.xReal = state.xReal;\r\n    newState.yReal = state.yReal;\r\n    newState.angle = state.angle;\r\n    newState.vr = state.vr;\r\n    newState.movingTime = state.movingTime;\r\n\r\n    if (food.referrer === undefined) {\r\n        newState.angle = (state.angle + newState.vr * cfg.foodRotationSpeed * deltaTime) % (2 * Math.PI);\r\n        newState.x = state.xReal + cfg.foodRotationRadius * Math.cos(state.angle);\r\n        newState.y = state.yReal + cfg.foodRotationRadius * Math.sin(state.angle);\r\n    } else {\r\n        var referrerState = food.referrer.state;\r\n\r\n        newState.movingTime = state.movingTime + deltaTime;\r\n\r\n        var distX = referrerState.x - state.x;\r\n        var distY = referrerState.y - state.y;\r\n\r\n        newState.x = state.x + distX * newState.movingTime / cfg.foodMovingTime;\r\n        newState.y = state.y + distY * newState.movingTime / cfg.foodMovingTime;\r\n\r\n        //beautiful if you comment this...\r\n        if (lot.distEucl(newState.x, newState.y, referrerState.x, referrerState.y) < cfg.foodEatenHitbox) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    return newState;\r\n};\r\n\r\n//Client: oP oE\r\n/**\r\n * compute interpolated Player state\r\n * @param  {object} previousState\r\n * @param  {object} targetState\r\n * @param  {float} interpolationFactor\r\n * @return {object}                     interpolatedState\r\n */\r\nexports.getInterpolatedEntityState = function(previousState, targetState, interpolationFactor) {\r\n    var interpolatedState = {};\r\n    interpolatedState.x = previousState.x + interpolationFactor * (targetState.x - previousState.x);\r\n    interpolatedState.y = previousState.y + interpolationFactor * (targetState.y - previousState.y);\r\n    interpolatedState.vx = targetState.vx;\r\n    // if (targetState.vy - previousState.vy < 0) {\r\n    if ((targetState.vx / previousState.vx) < 0) {\r\n        interpolatedState.vy = targetState.vy;\r\n    } else {\r\n        interpolatedState.vy = previousState.vy + interpolationFactor * (targetState.vy - previousState.vy);\r\n    }\r\n    // interpolatedState.mass = targetState.mass;\r\n    interpolatedState.mass = Math.round(previousState.mass + interpolationFactor * (targetState.mass - previousState.mass));\r\n    interpolatedState.ring = targetState.ring;\r\n    interpolatedState.dashing = targetState.dashing;\r\n\r\n    return interpolatedState;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/core.js","exports = module.exports = Fps;\r\n\r\nfunction Fps() {\r\n    // The higher this value, the less the fps will reflect temporary variations\r\n    // A value of 1 will only keep the last value\r\n    this.filterStrength = 20;\r\n    this.frameTime = 0;\r\n    this.lastLoop = new Date();\r\n    this.thisLoop = null;\r\n    this.value = 0;\r\n    this.oldValue = 0;\r\n}\r\n\r\nFps.prototype.setFps = function(now) {\r\n    var thisFrameTime = (this.thisLoop = now) - this.lastLoop;\r\n    this.frameTime += (thisFrameTime - this.frameTime) / this.filterStrength;\r\n    this.lastLoop = this.thisLoop;\r\n};\r\n\r\nFps.prototype.getFps = function() {\r\n    return (1000 / this.frameTime).toFixed(1);\r\n};\r\n\r\nFps.prototype.startServer = function() {\r\n    setInterval(function() {\r\n        this.value = Math.ceil(1000 / this.frameTime);\r\n        if (this.value != this.oldValue) {\r\n            console.log(this.value + \" FPS\");\r\n            this.oldValue = this.value;\r\n        }\r\n    }.bind(this), 1000);\r\n};\r\n\r\n/*function Timer() {\r\n    this.elapsed = 0;\r\n    this.last = null;\r\n}\r\n\r\nTimer.prototype = {\r\n    tick: function(now) {\r\n        this.elapsed = (now - (this.last || now)) / 1000;\r\n        this.last = now;\r\n    },\r\n    fps: function() {\r\n        return Math.round(1 / this.elapsed);\r\n    }\r\n};*/\r\n\n\n\n// WEBPACK FOOTER //\n// ./shared/fps.js"],"sourceRoot":""}